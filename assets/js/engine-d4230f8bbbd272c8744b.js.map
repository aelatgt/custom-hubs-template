{"version":3,"sources":["webpack:///./node_modules/aframe/src/components/hand-controls.js","webpack:///./node_modules/aframe/src/components/laser-controls.js","webpack:///./node_modules/aframe/src/components/light.js","webpack:///./node_modules/aframe/src/components/line.js","webpack:///./node_modules/aframe/src/components/link.js","webpack:///./node_modules/aframe/src/components/look-controls.js","webpack:///./node_modules/aframe/src/components/material.js","webpack:///./node_modules/aframe/src/components/obj-model.js","webpack:///./node_modules/aframe/src/components/position.js","webpack:///./node_modules/aframe/src/components/raycaster.js","webpack:///./node_modules/aframe/src/components/rotation.js","webpack:///./node_modules/aframe/src/components/scale.js","webpack:///./node_modules/aframe/src/components/shadow.js","webpack:///./node_modules/aframe/src/components/sound.js","webpack:///./node_modules/aframe/src/components/visible.js","webpack:///./node_modules/aframe/src/components/wasd-controls.js","webpack:///./node_modules/aframe/src/components/scene/background.js","webpack:///./node_modules/aframe/src/components/scene/debug.js","webpack:///./node_modules/aframe/src/components/scene/embedded.js","webpack:///./node_modules/aframe/src/components/scene/inspector.js","webpack:///./node_modules/aframe/src/components/scene/fog.js","webpack:///./node_modules/aframe/src/components/scene/keyboard-shortcuts.js","webpack:///./node_modules/aframe/src/components/scene/pool.js","webpack:///./node_modules/aframe/src/components/scene/screenshot.js","webpack:///./node_modules/aframe/src/components/scene/stats.js","webpack:///./node_modules/aframe/vendor/rStats.js","webpack:///./node_modules/aframe/vendor/rStats.extras.js","webpack:///./node_modules/aframe/src/lib/rStatsAframe.js","webpack:///./node_modules/aframe/src/components/scene/vr-mode-ui.js","webpack:///./node_modules/aframe/src/geometries/index.js","webpack:///./node_modules/aframe/src/geometries/box.js","webpack:///./node_modules/aframe/src/geometries/circle.js","webpack:///./node_modules/aframe/src/geometries/cone.js","webpack:///./node_modules/aframe/src/geometries/cylinder.js","webpack:///./node_modules/aframe/src/geometries/dodecahedron.js","webpack:///./node_modules/aframe/src/geometries/icosahedron.js","webpack:///./node_modules/aframe/src/geometries/octahedron.js","webpack:///./node_modules/aframe/src/geometries/plane.js","webpack:///./node_modules/aframe/src/geometries/ring.js","webpack:///./node_modules/aframe/src/geometries/sphere.js","webpack:///./node_modules/aframe/src/geometries/tetrahedron.js","webpack:///./node_modules/aframe/src/geometries/torus.js","webpack:///./node_modules/aframe/src/geometries/torusKnot.js","webpack:///./node_modules/aframe/src/geometries/triangle.js","webpack:///./node_modules/aframe/src/shaders/index.js","webpack:///./node_modules/aframe/src/shaders/flat.js","webpack:///./node_modules/aframe/src/shaders/standard.js","webpack:///./node_modules/aframe/src/shaders/sdf.js","webpack:///./node_modules/aframe/src/shaders/msdf.js","webpack:///./node_modules/aframe/src/shaders/ios10hls.js","webpack:///./node_modules/aframe/src/systems/index.js","webpack:///./node_modules/aframe/src/systems/camera.js","webpack:///./node_modules/aframe/src/systems/geometry.js","webpack:///./node_modules/aframe/src/systems/gltf-model.js","webpack:///./node_modules/aframe/src/systems/light.js","webpack:///./node_modules/aframe/src/systems/material.js","webpack:///./node_modules/aframe/src/systems/renderer.js","webpack:///./node_modules/aframe/src/systems/shadow.js","webpack:///./node_modules/aframe/src/core/a-assets.js","webpack:///./node_modules/aframe/src/core/a-cubemap.js","webpack:///./node_modules/aframe/src/core/a-mixin.js","webpack:///./node_modules/aframe/src/extras/components/index.js","webpack:///./node_modules/aframe/src/extras/components/pivot.js","webpack:///./node_modules/aframe/src/extras/primitives/index.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-camera.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-cursor.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-curvedimage.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-gltf-model.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-image.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-light.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-link.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-obj-model.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-sky.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-sound.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-video.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/a-videosphere.js","webpack:///./node_modules/aframe-rounded/lib/rounded.js","webpack:///./node_modules/aframe-slice9-component/index.js","webpack:///./node_modules/three-buffer-vertex-data/index.js","webpack:///./node_modules/three-bmfont-text/lib/vertices.js","webpack:///./node_modules/three-bmfont-text/lib/utils.js","webpack:///./node_modules/aframe/src/core/system.js","webpack:///./node_modules/aframe/src/core/shader.js","webpack:///./node_modules/aframe/src/utils/debug.js","webpack:///./node_modules/three-ammo/constants.js","webpack:///./node_modules/aframe/src/core/a-register-element.js","webpack:///./node_modules/aframe/src/extras/primitives/getMeshMixin.js","webpack:///./node_modules/three-mesh-bvh/src/Utils/ThreeIntersectionUtilities.js","webpack:///./node_modules/three-mesh-bvh/src/Utils/ArrayBoxUtilities.js","webpack:///./node_modules/three-mesh-bvh/src/Utils/SeparatingAxisBounds.js","webpack:///./node_modules/three-mesh-bvh/src/Utils/MathUtilities.js","webpack:///./node_modules/three-mesh-bvh/src/Utils/SeparatingAxisTriangle.js","webpack:///./node_modules/three-mesh-bvh/src/Utils/OrientedBox.js","webpack:///./node_modules/three-mesh-bvh/src/MeshBVHNode.js","webpack:///./node_modules/three-mesh-bvh/src/Utils/RayIntersectTriUtlities.js","webpack:///./node_modules/three-mesh-bvh/src/Constants.js","webpack:///./node_modules/three-mesh-bvh/src/BVHConstructionContext.js","webpack:///./node_modules/three-mesh-bvh/src/MeshBVH.js","webpack:///./node_modules/three-mesh-bvh/src/MeshBVHVisualizer.js","webpack:///./node_modules/three-mesh-bvh/src/index.js","webpack:///./node_modules/aframe/src/constants/index.js","webpack:///./node_modules/three-ammo/index.js","webpack:///./node_modules/aframe/src/utils/bind.js","webpack:///./node_modules/aframe/src/core/a-node.js","webpack:///./src/workers/sketchfab-zip.worker.js","webpack:///./node_modules/aframe/src/lib/three.js","webpack:///./node_modules/aframe/src/core/schema.js","webpack:///./node_modules/aframe/src/core/component.js","webpack:///./node_modules/aframe/src/utils/index.js","webpack:///./node_modules/aframe/src/index.js","webpack:///./node_modules/aframe/src/core/a-entity.js","webpack:///./node_modules/three/examples/jsm/math/SimplexNoise.js","webpack:///./node_modules/aframe/node_modules/debug/browser.js","webpack:///./node_modules/three/examples/js/loaders/GLTFLoader.js","webpack:///./node_modules/aframe/src/core/scene/scenes.js","webpack:///./node_modules/three-to-ammo/index.js","webpack:///./node_modules/aframe/src/utils/coordinates.js","webpack:///./node_modules/aframe/src/utils/material.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives/meshPrimitives.js","webpack:///./node_modules/three/examples/js/pmrem/PMREMGenerator.js","webpack:///./node_modules/three/examples/js/pmrem/PMREMCubeUVPacker.js","webpack:///./node_modules/three/examples/js/controls/OrbitControls.js","webpack:///./node_modules/three/build/three.module.js","webpack:///./node_modules/three-pathfinding/dist/three-pathfinding.module.js","webpack:///./src/workers/gifparsing.worker.js","webpack:///./node_modules/three-bmfont-text/index.js","webpack:///./node_modules/aframe/src/core/geometry.js","webpack:///./node_modules/three-ammo/src/world.js","webpack:///./node_modules/three-ammo/src/body.js","webpack:///./node_modules/three-ammo/src/constraint.js","webpack:///./src/workers/color-shift.worker.js","webpack:///./node_modules/three/examples/jsm/exporters/GLTFExporter.js","webpack:///./node_modules/aframe/src/extras/primitives/primitives.js","webpack:///./node_modules/aframe/src/utils/isIOSOlderThan10.js","webpack:///./node_modules/aframe/node_modules/debug/debug.js","webpack:///./node_modules/aframe/src/utils/device.js","webpack:///./node_modules/aframe/src/utils/object-pool.js","webpack:///./node_modules/aframe/src/utils/entity.js","webpack:///./node_modules/aframe/src/utils/forceCanvasResizeSafariMobile.js","webpack:///./node_modules/aframe/src/utils/is-ie11.js","webpack:///./node_modules/three/examples/js/loaders/DRACOLoader.js","webpack:///./node_modules/three/examples/js/loaders/OBJLoader.js","webpack:///./node_modules/three/examples/js/loaders/MTLLoader.js","webpack:///./node_modules/aframe/src/utils/split.js","webpack:///./node_modules/aframe/src/utils/styleParser.js","webpack:///./node_modules/aframe/src/utils/tracked-controls.js","webpack:///./node_modules/aframe/src/constants/keyboardevent.js","webpack:///./node_modules/aframe/src/utils/src-loader.js","webpack:///./node_modules/aframe/src/core/scene/a-scene.js","webpack:///./node_modules/aframe/src/core/scene/metaTags.js","webpack:///./node_modules/aframe/src/core/scene/wakelock.js","webpack:///./node_modules/aframe/vendor/wakelock/wakelock.js","webpack:///./node_modules/aframe/vendor/wakelock/util.js","webpack:///./node_modules/aframe/src/core/scene/loadingScreen.js","webpack:///./node_modules/aframe/src/core/propertyTypes.js","webpack:///./node_modules/aframe/src/core/scene/postMessage.js","webpack:///./node_modules/aframe/src/components/index.js","webpack:///./node_modules/aframe/src/components/animation.js","webpack:///./node_modules/aframe/src/components/camera.js","webpack:///./node_modules/aframe/src/components/cursor.js","webpack:///./node_modules/aframe/src/components/geometry.js","webpack:///./node_modules/aframe/src/components/gltf-model.js"],"names":["registerComponent","__webpack_require__","MODEL_URLS","left","right","ANIMATIONS","open","point","pointThumb","fist","hold","thumbUp","EVENTS","getGestureEventName","gesture","active","eventName","thumb","module","exports","Component","schema","default","init","self","this","el","pressedButtons","touchedButtons","loader","THREE","GLTFLoader","setCrossOrigin","onGripDown","handleButton","onGripUp","onTrackpadDown","onTrackpadUp","onTrackpadTouchStart","onTrackpadTouchEnd","onTriggerDown","onTriggerUp","onTriggerTouchStart","onTriggerTouchEnd","onGripTouchStart","onGripTouchEnd","onThumbstickDown","onThumbstickUp","onAorXTouchStart","onAorXTouchEnd","onBorYTouchStart","onBorYTouchEnd","onSurfaceTouchStart","onSurfaceTouchEnd","addEventListener","onControllerConnected","onControllerDisconnected","object3D","visible","play","addEventListeners","pause","removeEventListeners","tick","time","delta","mesh","getObject3D","mixer","update","removeEventListener","previousHand","controlConfiguration","hand","data","model","orientationOffset","x","y","z","load","gltf","scene","children","AnimationMixer","clips","animations","setObject3D","position","set","rotation","setAttribute","remove","removeObject3D","button","evt","lastGesture","isPressed","isTouched","indexOf","determineGesture","animateGesture","emitGestureEvents","trackedControls","controllerId","isGripActive","isSurfaceActive","isTrackpadActive","isTriggerActive","isABXYActive","isVive","components","controller","id","getClip","clip","i","length","name","playAnimation","emit","reverse","fromAction","toAction","stopAllAction","clipAction","clampWhenFinished","loop","LoopRepeat","repetitions","timeScale","duration","weight","crossFadeTo","utils","defaultModelColor","type","config","modelEnabled","sceneEl","hasWebXR","controlsConfiguration","createRay","controllerConfig","detail","raycasterConfig","extend","showLine","raycaster","rayOrigin","origin","direction","modelReady","fuse","cursor","initDefaultModel","daydream-controls","downEvents","upEvents","gearvr-controls","oculus-go-controls","oculus-touch-controls","vive-controls","vive-focus-controls","windows-motion-controls","modelEl","document","createElement","primitive","radius","color","appendChild","bind","diff","debug","degToRad","Math","warn","angle","if","groundColor","decay","distance","min","intensity","penumbra","max","oneOf","schemaChange","target","castShadow","shadowBias","shadowCameraFar","shadowCameraFov","shadowCameraNear","shadowCameraTop","shadowCameraRight","shadowCameraBottom","shadowCameraLeft","shadowCameraVisible","shadowMapHeight","shadowMapWidth","shadowRadius","light","defaultTarget","rendererSystem","systems","renderer","system","registerLight","oldData","diffData","setLight","updateShadow","shadowsLoaded","Object","keys","forEach","key","value","applyColorCorrection","hasLoaded","onSetTarget","newLight","getLight","translateY","cameraHelper","CameraHelper","shadow","camera","bias","mapSize","height","width","near","far","OrthographicCamera","top","bottom","fov","updateProjectionMatrix","Color","getHex","toLowerCase","AmbientLight","DirectionalLight","HemisphereLight","PointLight","SpotLight","targetEl","isEqualVec3","a","b","start","end","opacity","multiple","geometry","material","LineBasicMaterial","transparent","BufferGeometry","addAttribute","BufferAttribute","Float32Array","line","Line","attrName","geoNeedsUpdate","positionArray","attributes","array","needsUpdate","computeBoundingSphere","setStyle","mat4","cameraPosition","portalNormal","portalPosition","cameraWorldPosition","elWorldPosition","quaternion","scale","registerShader","backgroundColor","borderColor","highlighted","highlightedColor","href","image","on","peekMode","title","titleColor","visualAspectEnabled","navigate","previousQuaternion","undefined","quaternionClone","Quaternion","hiddenEls","strokeColor","initVisualAspect","updateEventListener","updatePeekMode","src","sphereEl","hideAll","showAll","isPlaying","semiSphereEl","textEl","visualAspectInitialized","segments","shader","pano","side","align","font","phiStart","segmentsWidth","segmentsHeight","phiLength","thetaStart","thetaLength","borderEnabled","window","location","Vector3","cameraPortalOrientation","updateMatrixWorld","parent","matrix","decompose","setFromMatrixPosition","matrixWorld","distanceTo","copy","lookAt","calculateCameraPortalOrientation","getAttribute","peekCameraPortalOrientation","traverse","object","hasAttribute","cameraEl","push","Matrix4","extractRotation","applyMatrix4","localToWorld","sub","normalize","sign","dot","is","vertexShader","join","fragmentShader","poseMatrix","PolyfillControls","device","PI_2","PI","dependencies","enabled","hmdEnabled","pointerLockEnabled","reverseMouseDrag","reverseTouchDrag","touchEnabled","previousHMDPosition","hmdQuaternion","hmdEuler","Euler","savedRotation","savedPosition","polyfillObject","Object3D","polyfillControls","deltaRotation","savedPose","pointerLocked","setupMouseControls","bindMethods","matrixAutoUpdate","updateMatrix","onEnterVR","updateGrabCursor","pitchObject","yawObject","exitPointerLock","t","updateOrientation","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onExitVR","onPointerLockChange","onPointerLockError","mouseDown","add","canvasEl","canvas","pose","vr","getCameraPose","elements","poseModelMatrix","checkHeadsetConnected","setFromQuaternion","event","movementX","movementY","previousMouseEvent","mozMovementX","mozMovementY","screenX","screenY","showGrabbingCursor","requestPointerLock","mozRequestPointerLock","style","hideGrabbingCursor","touches","touchStart","pageX","pageY","touchStarted","deltaY","clientWidth","saveCameraPose","restoreCameraPose","pointerLockElement","mozPointerLockElement","enableGrabCursor","classList","disableGrabCursor","hasSavedPose","component","error","shaders","shaderNames","disposeMaterial","dispose","unregisterMaterial","alphaTest","depthTest","depthWrite","flatShading","npot","offset","repeat","vertexColors","blending","updateShader","updateMaterial","updateSchema","currentShader","newShader","extendSchema","updateBehavior","tickProperties","tickTime","addBehavior","removeBehavior","shaderName","shaderInstance","Shader","Error","setMaterial","oldDataHasKeys","BackSide","DoubleSide","FrontSide","parseSide","coloring","FaceColors","VertexColors","NoColors","parseVertexColors","NoBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","NormalBlending","parseBlending","defaultMaterial","MeshBasicMaterial","registerMaterial","waitForMesh","mtl","obj","objLoader","OBJLoader","mtlLoader","MTLLoader","manager","crossOrigin","resetMesh","loadObj","objUrl","mtlUrl","setTexturePath","substr","lastIndexOf","materials","preload","setMaterials","objModel","isMesh","map","emissive","emissiveMap","format","child","Mesh","matrixNeedsUpdate","originVec3","OBSERVER_SELECTOR_RE","OBSERVER_CONFIG","childList","subtree","copyArray","autoRefresh","interval","objects","useWorldCoordinates","clearedIntersectedEls","unitLineEndVec3","intersectedEls","intersections","newIntersectedEls","newIntersections","prevCheckTime","prevIntersectedEls","rawIntersections","Raycaster","updateOriginDirection","setDirty","updateLine","observer","MutationObserver","dirty","lineEndVec3","otherLineEndVec3","lineData","getIntersection","intersectedDetail","intersectedClearedDetail","intersectionClearedDetail","clearedEls","intersectionDetail","drawLine","removeAttribute","test","clearAllIntersections","observe","disconnect","refreshObjects","els","querySelectorAll","flattenObject3DMaps","checkIntersections","intersection","intersectObjects","setTimeout","lineLength","getWorldPosition","transformDirection","endVec3","Infinity","multiplyScalar","isEntity","object3DMap","order","cast","receive","onMeshChanged","setShadowMapEnabled","updateDescendants","node","receiveShadow","Array","isArray","autoplay","distanceModel","maxDistance","poolSize","positional","refDistance","rolloffFactor","volume","listener","audioLoader","AudioLoader","pool","Group","loaded","mustPlay","playSoundBound","playSound","sound","srcChanged","setupSound","setDistanceModel","setMaxDistance","setRefDistance","setRolloffFactor","setLoop","setVolume","isPaused","buffer","setBuffer","Cache","evtDetail","stopSound","e","oldEvt","audioListener","AudioListener","PositionalAudio","Audio","onEnded","pauseSound","source","processSound","found","stop","directionVector","rotationEuler","KEYCODE_TO_CODE","keyboardevent","shouldCaptureKeyEvent","KEYS","acceleration","adAxis","adEnabled","adInverted","fly","wsAxis","wsEnabled","wsInverted","easing","velocity","onBlur","onFocus","onKeyDown","onKeyUp","onVisibilityChange","attachVisibilityEventListeners","isEmptyObject","updateVelocity","getMovementVector","removeKeyEventListeners","removeVisibilityEventListeners","attachKeyEventListeners","adSign","wsSign","scaledEasing","pow","abs","KeyA","ArrowLeft","KeyD","ArrowRight","KeyW","ArrowUp","KeyS","ArrowDown","xRotation","applyEuler","hidden","code","keyCode","register","background","enterVREl","querySelector","removeFullScreenStyles","addFullScreenStyles","AFRAME_INJECTED","INSPECTOR_URL","NODE_ENV","SHORTLINK_DOMAIN","RETICULUM_SERVER","THUMBNAIL_SERVER","CORS_PROXY_SERVER","NON_CORS_PROXY_DOMAINS","BASE_ASSETS_PATH","INSPECTOR_VERSION","url","firstPlay","onKeydown","onMessage","initOverlay","urlParam","getUrlParameter","openInspector","loadingMessageEl","innerHTML","LOADING_MESSAGE","ctrlKey","altKey","showLoader","body","hideLoader","removeChild","focusEl","script","AFRAME","INSPECTOR","inspectorInjected","onload","onerror","head","density","fog","isScene","FogExp2","Fog","getFog","updateMaterials","enterVR","exitVR","onKeyup","enterVREnabled","container","mixin","size","dynamic","initPool","availableEls","usedEls","createEntity","wrapPlay","playMethod","call","requestEntity","shift","returnEntity","index","splice","VERTEX_SHADER","FRAGMENT_SHADER","setup","gl","getContext","cubeMapSize","getParameter","MAX_CUBE_MAP_TEXTURE_SIZE","RawShaderMaterial","uniforms","quad","PlaneBufferGeometry","ctx","getRenderTarget","WebGLRenderTarget","minFilter","LinearFilter","magFilter","wrapS","ClampToEdgeWrapping","wrapT","RGBAFormat","UnsignedByteType","resize","shortcutPressed","projection","shiftKey","capture","setCapture","cubeCamera","CubeCamera","getWorldQuaternion","renderTarget","texture","params","isVREnabled","renderCapture","saveCapture","getCanvas","imageData","output","pixels","autoClear","Uint8Array","render","readRenderTargetPixels","flipPixelsVertically","ImageData","Uint8ClampedArray","putImageData","flippedPixels","slice","toBlob","blob","fileName","Date","now","linkEl","URL","createObjectURL","display","click","RStats","AFrameStats","aframeStats","ThreeStats","threeStats","stats","plugins","isMobile","css","values","fps","caption","below","groups","createStats","statsEl","hideBound","hide","showBound","show","parentNode","frame","performance","nowOffset","timing","navigationStart","mark","measure","rStats","settings","iterateKeys","callback","j","l","_settings","_colours","colours","_cssRStats","CSSPath","uri","element","rel","getElementsByTagName","_base","_div","_elHeight","_elWidth","_perfCounters","Graph","_dom","_id","_defArg","_def","_canvas","_ctx","_max","_current","c","_dotCanvas","_dotCtx","fillStyle","fillRect","globalAlpha","_alarmCanvas","_alarmCtx","className","draw","v","alarm","drawImage","StackGraph","_num","th","h","PerfCounter","group","_time","_value","_total","_averageValue","_accumValue","_accumStart","_accumSamples","_spanId","_spanValue","_spanValueText","createTextNode","_graph","_started","_average","average","avgMs","_start","userTimingAPI","_end","textContent","div","interpolate","nodeValue","round","over","_perf","idArg","g","parseInt","p","_update","fractions","f","base","steps","k","s","val","graph","attach","concat","h1","toggle","preventDefault","legend","_init","glStats","_rS","_totalDrawArraysCalls","_totalDrawElementsCalls","_totalUseProgramCalls","_totalFaces","_totalVertices","_totalPoints","_totalBindTexures","_h","apply","arguments","WebGLRenderingContext","prototype","drawArrays","POINTS","drawElements","useProgram","bindTexture","r","allcalls","drawelements","drawarrays","info","memory","geometries","programs","textures","calls","triangles","points","renderer.info.memory.geometries","renderer.info.memory.textures","renderer.info.programs","renderer.info.render.calls","renderer.info.render.triangles","renderer.info.render.points","BrowserStats","_usedJSHeapSize","_totalJSHeapSize","usedJSHeapSize","totalJSHeapSize","console","log1024","log","_size","floor","total","_scene","filter","getEntriesByName","startTime","toFixed","te","lt","constants","ENTER_VR_CLASS","ENTER_VR_BTN_CLASS","HIDDEN_CLASS","ORIENTATION_MODAL_CLASS","enterVRButton","insideLoader","orientationModalEl","updateEnterVRInterface","toggleOrientationModalIfNeeded","onEnterVRButtonClick","onModalClick","onClick","vrButton","wrapper","stopPropagation","modal","exit","createOrientationModal","uiElement","toggleEnterVRButtonIfNeeded","isLandscape","registerGeometry","depth","segmentsDepth","BoxGeometry","CircleGeometry","openEnded","radiusBottom","radiusTop","segmentsRadial","CylinderGeometry","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","PlaneGeometry","radiusInner","radiusOuter","segmentsPhi","segmentsTheta","RingGeometry","SphereGeometry","TetrahedronGeometry","arc","radiusTubular","segmentsTubular","TorusGeometry","q","TorusKnotGeometry","rotateVector","uvMinVector","Vector2","uvMaxVector","uvScaleVector","vertexA","vertexB","vertexC","normal","triangle","uvA","uvB","uvC","Triangle","getNormal","setFromUnitVectors","clone","applyQuaternion","subVectors","divide","Geometry","vertices","faces","Face3","faceVertexUvs","getMaterialData","materialData","wireframe","wireframeLinewidth","textureSrc","updateMap","CubeLoader","CubeTextureLoader","texturePromises","emissiveIntensity","metalness","roughness","normalMap","normalScale","ambientOcclusionMap","aoMapIntensity","ambientOcclusionMapIntensity","displacementMap","displacementScale","displacementBias","ambientOcclusionTextureOffset","ambientOcclusionTextureRepeat","displacementTextureOffset","displacementTextureRepeat","envMap","metalnessMap","metalnessTextureOffset","metalnessTextureRepeat","normalTextureOffset","normalTextureRepeat","roughnessMap","roughnessTextureOffset","roughnessTextureRepeat","sphericalEnvMap","MeshStandardMaterial","updateDistortionMap","updateEnvMap","isLoadingEnvMap","loadTexture","mapping","SphericalReflectionMapping","handleTextureEvents","then","cube","Promise","resolve","srcLoader","validateCubemapSrc","urls","raw","negate","registerSystem","DEFAULT_CAMERA_ATTR","System","activeCameraEl","unwrapRender","wrapRender","initialCameraFound","numUserCameras","numUserCamerasChecked","setupInitialCamera","cameraEls","spectator","checkUserCamera","isNode","createDefaultCamera","cameraData","defaultCameraEl","DEFAULT_CAMERA_HEIGHT","disableActiveCamera","setActiveCamera","newCameraEl","newCamera","previousCamera","defaultCameraWrapper","defaultCamera","removeDefaultCamera","setSpectatorCamera","spectatorCameraEl","disableSpectatorCamera","originalRender","spectatorCamera","createGeometry","geometryType","GeometryClass","geometryInstance","doBuffer","bufferGeometry","fromGeometry","metadata","parameters","toBufferGeometry","cache","cacheCount","clearCache","getOrCreateGeometry","cachedGeometry","hash","skipCache","incrementCacheCount","unuseGeometry","decrementCacheCount","JSON","stringify","dracoDecoderPath","path","DRACOLoader","setDecoderPath","dracoLoader","getDRACOLoader","defaultLightsEnabled","defaultLights","userDefinedLights","setupDefaultLights","removeDefaultLights","ambientLight","directionalLight","isHLS","TextureLoader","setTextureProperties","RepeatWrapping","textureCounts","textureCache","onMaterialTextureLoaded","clearTextureCache","cb","tagName","srcObject","childElementCount","loadVideo","validateSrc","loadImage","loadCanvas","handleImageTextureLoaded","reject","resolveTexture","Texture","xhr","status","statusText","loadImageTexture","CanvasTexture","videoEl","videoTextureResult","handleVideoTextureLoaded","result","hashVideo","controls","fixVideoAttributes","createVideoEl","VideoTexture","isIOS","needsCorrectionBGRA","flipY","needsCorrectionFlipY","extendDeep","videoAttributes","sort","calculateVideoCacheHash","uuid","propName","isTexture","mapName","antialias","highRefreshRate","logarithmicDepthBuffer","maxCanvasWidth","maxCanvasHeight","physicallyCorrectLights","precision","sortObjects","colorManagement","gammaOutput","alpha","webgl2","multiview","forceWebVR","gammaFactor","colorOrTexture","isColor","convertSRGBToLinear","encoding","sRGBEncoding","SHADOW_MAP_TYPE_MAP","basic","BasicShadowMap","pcf","PCFShadowMap","pcfsoft","PCFSoftShadowMap","autoUpdate","shadowMapEnabled","shadowMap","prevData","ANode","registerElement","fileLoader","FileLoader","mediaElementLoaded","readyState","checkProgress","secondsBuffered","buffered","files","fixUpMediaElement","mediaEl","newMediaEl","domain","split","substring","host","cloneNode","inferResponseType","dotLastIndex","extension","create","createdCallback","isAssets","timeout","attachedCallback","mediaEls","imgEl","imgEls","all","detachedCallback","clearTimeout","isAssetItem","setResponseType","response","loadedBytes","totalBytes","HTMLElement","srcs","validate","writable","componentCache","isMixin","attributeChangedCallback","attr","oldVal","newVal","cacheAttribute","updateEntities","closestScene","cacheAttributes","componentName","parseAttrValueForCache","entity","entities","mixinUpdate","originalPosition","originalRotation","originalParent","originalGroup","outerGroup","registerPrimitive","defaultComponents","look-controls","wasd-controls","mappings","look-controls-enabled","pointer-lock-enabled","wasd-controls-enabled","reverse-mouse-drag","zoom","getMeshMixin","fuse-timeout","open-ended","theta-length","theta-start","ground-color","link","meshMixin","obj-model","meshPrimitives","segments-height","segments-width","topLeftRadius","topRightRadius","bottomLeftRadius","bottomRightRadius","rounded","MeshPhongMaterial","updateOpacity","roundedRectShape","Shape","corners","moveTo","lineTo","quadraticCurveTo","ShapeBufferGeometry","top-left-radius","top-right-radius","bottom-left-radius","bottom-right-radius","padding","plane","setMap","regenerateMesh","pos","uvs","uv","setUV","w2","h2","setPos","u","flatten","warned","updateAttribute","attrib","itemSize","dtype","attribLength","rebuildAttribute","needsNewBuffer","setArray","newAttrib","isR69","setIndex","pages","glyphs","glyph","page","texWidth","texHeight","bitmap","bw","bh","u0","v1","u1","v0","positions","xoffset","yoffset","w","box","bounds","count","computeBox","computeSphere","minX","minY","sqrt","center","parseProperties","parseProperty","processSchema","process","isSingleProp","isSingleProperty","styleParser","buildData","updateProperties","rawData","parse","tock","definition","NewSystem","proto","scenes","findAllScenes","constructor","initSystem","propertyToThreeMapping","int","number","vec2","vec3","vec4","initVariables","ShaderMaterial","varType","variables","updateVariables","materialKey","parseValue","setMapOnTextureLoad","updateMapMaterialFromData","Vector4","ImageUtils","NewShader","debugLib","colors","namespace","d","chunks","getDebugNamespaceType","getDebugNamespaceColor","ls","localStorage","storage","logs","enable","browser","GRAVITY","MAX_INTERVAL","ITERATIONS","ACTIVATION_STATE","ACTIVE_TAG","ISLAND_SLEEPING","WANTS_DEACTIVATION","DISABLE_DEACTIVATION","DISABLE_SIMULATION","COLLISION_FLAG","STATIC_OBJECT","KINEMATIC_OBJECT","NO_CONTACT_RESPONSE","CUSTOM_MATERIAL_CALLBACK","CHARACTER_OBJECT","DISABLE_VISUALIZE_OBJECT","DISABLE_SPU_COLLISION_PROCESSING","TYPE","STATIC","DYNAMIC","KINEMATIC","SHAPE","BOX","CYLINDER","SPHERE","CAPSULE","CONE","HULL","HACD","VHACD","MESH","HEIGHTFIELD","FIT","ALL","MANUAL","CONSTRAINT","LOCK","FIXED","SPRING","SLIDER","HINGE","CONE_TWIST","POINT_TO_POINT","AEntity","knownTags","wrapMethods","targetObj","methodList","derivedObj","baseObj","methodName","derivedMethod","baseMethod","wrapMethod","copyProperties","destination","getOwnPropertyNames","prop","desc","getOwnPropertyDescriptor","getPrototypeOf","newObj","isANode","isAEntity","addTagName","wrapANodeMethods","wrapAEntityMethods","propVal","displayName","materialMappings","addMapping","htmlAttrName","replace","standard","vA","three_module","vB","vC","intersectionPoint","intersectionPointWorld","checkBufferGeometryIntersection","ray","fromBufferAttribute","pA","pB","pC","intersectTriangle","checkIntersection","getUV","face","faceIndex","intersectTri","geo","tri","triOffset","getX","arrayToBox","arr","getLongestEdgeIndex","splitDimIdx","splitDist","dist","SeparatingAxisBounds","[object Object]","field","axis","other","setFromBox","boxMin","boxMax","cacheSatBounds","closestPointLineToLine","dir1","dir2","v02","l1","l2","v10","v2","v32","d0232","d3210","d3232","d0210","denom","d2","closestPointsSegmentToSegment","paramResult","temp1","temp2","target1","target2","at","closestPointToPoint","p2","closestPoint","closestPoint2","distanceToSquared","sphereIntersectTriangle","closestPointTemp","projectedPointTemp","planeTemp","lineTemp","sphere","getPlane","distanceToPoint","pp","projectPoint","containsPoint","SeparatingAxisTriangle_SeparatingAxisTriangle","args","super","isSeparatingAxisTriangle","satAxes","fill","satBounds","axis0","sab0","setFromPoints","axis1","sab1","axis2","sab2","axis3","sab3","intersectsTriangle","saTri2","arr1","arr2","cachedSatBounds","cachedSatBounds2","cachedAxis","satBounds1","satAxes1","sb","sa","isSeparated","satBounds2","satAxes2","sa1","i2","sa2","crossVectors","distanceToTriangle","point2","cornerFields","line1","line2","getMidpoint","closestDistanceSq","otherVec","thisVec","f11","f12","f21","f22","OrientedBox_OrientedBox","isOrientedBox","invMatrix","alignedSatBounds","minVec","pi","setFromPointsField","getInverse","intersectsBox","aabbBounds","intersectsSphere","saTri","pointsArr","triSatBounds","triSatAxes","clamp","distanceToBox","xyzFields","segments1","segments2","point1","threshold","getCenter","threshold2","i1","nextIndex","nextIndex2","index2","p1","f1","f2","f3","boundingBox","boxIntersection","MeshBVHNode_xyzFields","setTriangle","ta","tb","tc","i3","getY","getZ","MeshBVHNode_MeshBVHNode","boundingData","intersectBox","intersects","intersectTris","intersectRay","raycast","res","intersectClosestTri","splitAxis","xyzAxis","c1","c2","c1Result","raycastFirst","rayOrig","toPoint","toChild1","toChild2","toPointSq","c2Result","shapecast","cachedBox1","cachedBox2","intersectsBoundsFunc","intersectsTriangleFunc","nodeScoreFunc","score1","score2","box1","box2","temp","tempBox","intersectsGeometry","triangle2","cachedMesh","invertedMat","obb","obb2","geometryToBvh","cachedObb","computeBoundingBox","thisGeometry","thisIndex","thisPos","boundsTree","boxToBvh","minThreshold","maxThreshold","closestDistance","isLeaf","score","closestPointToGeometry","tri2","tempTarget1","tempTarget2","sphere1","sphere2","CENTER","AVERAGE","SAH","BVHConstructionContext_xyzFields","boxtemp","BVHConstructionContext_BVHConstructionContext","options","verts","triCount","centroids","ai","bi","ci","computeTriangleData","sahplanes","strategy","avg","minx","miny","minz","maxx","maxy","maxz","t0","t1","t2","t3","getAverage","TRAVERSAL_COST","INTERSECTION_COST","bb","dim","filteredLists","planes","getCost","sal","nl","sar","nr","bestCost","o1","o2","bmin","bmax","pinfo","ldim","rdim","ldimo1","rdimo1","ldimo2","rdimo2","cost","MeshBVH_MeshBVH","isBufferGeometry","isInterleavedBufferAttribute","assign","maxDepth","maxLeafTris","verbose","_roots","_buildTree","vertexCount","Uint32Array","Uint16Array","ranges","rangeBoundaries","Set","sortedBoundaries","from","_ensureIndex","reachedMaxDepth","splitNode","getOptimalSplit","splitOffset","partition","lstart","lcount","getBounds","rstart","rcount","roots","_getRootIndexRanges","range","root","closestResult","geomToMesh","orderNodesFunc","boxToMesh","geom","__webpack_exports__","acceleratedRaycast","src_ray","tmpInverseMatrix","origMeshRaycastFunc","firstHitOnly","DEFAULT_HANDEDNESS","World","Body","Constraint","_src_world__WEBPACK_IMPORTED_MODULE_1__","_src_world__WEBPACK_IMPORTED_MODULE_1___default","n","_src_body__WEBPACK_IMPORTED_MODULE_2__","_src_body__WEBPACK_IMPORTED_MODULE_2___default","_src_constraint__WEBPACK_IMPORTED_MODULE_3__","_src_constraint__WEBPACK_IMPORTED_MODULE_3___default","fn","Function","newMixinIdArray","oldMixinIdArray","mixinIds","computedMixinStr","mixinEls","mixins","updateMixins","parentElement","closest","selector","matches","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","childFilter","childrenLoaded","getChildren","catch","err","newMixins","oldMixins","newMixinIds","oldMixinIds","trim","unregisterMixin","registerMixin","getElementById","mixinEl","compositedMixinIds","newValue","mixinId","bubbles","extraData","dispatchEvent","CustomEvent","global","ImageLoader","propNames","PropertyTypes","isValidDefaultValue","propertyTypes","processPropertyDefinition","propDefinition","isCustomType","propType","defaultVal","typeName","stringifyProperty","propData","getPartialData","silent","propValue","stringifyProperties","stringifiedData","aframeScript","currentScript","upperCaseRegExp","RegExp","objectPools","attrValue","initialized","isSinglePropertyObject","isObject","isObjectBased","objectPool","nextData","use","previousOldData","parsingAttrValue","throttledEmitComponentChanged","throttle","updateCachedAttrValue","clobber","newAttrValue","tempObject","property","recycle","clearObject","extendProperties","parsedValue","flushToDOM","isDefault","updateComponent","callUpdateHandler","initComponent","initialOldData","initializingComponents","mayNeedSchemaUpdate","schemaChangeKeys","hasComponentChanged","copyData","deepEqual","isPositionRotationScale","handleMixinUpdate","resetProperty","propertyName","schemaAddon","extendedSchema","newData","componentDefined","defaultValue","mixinData","previousData","isObjectOrArray","registrationOrderWarnings","dest","sourceData","parsedProperty","hasBehavior","NewComponent","schemaIsSingleProp","pauseMethod","removeMethod","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","shouldPlay","createPool","deepAssign","objectAssign","coordinates","forceCanvasResizeSafariMobile","isIE11","isGearVR","isOculusGo","functionToThrottle","minimumInterval","optionalContext","lastTime","throttleTick","sinceLastTime","debounce","func","wait","immediate","context","callNow","arrayPool","keysA","keysB","valA","valB","targetObject","aVal","bVal","bKey","isComparingObjects","metaKey","activeElement","splitString","str","delimiter","regex","getElData","defaults","results","exec","search","decodeURIComponent","isIframed","matchingElements","allElements","hasNativeWebVRImplementation","navigator","getVRDisplays","getVRDevices","hasNativeWebXRImplementation","xr","bufferScale","isIOSOlderThan10","userAgent","devicePixelRatio","WebVRPolyfill","polyfillConfig","BUFFER_SCALE","CARDBOARD_UI_DISABLED","ROTATE_INSTRUCTIONS_DISABLED","webvrpolyfill","protocol","isBrowserEnvironment","AScene","AComponent","ANIME","primitives","version","singlePropUpdate","componentsUpdated","COMPONENTS","MULTIPLE_COMPONENT_DELIMITER","OBJECT3D_COMPONENTS","ONCE","once","componentsToUpdate","parentEl","rotationObj","states","justInitialized","setEntityAttribute","assetsEl","addToParent","removeComponent","removeFromParent","oldObj","getOrCreateObject3D","Constructor","attachedToParent","updateComponents","getChildEntities","childEntities","isDependency","componentId","componentInfo","checkComponentDefined","initComponentDependencies","tryRemoveLater","extraComponents","isComponent","getExtraComponents","getDOMAttribute","mergeComponentData","arg1","arg2","delimiterIndex","recursive","entityEl","radToDeg","addState","state","removeState","stateIndex","inspect","inspector","inMixin","isComponentMixedIn","SimplexNoise","grad3","grad4","random","perm","simplex","dot3","dot4","noise","xin","yin","j1","G2","x0","y0","x1","y1","x2","y2","ii","jj","gi0","gi1","gi2","noise3d","zin","k1","j2","k2","G3","z0","z1","z2","x3","y3","z3","kk","gi3","noise4d","j3","k3","l3","F4","G4","w0","w1","w3","x4","y4","z4","w4","ll","gi4","t4","formatArgs","useColors","lastC","match","save","namespaces","removeItem","documentElement","firebug","exception","table","$1","chrome","local","localstorage","formatters","DefaultLoadingManager","revokeObjectURLs","GLTFRegistry","get","removeAll","onLoad","onProgress","onError","_load","setPath","setResourcePath","resourcePath","setDRACOLoader","_parse","createParser","parserOnly","scope","LoaderUtils","extractUrlBase","itemStart","_onError","itemError","itemEnd","setWithCredentials","content","extensions","decodeText","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","asset","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","parser","GLTFParser","DDSLoader","ddsLoader","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","fromArray","spot","innerConeAngle","outerConeAngle","getMaterialType","extendParams","materialParams","materialDef","pending","metallicRoughness","pbrMetallicRoughness","baseColorFactor","baseColorTexture","assignTexture","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","headerView","DataView","header","magic","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","specularGlossinessParams","pbrSpecularGlossiness","ShaderLib","UniformsUtils","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","specular","setHex","glossiness","specularMap","glossinessMap","defines","STANDARD","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","isGLTFSpecularGlossinessMaterial","lightMap","lightMapIntensity","aoMap","bumpMap","bumpScale","alphaMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","il","refreshUniforms","uvScaleMap","diffuse","isWebGLRenderTarget","uvTransform","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","transform","texCoord","copySampleValue_","valueSize","beforeStart_","afterEnd_","interpolate_","stride","stride2","stride3","td","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","5125","5126","WEBGL_FILTERS","9728","NearestFilter","9729","9984","NearestMipMapNearestFilter","9985","LinearMipMapNearestFilter","9986","NearestMipMapLinearFilter","9987","LinearMipMapLinearFilter","WEBGL_WRAPPINGS","33071","33648","MirroredRepeatWrapping","10497","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","image/png","image/jpeg","RGBFormat","resolveURL","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","cloneBufferAttribute","getW","primitiveCache","textureLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","indices","targets","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","morphNormals","positionAttribute","jl","setXYZ","normalAttribute","morphAttributes","addMorphTargets","markDefs","getDependencies","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","bufferViewDef","bufferViews","sparse","pendingBufferViews","bufferAttribute","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setX","setY","setZ","setW","textureIndex","webkitURL","textureDef","textureExtensions","sourceURI","images","isObjectURL","Blob","mimeType","Loader","Handlers","revokeObjectURL","sampler","samplers","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","pointsMaterial","PointsMaterial","Material","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","morphTargets","uv2","onBeforeRender","materialIndex","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","alphaMode","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","loadGeometries","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","originalMaterials","SkinnedMesh","skinWeight","normalizeSkinWeights","drawMode","TriangleStripDrawMode","TriangleFanDrawMode","LineSegments","LineLoop","Points","cameraIndex","cameraDef","PerspectiveCamera","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","input","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","interpolation","outputArray","scaled","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","Bone","instanceNum","o","PropertyBinding","sanitizeNodeName","applyMatrix","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","isGroup","bones","boneInverses","jointNode","mat","Skeleton","sceneIndex","sceneDef","Scene","nodeIds","hasUpdateMatricesFunction","HEIGHTFIELD_DATA_TYPE","short","float","hasOwnProperty","_setOptions","fit","minHalfExtent","maxHalfExtent","Number","POSITIVE_INFINITY","cylinderAxis","margin","includeInvisible","orientation","createCollisionShapes","createBoxShape","createCylinderShape","createCapsuleShape","createConeShape","createSphereShape","createHullShape","createHACDShapes","createVHACDShapes","createTriMeshShape","createHeightfieldTerrainShape","halfExtents","_computeHalfExtents","_computeBounds","btHalfExtents","Ammo","btVector3","collisionShape","btBoxShape","destroy","_finishCollisionShape","_computeScale","btCylinderShape","btCylinderShapeX","btCylinderShapeZ","btCapsuleShape","btCapsuleShapeX","btCapsuleShapeZ","btConeShape","btConeShapeX","btConeShapeZ","isNaN","sphereRadius","_computeRadius","btSphereShape","vertex","btVertex","originalHull","btConvexHullShape","setMargin","addVectors","_iterateGeometries","maxVertices","hullMaxVertices","setValue","addPoint","getNumVertices","shapeHull","btShapeHull","buildHull","getPointer","getVertexPointer","numVertices","hacd","SetCompacityWeight","compacityWeight","SetVolumeWeight","volumeWeight","SetNClusters","nClusters","SetNVerticesPerCH","nVerticesPerCH","SetConcavity","concavity","_malloc","SetPoints","SetTriangles","SetNPoints","SetNTriangles","pptr","tptr","HEAPF64","HEAP32","Compute","_free","GetNClusters","shapes","hull","nPoints","GetNPointsCH","nTriangles","GetNTrianglesCH","hullPoints","hullTriangles","GetCH","px","py","pz","vhacd","Parameters","set_m_resolution","resolution","set_m_depth","set_m_concavity","set_m_planeDownsampling","planeDownsampling","set_m_convexhullDownsampling","convexhullDownsampling","set_m_alpha","set_m_beta","beta","set_m_gamma","gamma","set_m_pca","pca","set_m_mode","set_m_maxNumVerticesPerCH","maxNumVerticesPerCH","set_m_minVolumePerCH","minVolumePerCH","set_m_convexhullApproximation","convexhullApproximation","set_m_oclAcceleration","oclAcceleration","nHulls","GetNConvexHulls","ch","ConvexHull","GetConvexHull","get_m_nPoints","get_m_points","va","vb","vc","bta","btb","btc","triMesh","btTriangleMesh","addTriangle","localScale","setScaling","btBvhTriangleMeshShape","resources","heightfieldDistance","heightfieldData","heightScale","upAxis","hdt","heightDataType","PHY_SHORT","PHY_FLOAT","flipQuadEdges","heightStickLength","heightStickWidth","ptr","minHeight","maxHeight","NEGATIVE_INFINITY","HEAPF32","btHeightfieldTerrainShape","setLocalScaling","localTransform","btTransform","btQuaternion","setIdentity","getOrigin","setRotation","inverse","Sky","__proto__","identity","updateMatrices","multiplyMatrices","setFromMatrixScale","maxRadiusSq","cx","cy","cz","dx","dy","dz","clampScalar","Box3","minZ","maxX","maxY","maxZ","COORDINATE_KEYS","OBJECT","whitespaceRegex","isCoordinates","parseIfString","String","parseFloat","defaultVec","coordinate","vec","isCoordinate","toVector3","HLS_MIMETYPES","COLOR_MAPS","materialName","dataName","materialSrcs","has","longType","shortType","wrap","slot","includes","geometryNames","unCamelCase","geometryName","geometryHyphened","PMREMGenerator","shaderMaterial","SAMPLES_PER_LEVEL","tFlip","planeMesh","sourceTexture","samplesPerLevel","monotonicEncoding","LinearEncoding","GammaEncoding","generateMipmaps","cubeLods","anisotropy","numLods","WebGLRenderTargetCube","gammaInput","toneMapping","toneMappingExposure","currentRenderTarget","LinearToneMapping","renderToCubeMapTarget","setRenderTarget","renderToCubeMapTargetFace","clear","PMREMCubeUVPacker","testColor","cubeTextureLods","RGBEEncoding","RGBM16Encoding","CubeUVRenderTarget","CubeUVReflectionMapping","faceOffsets","textureResolution","offset2","nMips","mipOffsetX","mipOffsetY","mipSize","setScalar","OrbitControls","domElement","quat","quatInverse","lastPosition","lastQuaternion","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","target0","position0","zoom0","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","reset","changeEvent","STATE","NONE","up","setFromVector3","rotateLeft","sphericalDelta","makeSafe","panOffset","setFromSpherical","zoomChanged","EPS","onContextMenu","onMouseWheel","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","panUp","pan","deltaX","isPerspectiveCamera","targetDistance","tan","clientHeight","isOrthographicCamera","dollyIn","dollyScale","dollyOut","handleMouseDownPan","clientX","clientY","focus","handleMouseDownRotate","handleMouseDownDolly","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","handleTouchStartRotate","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","EventDispatcher","defineProperties","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","ACESFilmicToneMapping","AddEquation","AddOperation","AlphaFormat","AlwaysDepth","AmbientLightProbe","AnimationLoader","AnimationObjectGroup","AnimationUtils","ArcCurve","ArrayCamera","ArrowHelper","AudioAnalyser","AudioContext","AxesHelper","AxisHelper","BasicDepthPacking","BinaryTextureLoader","BooleanKeyframeTrack","BoundingBoxHelper","Box2","Box3Helper","BoxBufferGeometry","BoxHelper","BufferGeometryLoader","ByteType","Camera","CanvasRenderer","CatmullRomCurve3","CineonToneMapping","CircleBufferGeometry","Clock","ClosedSplineCurve3","ColorKeyframeTrack","CompressedTexture","CompressedTextureLoader","ConeBufferGeometry","ConeGeometry","CubeReflectionMapping","CubeRefractionMapping","CubeTexture","CubeUVRefractionMapping","CubicBezierCurve","CubicBezierCurve3","CubicInterpolant","CullFaceBack","CullFaceFront","CullFaceFrontBack","CullFaceNone","Curve","CurvePath","CustomBlending","CylinderBufferGeometry","Cylindrical","DataTexture","DataTexture2DArray","DataTexture3D","DataTextureLoader","DepthFormat","DepthStencilFormat","DepthTexture","DirectionalLightHelper","DirectionalLightShadow","DiscreteInterpolant","DodecahedronBufferGeometry","DstAlphaFactor","DstColorFactor","DynamicBufferAttribute","EdgesGeometry","EdgesHelper","EllipseCurve","EqualDepth","EquirectangularReflectionMapping","EquirectangularRefractionMapping","ExtrudeBufferGeometry","ExtrudeGeometry","Face4","FaceNormalsHelper","FlatShading","Float32Attribute","Float32BufferAttribute","Float64Attribute","Float64BufferAttribute","FloatType","Font","FontLoader","FrontFaceDirectionCCW","FrontFaceDirectionCW","Frustum","GeometryUtils","GreaterDepth","GreaterEqualDepth","GridHelper","HalfFloatType","HemisphereLightHelper","HemisphereLightProbe","IcosahedronBufferGeometry","ImageBitmapLoader","ImmediateRenderObject","InstancedBufferAttribute","InstancedBufferGeometry","InstancedInterleavedBuffer","Int16Attribute","Int16BufferAttribute","Int32Attribute","Int32BufferAttribute","Int8Attribute","Int8BufferAttribute","IntType","InterpolateSmooth","JSONLoader","KeyframeTrack","LOD","LatheBufferGeometry","LatheGeometry","Layers","LensFlare","LessDepth","LessEqualDepth","Light","LightProbe","LightProbeHelper","LightShadow","Line3","LineCurve","LineCurve3","LineDashedMaterial","LinePieces","LineStrip","LinearInterpolant","LoadingManager","LogLuvEncoding","LoopOnce","LoopPingPong","LuminanceAlphaFormat","LuminanceFormat","MaterialLoader","_Math","Matrix3","MaxEquation","MeshDepthMaterial","MeshDistanceMaterial","MeshFaceMaterial","MeshLambertMaterial","MeshMatcapMaterial","MeshNormalMaterial","MeshPhysicalMaterial","MeshToonMaterial","MinEquation","MixOperation","MultiMaterial","MultiplyOperation","NeverDepth","NoToneMapping","NotEqualDepth","ObjectLoader","ObjectSpaceNormalMap","OctahedronBufferGeometry","OneFactor","OneMinusDstAlphaFactor","OneMinusDstColorFactor","OneMinusSrcAlphaFactor","OneMinusSrcColorFactor","ParametricBufferGeometry","ParametricGeometry","Particle","ParticleBasicMaterial","ParticleSystem","ParticleSystemMaterial","Path","Plane","PlaneHelper","PointCloud","PointCloudMaterial","PointLightHelper","PolarGridHelper","PolyhedronBufferGeometry","PolyhedronGeometry","PositionalAudioHelper","PropertyMixer","QuadraticBezierCurve","QuadraticBezierCurve3","QuaternionLinearInterpolant","REVISION","RGBADepthPacking","RGBA_ASTC_10x10_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGBDEncoding","RGBEFormat","RGBM7Encoding","RGB_ETC1_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGB_S3TC_DXT1_Format","RawUniformsGroup","Ray","RectAreaLight","RectAreaLightHelper","RedFormat","ReinhardToneMapping","ReverseSubtractEquation","RingBufferGeometry","SceneUtils","ShaderChunk","ShadowMaterial","ShapeGeometry","ShapePath","ShapeUtils","ShortType","SkeletonHelper","SmoothShading","Sphere","SphereBufferGeometry","SphericalHarmonics3","Spline","SplineCurve","SplineCurve3","SpotLightHelper","SpotLightShadow","Sprite","SpriteMaterial","SrcAlphaFactor","SrcAlphaSaturateFactor","SrcColorFactor","StereoCamera","StringKeyframeTrack","SubtractEquation","TangentSpaceNormalMap","TetrahedronBufferGeometry","TextBufferGeometry","TextGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TrianglesDrawMode","TubeBufferGeometry","TubeGeometry","UVMapping","Uint16Attribute","Uint16BufferAttribute","Uint32Attribute","Uint32BufferAttribute","Uint8Attribute","Uint8BufferAttribute","Uint8ClampedAttribute","Uint8ClampedBufferAttribute","Uncharted2ToneMapping","Uniform","UniformsGroup","UniformsLib","UnsignedInt248Type","UnsignedIntType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedShortType","Vertex","VertexNormalsHelper","WebGLMultisampleRenderTarget","WebGLRenderer","WebGLUtils","WireframeGeometry","WireframeHelper","WrapAroundEnding","XHRLoader","ZeroCurvatureEnding","ZeroFactor","ZeroSlopeEnding","EPSILON","isInteger","isFinite","defineProperty","toString","TypeError","nextKey","_listeners","listeners","hasEventListener","listenerArray","DEG2RAD","RAD2DEG","generateUUID","lut","d0","d1","d3","toUpperCase","euclideanModulo","m","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","degrees","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","LN2","floorPowerOfTwo","_x","_y","_z","_w","isVector2","scalar","setComponent","getComponent","addScalar","addScaledVector","subScalar","multiply","divideScalar","applyMatrix3","minVal","maxVal","clampLength","roundToZero","cross","lengthSq","manhattanLength","atan2","manhattanDistanceTo","setLength","lerpVectors","equals","toArray","rotateAround","cos","sin","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","dir","sqrSin","len","tDir","onChangeCallback","isQuaternion","setFromEuler","euler","isEuler","c3","setFromAxisAngle","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","vFrom","vTo","angleTo","acos","rotateTowards","step","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","isVector3","multiplyVectors","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","setFromSphericalCoords","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","sx","sy","sz","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","me","setFromMatrix4","applyToBufferAttribute","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","throwOnDegenerate","isMatrix4","t11","t12","t13","det","msg","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","rotate","translate","zero","one","getDataURL","HTMLCanvasElement","createElementNS","toDataURL","textureId","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","premultiplyAlpha","unpackAlignment","onUpdate","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","depthTexture","samples","constant","p3","p4","p5","toJSON","meta","isRootObject","generator","transformUv","isVector4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","yy","zz","xy","xz","yz","setSize","isWebGLMultisampleRenderTarget","isWebGLRenderTargetCube","fromEquirectangularTexture","tEquirect","isDataTexture","isBox3","setFromArray","setFromBufferAttribute","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","expandByObject","isEmpty","getSize","expandByVector","expandByScalar","isGeometry","containsBox","clampPoint","intersectsPlane","f0","testAxis","extents","triangleNormal","satForAxes","axes","getBoundingSphere","intersect","union","optionalCenter","empty","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","intersectLine","denominator","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","intersectsSprite","sprite","negRadius","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","scaleX","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","eye","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","wx","wy","wz","invSX","invSY","invSZ","makePerspective","makeOrthographic","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","cloneUniforms","mergeUniforms","merged","hslA","hslB","hsl","merge","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","setRGB","hex","setHSL","hue2rgb","handleAlpha","string","charAt","copyGammaToLinear","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertLinearToSRGB","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","specularmap","envmap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","gradientMap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotShadowMap","spotShadowMatrix","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","rectAreaLights","lambert","phong","shininess","matcap","dashed","dashSize","totalSize","t2D","tCube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","requestAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","WeakMap","deleteBuffer","delete","bufferType","usage","createBuffer","bindBuffer","bufferData","onUploadCallback","Float64Array","Int32Array","bytesPerElement","updateRange","bufferSubData","subarray","updateBuffer","vertexNormals","_order","DefaultOrder","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","reorder","newOrder","optionalResult","disable","layers","q1","object3DId","DefaultUp","configurable","enumerable","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","frustumCulled","renderOrder","isObject3D","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateZ","worldToLocal","updateWorldMatrix","isCamera","isLight","getObjectById","getObjectByProperty","getObjectByName","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","force","updateParents","updateChildren","serialize","library","shape","uuids","extractFromCache","geometryId","skinWeights","skinIndices","lineDistances","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","_array","_itemSize","_normalized","versionVAO","DirectGeometry","normals","uvs2","arrayMax","fromBufferGeometry","addFace","computeFaceNormals","ab","fl","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mergeVertices","verticesMap","unique","changes","faceIndicesToRemove","idx","sortFacesByMaterialIndex","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setDynamic","copyAt","index1","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","drawRange","widthSegments","heightSegments","depthSegments","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","width_half","height_half","segment_width","segment_height","getIndex","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","boxMorphTargets","normalizeNormals","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","attributeData","hasMorphAttributes","attributeArray","materialId","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","premultipliedAlpha","isMaterial","onBeforeCompile","setValues","currentValue","isRoot","normalMapType","combine","sizeAttenuation","linewidth","gapSize","wireframeLinecap","wireframeLinejoin","srcPlanes","dstPlanes","segCenter","segDir","barycoord","vab","vac","vbc","vap","vbp","vcp","default_vertex","default_fragment","uniformsGroups","clipping","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","WebGLBackground","boxMesh","clearColor","clearAlpha","currentBackground","currentBackgroundVersion","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","session","getSession","environmentBlendMode","autoClearColor","autoClearDepth","autoClearStencil","unshift","WebGLBindingStates","capabilities","maxVertexAttributes","isWebGL2","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","resetDefaultState","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","maxInstancedCount","vertexAttribPointer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","setMode","renderInstances","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","maxPrecision","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","WebGLInfo","lines","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphInfluences","workInfluences","objectInfluences","influences","influence","MAX_SAFE_INTEGER","getUniforms","WebGLObjects","updateList","wrapR","isShaderMaterial","cloneUniformsGroups","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","distanceToPlane","intersectPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","invDenom","uv1","uv3","isFrontFacing","setFromPointsAndIndices","i0","getArea","d4","d5","d6","isMeshBasicMaterial","setDrawMode","ml","inverseMatrix","tempA","tempB","tempC","morphA","morphB","morphC","morphPosition","groupMaterial","fvA","fvB","fvC","isMultiMaterial","faceMaterial","uvs_f","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","uniformObject","parseUniform","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","getShaderParameter","getShaderInfoLog","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","generateExtensions","customDefines","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","flipSided","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","v300es","cachedUniforms","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","skeleton","nVertexUniforms","nVertexMatrices","allocateBones","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","rectArea","hemi","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","WebGLRenderLists","lists","onSceneDispose","list","UniformsCache","halfWidth","halfHeight","nextVersion","WebGLLights","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","probe","vector3","matrix42","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","isSpotLight","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","faceCount","activeCubeFace","getActiveCubeFace","activeMipMapLevel","getActiveMipMapLevel","_state","setBlending","setTest","setScissorTest","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","vpDimensions","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","uboBindings","uboProgamMap","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","texParameteri","texImage2D","emptyTextures","blendEquationSeparate","convert","blendFuncSeparate","blendFunc","setFlipSided","frontFace","setCullFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","getCompressedTextureFormats","formats","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","compressedTexImage2D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","LOG2E","getInternalFormat","glFormat","glType","internalFormat","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","cubeImage","glInternalFormat","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUniformsGroups","allocatedBindingPoints","maxBindingPoints","hasUniformChanged","cachedObject","getUniformSize","boundary","onUniformsGroupsDispose","isRawUniformsGroup","chunkOffset","__data","__offset","remainingSizeInChunk","__size","__cache","prepareUniformsGroup","bindingPointIndex","allocateBindingPointIndex","bindBufferBase","updateBufferData","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","aspect","view","filmGauge","filmOffset","isMeshDepthMaterial","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isArrayCamera","matrixPosition","offsetMatrix","identityMatrix","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","renderWidth","renderHeight","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","referenceSpaceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraVR","multiviewAvailability","isPresenting","currentPixelRatio","currentSize","eyeParameters","getEyeParameters","getPixelRatio","setDrawingBufferSize","getViews","views","checkMultiviewAvailability","setFramebuffer","animation","triggers","findGamepad","gamepads","getGamepads","gamepad","startsWith","updateViewportFromBounds","getController","getDevice","setDevice","setFramebufferScaleFactor","setReferenceSpaceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","poseObject","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","buttons","pressed","updateControllers","getStandingMatrix","submitFrame","setFrameOfReferenceType","WebXRManager","referenceSpace","inputSources","onSessionEvent","inputSource","onSessionEnd","onRequestReferenceSpace","updateCamera","setSession","updateRenderState","baseLayer","XRWebGLLayer","requestReferenceSpace","onAnimationFrameCallback","getViewerPose","getViewport","inputPose","getPose","targetRaySpace","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_forceWebVR","currentRenderList","currentRenderState","toneMappingWhitePoint","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","videoTextures","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","xrCompatible","onContextLost","onContextRestore","rangeMin","rangeMax","message","initGLContext","inProgress","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compileAndUploadMaterials","compile","initMaterial","renderObjects","overrideMaterial","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsStateVersion","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","isMeshPhongMaterial","isMeshStandardMaterial","cameraPosition2","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","isFog","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","webglProgram","projectObject","preuploadVideos","opaqueObjects","transparentObjects","activeCubeFaceIndex","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","_stride","interleavedBuffer","_data","_offset","levels","bindMode","bindMatrix","bindMatrixInverse","calculateInverses","linecap","linejoin","video","ol","edge","edges","slices","stacks","pu","pv","sliceCount","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","inclination","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","tubularSegments","radialSegments","closed","taper","tangents","binormals","frames","computeFrenetFrames","P","generateSegment","getPointAt","N","B","generateIndices","generateBufferData","tube","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","_camera","isLOD","addLevel","getObjectForDistance","bone","getBoneByName","computeLineDistances","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","invSize","hasHoles","outerLen","outerNode","linkedList","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","sum","signedArea","insertNode","removeNode","again","area","prev","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","intersectsPolygon","inside","middleInside","q2","an","bp","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","verticesArray","addShape","placeholder","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","addVertex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","text","isFont","generateShapes","thetaEnd","grid","verticesRow","uOffset","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","inverseSegments","n1","n2","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","thresholdAngle","thresholdDot","sourceVertices","face1","face2","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","Geometries","freeze","PHYSICAL","TOON","MATCAP","Materials","arraySlice","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","getKeyframeOrder","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","_cachedIndex","_weightPrev","_offsetPrev","_weightNext","_offsetNext","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","resetDuration","parseKeyframeTrack","trackType","getTrackTypeForValueTypeName","evaluate","validate_interval","seek","linear_scan","forward_scan","giveUpAt","t1global","mid","intervalChanged_","DefaultSettings_","getSettings_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","sP","sN","weight1","weight0","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","endTime","nKeys","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","parseAnimation","addNonemptyTrack","trackName","animationKeys","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","file","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","setURLModifier","loading","_parser","arcLengthDivisions","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","aRadius","CubicPoly","c0","initCatmullRom","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","dataUriRegexResult","isBase64","atob","responseType","charCodeAt","DOMParser","parseFromString","request","XMLHttpRequest","callbacks","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setMimeType","texDatas","mipmapCount","isCubemap","texData","onImageLoad","onImageError","isJPEG","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","v3","isCatmullRomCurve3","intPoint","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","curves","autoClose","currentPoint","power","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","zoomW","zoomH","scaleW","scaleH","getTexture","shading","setTextures","TextDecoder","decode","fromCharCode","escape","_meshPerAttribute","typedArray","TYPED_ARRAYS","drawcalls","offsets","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","bufferGeometryLoader","details","geometryShapes","LegacyJSONLoader","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","BlendingMode","materialLoader","createImageBitmap","fetch","subPaths","currentPath","createPath","char","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","setOptions","imageBitmap","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","handlers","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","webkitAudioContext","sky","ground","eyeSep","bufferCopy","decodeAudioData","audioBuffer","isSphericalHarmonics3","getAt","coeff","getIrradianceAt","getBasisAt","shBasis","isHemisphereLightProbe","isAmbientLightProbe","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","autoStart","oldTime","elapsedTime","running","gain","createGain","connect","timeDelta","getInput","detune","playbackRate","hasPlaybackControl","sourceType","filters","panner","createPanner","panningModel","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","getElapsedTime","getDelta","newTime","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","clock","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","createBufferSource","onended","setDetune","setPlaybackRate","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","getVolume","getRefDistance","getRolloffFactor","getDistanceModel","getMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","reservedRe","Composite","targetGroup","optionalParsedPath","parsedPath","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","inUse","bindingsPerObject","AnimationAction","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","paused","zeroSlopeAtStart","zeroSlopeAtEnd","_root","_initMemoryManager","_accuIndex","firstValidIndex","bindings","unbind","isAnimationObjectGroup","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getRoot","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","existingAction","newAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","startP","startEnd","lineGeometry","coneGeometry","ascSort","intersectObject","nNormals","objGeometry","cone","getBoneList","boneList","sphereSize","GAMMA_OUTPUT","radials","circles","divisionsInnerAngle","divisionsOuterAngle","materialInnerAngle","materialOuterAngle","lightPlane","targetLine","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","headLength","headWidth","setDirection","isUniformsGroup","setName","uniformsSource","_uniform","setFromCamera","coords","setFromCartesianCoords","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","halfConeInnerAngle","halfConeOuterAngle","setPoint","setColor","construct","createPointsGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","initBones","setLens","onlyShadow","shadowDarkness","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","createMultiMaterialObject","detach","computeCentroids","roundNumber","sample","mergeVertexIds","setPolygonCentroid","vertexIds","cleanPolygon","neighbours","isConvex","isPointInPoly","isVectorInPolygon","triarea2","vequal","scoreFunction","sinkDown","bubbleUp","rescoreElement","visited","cleanUp","heap","heuristic","buildZone","_buildNavigationMesh","_buildPolygonGroups","_getSharedVerticesInOrder","portals","_buildPolygonsFromGeometry","polygons","_buildPolygonNeighbours","stringPull","zones","createZone","setZoneData","getRandomNode","getClosestNode","findPath","getGroup","clampStep","E","PLAYER","TARGET","PATH","WAYPOINT","CLAMPED_STEP","CLOSEST_NODE","_playerMarker","_targetMarker","_nodeMarker","_stepMarker","_pathMarker","_pathLineMaterial","_pathPointMaterial","_pathPointGeometry","_markers","setPlayerPosition","setTargetPosition","setNodePosition","setStepPosition","createLayout","inherits","createIndices","Base","opt","_opt","layout","visibleGlyphs","multipage","bbox","NewGeometry","CONSTANTS","worldConfig","collisionConfiguration","dispatcher","broadphase","solver","physicsWorld","debugDrawer","object3Ds","Map","collisions","collisionKeys","epsilon","debugDrawMode","AmmoDebugConstants","NoDebug","maxSubSteps","fixedTimeStep","btDefaultCollisionConfiguration","btCollisionDispatcher","btDbvtBroadphase","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setForceUpdateAllAabbs","gravity","setGravity","getSolverInfo","set_m_numIterations","solverIterations","isDebugEnabled","addBody","addRigidBody","removeBody","removeRigidBody","bodyptr","updateBody","updateSingleAabb","stepSimulation","numManifolds","getNumManifolds","persistentManifold","getManifoldByIndexInternal","numContacts","getNumContacts","body0ptr","getBody0","body1ptr","getBody1","getContactPoint","getDistance","getDebugDrawer","AmmoDebugDrawer","ACTIVATION_STATES","RIGID_BODY_FLAGS","almostEqualsVector3","almostEqualsBtVector3","bodyConfig","world","loadedEvent","mass","worldGravity","getGravity","linearDamping","angularDamping","linearSleepingThreshold","angularSleepingThreshold","angularFactor","activationState","emitCollisionEvents","disableCollision","collisionFilterGroup","collisionFilterMask","scaleAutoUpdate","_initBody","localScaling","prevScale","prevNumChildShapes","msTransform","motionState","btDefaultMotionState","localInertia","compoundShape","btCompoundShape","rbInfo","btRigidBodyConstructionInfo","physicsBody","btRigidBody","setActivationState","setSleepingThresholds","setDamping","setAngularFactor","setFlags","updateCollisionFlags","updateShapes","needsPolyhedralInitialization","updated","shapesChanged","updateMass","polyHedralFeaturesInitialized","initializePolyhedralFeatures","forceActivationState","activate","broadphaseProxy","getBroadphaseProxy","set_m_collisionFilterGroup","set_m_collisionFilterMask","getOverlappingPairCache","removeOverlappingPairsContainingProxy","removeChildShape","syncToPhysics","setCenterOfMassTransform","getWorldTransform","getRotation","almostEqualsQuaternion","isActive","setWorldTransform","syncFromPhysics","addChildShape","removeShape","getCollisionShape","calculateLocalInertia","setMassProps","updateInertiaTensor","flags","applyGravity","setCollisionFlags","getVelocity","getLinearVelocity","CONSTRAINTS","constraintConfig","targetBody","physicsConstraint","bodyTransform","getCenterOfMassTransform","op_mul","targetTransform","btGeneric6DofConstraint","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","btFixedConstraint","btGeneric6DofSpringConstraint","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","pivot","targetPivot","targetAxis","btHingeConstraint","pivotTransform","btConeTwistConstraint","btPoint2PointConstraint","addConstraint","removeConstraint","GLTFExporter","_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","FLOAT","UNSIGNED_INT","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","NEAREST","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","CLAMP_TO_EDGE","MIRRORED_REPEAT","REPEAT","THREE_TO_WEBGL","DEFAULT_OPTIONS","trs","onlyVisible","truncateDrawRange","forceIndices","forcePowerOfTwoTextures","includeCustomExtensions","parseChunks","onDone","cachedCanvas","outputJSON","outputBuffers","outputImages","nodeMap","cachedData","attributesRelative","attributesNormalized","uids","uid","getUID","equalArray","array1","every","serializeUserData","gltfProperty","applyTextureTransform","didTransform","transformDef","processBuffer","processAccessor","end2","bufferViewTarget","minMax","getMinMax","componentSize","Utils","getPaddedBufferSize","dataView","setFloat32","setUint32","setUint16","setUint8","gltfBufferView","processBufferView","gltfAccessor","3","4","16","transformImage","shouldResize","processImage","cachedImages","gltfImage","reader","FileReader","readAsArrayBuffer","onloadend","getPaddedArrayBuffer","processBufferViewImage","processSampler","gltfSampler","processTexture","gltfTexture","processMaterial","gltfMaterial","KHR_materials_unlit","metalRoughMapDef","baseColorMapDef","emissiveMapDef","normalMapDef","occlusionMapDef","processMesh","geometryTemp","gltfMesh","nameConversion","originalNormal","isNormalizedNormalAttribute","createNormalizedNormalAttribute","modifiedAttribute","reverseDictionary","baseAttribute","relativeAttribute","didForceIndices","processAnimation","mergeMorphTargetTracks","trackBinding","trackNode","trackProperty","outputItemSize","processSkin","rootJoint","processLight","processNode","gltfNode","isOrtho","gltfCamera","orthographic","perspective","processCamera","processScene","gltfScene","objectsWithoutScene","processObjects","processInput","extensionsUsedList","createGLBBlob","blobParts","jsonChunk","TextEncoder","encode","stringToArrayBuffer","jsonChunkPrefix","pendingBinChunk","binaryChunk","binaryChunkPrefix","totalByteLength","glbBlob","binary","bufferSize","arrayBuffer","paddingByte","paddedLength","insertKeyframe","mergedTracks","sourceTracks","sourceTrack","sourceTrackBinding","sourceTrackNode","mergedTrack","targetCount","targetIndex","sourceInterpolant","keyframeIndex","setComponentProperty","defaultAttributes","defaultComponentsFromPrimitive","deprecated","deprecatedMappings","resolveMappingCollisions","mixinComponents","isUndefined","isPureObject","getComponentPropertyPath","definePrimitive","addComponentMapping","disabled","prevColor","coerce","formatter","logFn","stack","skips","names","vrDisplay","getVRDisplay","requestPresent","requestDevice","supportsSession","immersive","exclusive","displays","isWebXRAvailable","_isMobile","vendor","opera","isTablet","isR7","isMobileVR","mockUserAgent","platform","isNodeEnvironment","getPolyfillDisplays","EMPTY_SLOT","defaultObjectFactory","objectFactory","objPool","nextFreeSlot","grow","currentLength","objToUse","propertyPathCache","getComponentProperty","splitName","appName","timeLoaded","verbosity","attributeOptions","nativeAttributeMap","setVerbosity","setSkipDequantization","skip","skipDequantization","getAttributeOptions","rawBuffer","attributeUniqueIdMap","getDecoderModule","decodeDracoFileInternal","decoder","dracoDecoder","DecoderBuffer","Init","Decoder","GetEncodedGeometryType","TRIANGULAR_MESH","POINT_CLOUD","errorMsg","convertDracoGeometryTo3JS","addAttributeToGeometry","dracoGeometry","attributeType","geometryBuffer","TypedBufferAttribute","numComponents","num_components","numValues","num_points","DracoFloat32Array","GetAttributeFloatForAllPoints","DracoInt8Array","GetAttributeInt8ForAllPoints","DracoInt16Array","GetAttributeInt16ForAllPoints","DracoInt32Array","GetAttributeInt32ForAllPoints","DracoUInt8Array","GetAttributeUInt8ForAllPoints","DracoUInt16Array","GetAttributeUInt16ForAllPoints","DracoUInt32Array","GetAttributeUInt32ForAllPoints","GetValue","decodingStatus","SkipAttributeTransform","start_time","DecodeBufferToMesh","DecodeBufferToPointCloud","ok","error_msg","numFaces","decode_end","num_faces","numPoints","numAttributes","num_attributes","posAttId","GetAttributeId","posAttribute","GetAttribute","attributeId","GetAttributeByUniqueId","attId","stripsArray","GetTriangleStripsFromMesh","numIndices","ia","GetFaceFromMesh","posTransform","AttributeQuantizationTransform","InitFromAttribute","isQuantized","maxRange","numQuantizationBits","quantization_bits","minValues","min_value","decode_time","import_time","isVersionSupported","decoderPath","decoderConfig","decoderModulePromise","setDecoderConfig","wasmBinary","releaseDecoderModule","DracoDecoderModule","WebAssembly","_loadScript","wasmBinaryFile","_loadArrayBuffer","onModuleLoaded","prevScript","object_pattern","material_library_pattern","material_use_pattern","ParserState","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","smooth","startMaterial","libraries","previous","inherited","mtllib","groupEnd","cloned","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","parseNormalIndex","parseUVIndex","addVertexPoint","addVertexLine","addNormal","addColor","addUVLine","ua","ub","uc","na","nb","nc","vLen","ic","uvLen","nLen","addPointGeometry","vi","addLineGeometry","uvi","lineFirstChar","trimLeft","vertexData","faceVertices","vertexParts","lineParts","lineVertices","lineUVs","li","llen","pointData","hasVertexColors","createdMaterials","miLen","sourceMaterial","materialPoints","materialLine","timeEnd","setMaterialOptions","materialOptions","delimiter_pattern","materialsInfo","ss","materialCreator","MaterialCreator","setManager","baseUrl","materialsArray","nameLookup","converted","mn","covmat","lprop","normalizeRGB","ignoreZeroRGBs","getAsArray","createMaterial_","setMapForType","mapType","texParams","getTextureParams","invertTrProperty","matParams","items","splitCache","DASH_REGEX","toCamelCase","upperCase","transformKeysToCamelCase","camelKey","parsedData","item","getKeyValueChunks","styleParse","keyCount","styleStringify","hasUnclosedUrl","nextSplit","chunk","AXIS_LABELS","NUM_HANDS","isControllerPresentWebVR","idPrefix","queryObject","trackedControlsSystem","filterControllerIndex","findMatchingControllerWebVR","isControllerPresentWebXR","findMatchingControllerWebXR","filterIdExact","filterIdPrefix","filterHand","matchingControllerOccurence","targetControllerMatch","handedness","controllerHandedness","checkControllerPresentAndSetup","isPresent","controllerPresent","controllerEventsActive","injectTrackedControls","emitIfAxesChanged","axesMapping","buttonType","changed","onButtonEvent","evtName","buttonName","updateModel","38","37","40","39","87","65","83","68","isImageCb","isVideoCb","onResult","contentType","getResponseHeader","checkIsImageFallback","abort","checkIsImage","isImage","parseUrl","parsedSrc","tester","Image","aCubemap","cubemapSrcRegex","validatedUrls","validateAndGetQuerySelector","initMetaTags","inject","initWakelock","loadingScreen","re","initPostMessageAPI","getCanvasSize","embedded","isVR","offsetHeight","offsetWidth","getMaxSize","setupCanvas","onFullScreenChange","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","blur","dataset","aframeCanvas","systemNames","behaviors","originalHTML","setupRenderer","attachedCallbackPostCamera","initSystems","onVRPresentChangeBound","onVRPresentChange","enterVRBound","exitVRBound","exitVRTrueBound","pointerRestrictedBound","pointerRestricted","pointerUnrestrictedBound","pointerUnrestricted","behavior","behaviorArr","behaviorType","getPointerLockElement","vrManager","presentationAttributes","foveationLevel","enterVRSuccess","xrSession","requestSession","requestFrameOfReference","frameOfReference","screen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitPresent","exitVRSuccess","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","unlock","getComputedAttribute","componentPropValue","isVRPresenting","vrDevice","maxCanvasSize","rendererAttr","rendererAttrString","rendererConfig","enableMultiview","multiviewSupported","shaderProto","renderStarted","attrs","MOBILE_HEAD_TAGS","Meta","MOBILE_IOS_HEAD_TAGS","exists","tag","headEl","headScriptEl","headTags","createAndInjectTag","tagObj","createTag","insertBefore","Wakelock","wakelock","release","Util","AndroidWakeLock","base64","iOSWakeLock","timer","setInterval","clearInterval","check","isIFrame","appendQueryParameter","getQueryParameter","isLandscapeMode","titleEl","getSceneCanvasSize","LOADER_TITLE_CLASS","loaderScene","sphereGeometry","sphereMaterial","sphereMesh1","sphereMesh2","sphereMesh3","loaderAttribute","dotsColor","innerWidth","innerHeight","nonCharRegex","urlRegex","registerPropertyType","defaultParse","defaultStringify","assetParse","parsedUrl","intParse","vecParse","isValidDefaultCoordinate","possibleCoordinates","dimensions","postMessageAPIHandler","anime","colorHelperFrom","colorHelperTo","TYPE_COLOR","STRING_COMPONENTS","STRING_OBJECT3D","toRadians","eventNames","handler","getRawProperty","splitDot","setRawProperty","targetValue","isRawProperty","delay","dur","elasticity","startEvents","pauseEvents","resumeEvents","eventDetail","animationIsPlaying","onStartEvent","beginAnimation","pauseAnimation","resumeAnimation","fromColor","toColor","targetsArray","updateConfigForDefault","updateConfigForRawColor","createAndStartAnimation","dt","pausedWasPlaying","updateConfig","began","stopRelatedAnimations","waitComponentInitRawProperty","setColorConfig","lastValue","anim","animatables","isBoolean","aframeProperty","updateConfigForVector","getPropertyType","updateActiveCamera","updateSpectatorCamera","mouse","rayCasterConfig","STATES","CANVAS_EVENTS","DOWN","fuseTimeout","mouseCursorStylesEnabled","cursorDownEl","intersectedEl","canvasBounds","getBoundingClientRect","updateCanvasBounds","intersectedEventDetail","cursorEl","onCursorDown","onCursorUp","onIntersection","onIntersectionCleared","updateMouseEventListeners","addCanvasListeners","downEvent","upEvent","twoWayEmit","currentIntersection","clearCurrentIntersection","setIntersection","ignoreRemaining","dummyGeometry","currentGeometryType","newGeometryType","gltfModel"],"mappings":"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","file":"assets/js/engine-d4230f8bbbd272c8744b.js","sourcesContent":["/* global THREE */\nvar registerComponent = require('../core/component').registerComponent;\n\n// Found at https://github.com/aframevr/assets.\nvar MODEL_URLS = {\n  left: 'https://cdn.aframe.io/controllers/hands/leftHand.glb',\n  right: 'https://cdn.aframe.io/controllers/hands/rightHand.glb'\n};\n\n// Poses.\nvar ANIMATIONS = {\n  open: 'Open',\n  // point: grip active, trackpad surface active, trigger inactive.\n  point: 'Point',\n  // pointThumb: grip active, trigger inactive, trackpad surface inactive.\n  pointThumb: 'Point + Thumb',\n  // fist: grip active, trigger active, trackpad surface active.\n  fist: 'Fist',\n  // hold: trigger active, grip inactive.\n  hold: 'Hold',\n  // thumbUp: grip active, trigger active, trackpad surface inactive.\n  thumbUp: 'Thumb Up'\n};\n\n// Map animation to public events for the API.\nvar EVENTS = {};\nEVENTS[ANIMATIONS.fist] = 'grip';\nEVENTS[ANIMATIONS.thumbUp] = 'pistol';\nEVENTS[ANIMATIONS.point] = 'pointing';\nEVENTS[ANIMATIONS.thumb] = 'thumb';\n\n/**\n * Hand controls component that abstracts 6DoF controls:\n *   oculus-touch-controls, vive-controls, windows-motion-controls.\n *\n * Originally meant to be a sample implementation of applications-specific controls that\n * abstracts multiple types of controllers.\n *\n * Auto-detect appropriate controller.\n * Handle common events coming from the detected vendor-specific controls.\n * Translate button events to semantic hand-related event names:\n *   (gripclose, gripopen, thumbup, thumbdown, pointup, pointdown)\n * Load hand model with gestures that are applied based on the button pressed.\n *\n * @property {string} Hand mapping (`left`, `right`).\n */\nmodule.exports.Component = registerComponent('hand-controls', {\n  schema: {default: 'left'},\n\n  init: function () {\n    var self = this;\n    var el = this.el;\n    // Current pose.\n    this.gesture = ANIMATIONS.open;\n    // Active buttons populated by events provided by the attached controls.\n    this.pressedButtons = {};\n    this.touchedButtons = {};\n    this.loader = new THREE.GLTFLoader();\n    this.loader.setCrossOrigin('anonymous');\n\n    this.onGripDown = function () { self.handleButton('grip', 'down'); };\n    this.onGripUp = function () { self.handleButton('grip', 'up'); };\n    this.onTrackpadDown = function () { self.handleButton('trackpad', 'down'); };\n    this.onTrackpadUp = function () { self.handleButton('trackpad', 'up'); };\n    this.onTrackpadTouchStart = function () { self.handleButton('trackpad', 'touchstart'); };\n    this.onTrackpadTouchEnd = function () { self.handleButton('trackpad', 'touchend'); };\n    this.onTriggerDown = function () { self.handleButton('trigger', 'down'); };\n    this.onTriggerUp = function () { self.handleButton('trigger', 'up'); };\n    this.onTriggerTouchStart = function () { self.handleButton('trigger', 'touchstart'); };\n    this.onTriggerTouchEnd = function () { self.handleButton('trigger', 'touchend'); };\n    this.onGripTouchStart = function () { self.handleButton('grip', 'touchstart'); };\n    this.onGripTouchEnd = function () { self.handleButton('grip', 'touchend'); };\n    this.onThumbstickDown = function () { self.handleButton('thumbstick', 'down'); };\n    this.onThumbstickUp = function () { self.handleButton('thumbstick', 'up'); };\n    this.onAorXTouchStart = function () { self.handleButton('AorX', 'touchstart'); };\n    this.onAorXTouchEnd = function () { self.handleButton('AorX', 'touchend'); };\n    this.onBorYTouchStart = function () { self.handleButton('BorY', 'touchstart'); };\n    this.onBorYTouchEnd = function () { self.handleButton('BorY', 'touchend'); };\n    this.onSurfaceTouchStart = function () { self.handleButton('surface', 'touchstart'); };\n    this.onSurfaceTouchEnd = function () { self.handleButton('surface', 'touchend'); };\n\n    el.addEventListener('controllerconnected', this.onControllerConnected);\n    el.addEventListener('controllerdisconnected', this.onControllerDisconnected);\n\n    // Hidden by default.\n    el.object3D.visible = false;\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n  },\n\n  tick: function (time, delta) {\n    var mesh = this.el.getObject3D('mesh');\n\n    if (!mesh || !mesh.mixer) { return; }\n\n    mesh.mixer.update(delta / 1000);\n  },\n\n  addEventListeners: function () {\n    var el = this.el;\n    el.addEventListener('gripdown', this.onGripDown);\n    el.addEventListener('gripup', this.onGripUp);\n    el.addEventListener('trackpaddown', this.onTrackpadDown);\n    el.addEventListener('trackpadup', this.onTrackpadUp);\n    el.addEventListener('trackpadtouchstart', this.onTrackpadTouchStart);\n    el.addEventListener('trackpadtouchend', this.onTrackpadTouchEnd);\n    el.addEventListener('triggerdown', this.onTriggerDown);\n    el.addEventListener('triggerup', this.onTriggerUp);\n    el.addEventListener('triggertouchstart', this.onTriggerTouchStart);\n    el.addEventListener('triggertouchend', this.onTriggerTouchEnd);\n    el.addEventListener('griptouchstart', this.onGripTouchStart);\n    el.addEventListener('griptouchend', this.onGripTouchEnd);\n    el.addEventListener('thumbstickdown', this.onThumbstickDown);\n    el.addEventListener('thumbstickup', this.onThumbstickUp);\n    el.addEventListener('abuttontouchstart', this.onAorXTouchStart);\n    el.addEventListener('abuttontouchend', this.onAorXTouchEnd);\n    el.addEventListener('bbuttontouchstart', this.onBorYTouchStart);\n    el.addEventListener('bbuttontouchend', this.onBorYTouchEnd);\n    el.addEventListener('xbuttontouchstart', this.onAorXTouchStart);\n    el.addEventListener('xbuttontouchend', this.onAorXTouchEnd);\n    el.addEventListener('ybuttontouchstart', this.onBorYTouchStart);\n    el.addEventListener('ybuttontouchend', this.onBorYTouchEnd);\n    el.addEventListener('surfacetouchstart', this.onSurfaceTouchStart);\n    el.addEventListener('surfacetouchend', this.onSurfaceTouchEnd);\n  },\n\n  removeEventListeners: function () {\n    var el = this.el;\n    el.removeEventListener('gripdown', this.onGripDown);\n    el.removeEventListener('gripup', this.onGripUp);\n    el.removeEventListener('trackpaddown', this.onTrackpadDown);\n    el.removeEventListener('trackpadup', this.onTrackpadUp);\n    el.removeEventListener('trackpadtouchstart', this.onTrackpadTouchStart);\n    el.removeEventListener('trackpadtouchend', this.onTrackpadTouchEnd);\n    el.removeEventListener('triggerdown', this.onTriggerDown);\n    el.removeEventListener('triggerup', this.onTriggerUp);\n    el.removeEventListener('triggertouchstart', this.onTriggerTouchStart);\n    el.removeEventListener('triggertouchend', this.onTriggerTouchEnd);\n    el.removeEventListener('griptouchstart', this.onGripTouchStart);\n    el.removeEventListener('griptouchend', this.onGripTouchEnd);\n    el.removeEventListener('thumbstickdown', this.onThumbstickDown);\n    el.removeEventListener('thumbstickup', this.onThumbstickUp);\n    el.removeEventListener('abuttontouchstart', this.onAorXTouchStart);\n    el.removeEventListener('abuttontouchend', this.onAorXTouchEnd);\n    el.removeEventListener('bbuttontouchstart', this.onBorYTouchStart);\n    el.removeEventListener('bbuttontouchend', this.onBorYTouchEnd);\n    el.removeEventListener('xbuttontouchstart', this.onAorXTouchStart);\n    el.removeEventListener('xbuttontouchend', this.onAorXTouchEnd);\n    el.removeEventListener('ybuttontouchstart', this.onBorYTouchStart);\n    el.removeEventListener('ybuttontouchend', this.onBorYTouchEnd);\n    el.removeEventListener('surfacetouchstart', this.onSurfaceTouchStart);\n    el.removeEventListener('surfacetouchend', this.onSurfaceTouchEnd);\n  },\n\n  /**\n   * Update handler. More like the `init` handler since the only property is the hand, and\n   * that won't be changing much.\n   */\n  update: function (previousHand) {\n    var controlConfiguration;\n    var el = this.el;\n    var hand = this.data;\n    var self = this;\n\n    // Get common configuration to abstract different vendor controls.\n    controlConfiguration = {\n      hand: hand,\n      model: false,\n      orientationOffset: {x: 0, y: 0, z: hand === 'left' ? 90 : -90}\n    };\n\n    // Set model.\n    if (hand !== previousHand) {\n      this.loader.load(MODEL_URLS[hand], function (gltf) {\n        var mesh = gltf.scene.children[0];\n        mesh.mixer = new THREE.AnimationMixer(mesh);\n        self.clips = gltf.animations;\n        el.setObject3D('mesh', mesh);\n        mesh.position.set(0, 0, 0);\n        mesh.rotation.set(0, 0, 0);\n        el.setAttribute('vive-controls', controlConfiguration);\n        el.setAttribute('oculus-touch-controls', controlConfiguration);\n        el.setAttribute('windows-motion-controls', controlConfiguration);\n      });\n    }\n  },\n\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  },\n\n  /**\n   * Play model animation, based on which button was pressed and which kind of event.\n   *\n   * 1. Process buttons.\n   * 2. Determine gesture (this.determineGesture()).\n   * 3. Animation gesture (this.animationGesture()).\n   * 4. Emit gesture events (this.emitGestureEvents()).\n   *\n   * @param {string} button - Name of the button.\n   * @param {string} evt - Type of event for the button (i.e., down/up/touchstart/touchend).\n   */\n  handleButton: function (button, evt) {\n    var lastGesture;\n    var isPressed = evt === 'down';\n    var isTouched = evt === 'touchstart';\n\n    // Update objects.\n    if (evt.indexOf('touch') === 0) {\n      // Update touch object.\n      if (isTouched === this.touchedButtons[button]) { return; }\n      this.touchedButtons[button] = isTouched;\n    } else {\n      // Update button object.\n      if (isPressed === this.pressedButtons[button]) { return; }\n      this.pressedButtons[button] = isPressed;\n    }\n\n    // Determine the gesture.\n    lastGesture = this.gesture;\n    this.gesture = this.determineGesture();\n\n    // Same gesture.\n    if (this.gesture === lastGesture) { return; }\n    // Animate gesture.\n    this.animateGesture(this.gesture, lastGesture);\n\n    // Emit events.\n    this.emitGestureEvents(this.gesture, lastGesture);\n  },\n\n  /**\n   * Determine which pose hand should be in considering active and touched buttons.\n   */\n  determineGesture: function () {\n    var gesture;\n    var isGripActive = this.pressedButtons['grip'];\n    var isSurfaceActive = this.pressedButtons['surface'] || this.touchedButtons['surface'];\n    var isTrackpadActive = this.pressedButtons['trackpad'] || this.touchedButtons['trackpad'];\n    var isTriggerActive = this.pressedButtons['trigger'] || this.touchedButtons['trigger'];\n    var isABXYActive = this.touchedButtons['AorX'] || this.touchedButtons['BorY'];\n    var isVive = isViveController(this.el.components['tracked-controls']);\n\n    // Works well with Oculus Touch and Windows Motion Controls, but Vive needs tweaks.\n    if (isGripActive) {\n      if (isVive) {\n        gesture = ANIMATIONS.fist;\n      } else\n        if (isSurfaceActive || isABXYActive || isTrackpadActive) {\n          gesture = isTriggerActive ? ANIMATIONS.fist : ANIMATIONS.point;\n        } else {\n          gesture = isTriggerActive ? ANIMATIONS.thumbUp : ANIMATIONS.pointThumb;\n        }\n    } else {\n      if (isTriggerActive) {\n        gesture = !isVive ? ANIMATIONS.hold : ANIMATIONS.fist;\n      } else if (isVive && isTrackpadActive) {\n        gesture = ANIMATIONS.point;\n      }\n    }\n\n    return gesture;\n  },\n\n  /**\n   * Play corresponding clip to a gesture\n   */\n  getClip: function (gesture) {\n    var clip;\n    var i;\n    for (i = 0; i < this.clips.length; i++) {\n      clip = this.clips[i];\n      if (clip.name !== gesture) { continue; }\n      return clip;\n    }\n  },\n\n  /**\n   * Play gesture animation.\n   *\n   * @param {string} gesture - Which pose to animate to. If absent, then animate to open.\n   * @param {string} lastGesture - Previous gesture, to reverse back to open if needed.\n   */\n  animateGesture: function (gesture, lastGesture) {\n    if (gesture) {\n      this.playAnimation(gesture || ANIMATIONS.open, lastGesture, false);\n      return;\n    }\n\n    // If no gesture, then reverse the current gesture back to open pose.\n    this.playAnimation(lastGesture, lastGesture, true);\n  },\n\n  /**\n   * Emit `hand-controls`-specific events.\n   */\n  emitGestureEvents: function (gesture, lastGesture) {\n    var el = this.el;\n    var eventName;\n\n    if (lastGesture === gesture) { return; }\n\n    // Emit event for lastGesture not inactive.\n    eventName = getGestureEventName(lastGesture, false);\n    if (eventName) { el.emit(eventName); }\n\n    // Emit event for current gesture now active.\n    eventName = getGestureEventName(gesture, true);\n    if (eventName) { el.emit(eventName); }\n  },\n\n/**\n  * Play hand animation based on button state.\n  *\n  * @param {string} gesture - Name of the animation as specified by the model.\n  * @param {string} lastGesture - Previous pose.\n  * @param {boolean} reverse - Whether animation should play in reverse.\n  */\n  playAnimation: function (gesture, lastGesture, reverse) {\n    var clip;\n    var fromAction;\n    var mesh = this.el.getObject3D('mesh');\n    var toAction;\n\n    if (!mesh) { return; }\n\n    // Stop all current animations.\n    mesh.mixer.stopAllAction();\n\n    // Grab clip action.\n    clip = this.getClip(gesture);\n    toAction = mesh.mixer.clipAction(clip);\n    toAction.clampWhenFinished = true;\n    toAction.loop = THREE.LoopRepeat;\n    toAction.repetitions = 0;\n    toAction.timeScale = reverse ? -1 : 1;\n    toAction.time = reverse ? clip.duration : 0;\n    toAction.weight = 1;\n\n    // No gesture to gesture or gesture to no gesture.\n    if (!lastGesture || gesture === lastGesture) {\n      // Stop all current animations.\n      mesh.mixer.stopAllAction();\n      // Play animation.\n      toAction.play();\n      return;\n    }\n\n    // Animate or crossfade from gesture to gesture.\n    clip = this.getClip(lastGesture);\n    fromAction = mesh.mixer.clipAction(clip);\n    fromAction.weight = 0.15;\n    fromAction.play();\n    toAction.play();\n    fromAction.crossFadeTo(toAction, 0.15, true);\n  }\n});\n\n/**\n * Suffix gestures based on toggle state (e.g., open/close, up/down, start/end).\n *\n * @param {string} gesture\n * @param {boolean} active\n */\nfunction getGestureEventName (gesture, active) {\n  var eventName;\n\n  if (!gesture) { return; }\n\n  eventName = EVENTS[gesture];\n  if (eventName === 'grip') {\n    return eventName + (active ? 'close' : 'open');\n  }\n  if (eventName === 'point' || eventName === 'thumb') {\n    return eventName + (active ? 'up' : 'down');\n  }\n  if (eventName === 'pointing' || eventName === 'pistol') {\n    return eventName + (active ? 'start' : 'end');\n  }\n  return;\n}\n\nfunction isViveController (trackedControls) {\n  var controllerId = trackedControls && trackedControls.controller &&\n                     trackedControls.controller.id;\n  return controllerId && controllerId.indexOf('OpenVR ') === 0;\n}\n","var registerComponent = require('../core/component').registerComponent;\nvar utils = require('../utils/');\n\nregisterComponent('laser-controls', {\n  schema: {\n    hand: {default: 'right'},\n    model: {default: true},\n    defaultModelColor: {type: 'color', default: 'grey'}\n  },\n\n  init: function () {\n    var config = this.config;\n    var data = this.data;\n    var el = this.el;\n    var self = this;\n    var modelEnabled = this.data.model && !this.el.sceneEl.hasWebXR;\n    var controlsConfiguration = {hand: data.hand, model: modelEnabled};\n\n    // Set all controller models.\n    el.setAttribute('daydream-controls', controlsConfiguration);\n    el.setAttribute('gearvr-controls', controlsConfiguration);\n    el.setAttribute('oculus-go-controls', controlsConfiguration);\n    el.setAttribute('oculus-touch-controls', controlsConfiguration);\n    el.setAttribute('vive-controls', controlsConfiguration);\n    el.setAttribute('vive-focus-controls', controlsConfiguration);\n    el.setAttribute('windows-motion-controls', controlsConfiguration);\n\n    // WebXR doesn't allow to discriminate between controllers, a default model is used.\n    if (this.data.model && this.el.sceneEl.hasWebXR) { this.initDefaultModel(); }\n\n    // Wait for controller to connect, or have a valid pointing pose, before creating ray\n    el.addEventListener('controllerconnected', createRay);\n    el.addEventListener('controllerdisconnected', hideRay);\n    el.addEventListener('controllermodelready', function (evt) {\n      createRay(evt);\n      self.modelReady = true;\n    });\n\n    function createRay (evt) {\n      var controllerConfig = config[evt.detail.name];\n\n      if (!controllerConfig) { return; }\n\n      // Show the line unless a particular config opts to hide it, until a controllermodelready\n      // event comes through.\n      var raycasterConfig = utils.extend({\n        showLine: true\n      }, controllerConfig.raycaster || {});\n\n      // The controllermodelready event contains a rayOrigin that takes into account\n      // offsets specific to the loaded model.\n      if (evt.detail.rayOrigin) {\n        raycasterConfig.origin = evt.detail.rayOrigin.origin;\n        raycasterConfig.direction = evt.detail.rayOrigin.direction;\n        raycasterConfig.showLine = true;\n      }\n\n      // Only apply a default raycaster if it does not yet exist. This prevents it overwriting\n      // config applied from a controllermodelready event.\n      if (evt.detail.rayOrigin || !self.modelReady) {\n        el.setAttribute('raycaster', raycasterConfig);\n      } else {\n        el.setAttribute('raycaster', 'showLine', true);\n      }\n\n      el.setAttribute('cursor', utils.extend({\n        fuse: false\n      }, controllerConfig.cursor));\n    }\n\n    function hideRay () {\n      el.setAttribute('raycaster', 'showLine', false);\n    }\n  },\n\n  config: {\n    'daydream-controls': {\n      cursor: {downEvents: ['trackpaddown', 'triggerdown'], upEvents: ['trackpadup', 'triggerup']}\n    },\n\n    'gearvr-controls': {\n      cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']},\n      raycaster: {origin: {x: 0, y: 0.0005, z: 0}}\n    },\n\n    'oculus-go-controls': {\n      cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']},\n      raycaster: {origin: {x: 0, y: 0.0005, z: 0}}\n    },\n\n    'oculus-touch-controls': {\n      cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']},\n      raycaster: {origin: {x: 0, y: 0, z: 0}}\n    },\n\n    'vive-controls': {\n      cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']}\n    },\n\n    'vive-focus-controls': {\n      cursor: {downEvents: ['trackpaddown', 'triggerdown'], upEvents: ['trackpadup', 'triggerup']}\n    },\n\n    'windows-motion-controls': {\n      cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']},\n      raycaster: {showLine: false}\n    }\n  },\n\n  initDefaultModel: function () {\n    var modelEl = this.modelEl = document.createElement('a-entity');\n    modelEl.setAttribute('geometry', {\n      primitive: 'sphere',\n      radius: 0.03\n    });\n    modelEl.setAttribute('material', {color: this.data.color});\n    this.el.appendChild(modelEl);\n  }\n});\n","var bind = require('../utils/bind');\nvar diff = require('../utils').diff;\nvar debug = require('../utils/debug');\nvar registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\n\nvar degToRad = THREE.Math.degToRad;\nvar warn = debug('components:light:warn');\n\n/**\n * Light component.\n */\nmodule.exports.Component = registerComponent('light', {\n  schema: {\n    angle: {default: 60, if: {type: ['spot']}},\n    color: {type: 'color'},\n    groundColor: {type: 'color', if: {type: ['hemisphere']}},\n    decay: {default: 1, if: {type: ['point', 'spot']}},\n    distance: {default: 0.0, min: 0, if: {type: ['point', 'spot']}},\n    intensity: {default: 1.0, min: 0, if: {type: ['ambient', 'directional', 'hemisphere', 'point', 'spot']}},\n    penumbra: {default: 0, min: 0, max: 1, if: {type: ['spot']}},\n    type: {\n      default: 'directional',\n      oneOf: ['ambient', 'directional', 'hemisphere', 'point', 'spot'],\n      schemaChange: true\n    },\n    target: {type: 'selector', if: {type: ['spot', 'directional']}},\n\n    // Shadows.\n    castShadow: {default: false, if: {type: ['point', 'spot', 'directional']}},\n    shadowBias: {default: 0, if: {castShadow: true}},\n    shadowCameraFar: {default: 500, if: {castShadow: true}},\n    shadowCameraFov: {default: 90, if: {castShadow: true}},\n    shadowCameraNear: {default: 0.5, if: {castShadow: true}},\n    shadowCameraTop: {default: 5, if: {castShadow: true}},\n    shadowCameraRight: {default: 5, if: {castShadow: true}},\n    shadowCameraBottom: {default: -5, if: {castShadow: true}},\n    shadowCameraLeft: {default: -5, if: {castShadow: true}},\n    shadowCameraVisible: {default: false, if: {castShadow: true}},\n    shadowMapHeight: {default: 512, if: {castShadow: true}},\n    shadowMapWidth: {default: 512, if: {castShadow: true}},\n    shadowRadius: {default: 1, if: {castShadow: true}}\n  },\n\n  /**\n   * Notifies scene a light has been added to remove default lighting.\n   */\n  init: function () {\n    var el = this.el;\n    this.light = null;\n    this.defaultTarget = null;\n    this.rendererSystem = this.el.sceneEl.systems.renderer;\n    this.system.registerLight(el);\n  },\n\n  /**\n   * (Re)create or update light.\n   */\n  update: function (oldData) {\n    var data = this.data;\n    var diffData = diff(data, oldData);\n    var light = this.light;\n    var rendererSystem = this.rendererSystem;\n    var self = this;\n\n    // Existing light.\n    if (light && !('type' in diffData)) {\n      var shadowsLoaded = false;\n      // Light type has not changed. Update light.\n      Object.keys(diffData).forEach(function (key) {\n        var value = data[key];\n\n        switch (key) {\n          case 'color': {\n            light.color.set(value);\n            rendererSystem.applyColorCorrection(light.color);\n            break;\n          }\n\n          case 'groundColor': {\n            light.groundColor.set(value);\n            rendererSystem.applyColorCorrection(light.groundColor);\n            break;\n          }\n\n          case 'angle': {\n            light.angle = degToRad(value);\n            break;\n          }\n\n          case 'target': {\n            // Reset target if selector is null.\n            if (value === null) {\n              if (data.type === 'spot' || data.type === 'directional') {\n                light.target = self.defaultTarget;\n              }\n            } else {\n              // Target specified, set target to entity's `object3D` when it is loaded.\n              if (value.hasLoaded) {\n                self.onSetTarget(value, light);\n              } else {\n                value.addEventListener('loaded', bind(self.onSetTarget, self, value, light));\n              }\n            }\n            break;\n          }\n\n          case 'castShadow':\n          case 'shadowBias':\n          case 'shadowCameraFar':\n          case 'shadowCameraFov':\n          case 'shadowCameraNear':\n          case 'shadowCameraTop':\n          case 'shadowCameraRight':\n          case 'shadowCameraBottom':\n          case 'shadowCameraLeft':\n          case 'shadowCameraVisible':\n          case 'shadowMapHeight':\n          case 'shadowMapWidth':\n          case 'shadowRadius':\n            if (!shadowsLoaded) {\n              self.updateShadow();\n              shadowsLoaded = true;\n            }\n            break;\n\n          default: {\n            light[key] = value;\n          }\n        }\n      });\n      return;\n    }\n\n    // No light yet or light type has changed. Create and add light.\n    this.setLight(this.data);\n    this.updateShadow();\n  },\n\n  setLight: function (data) {\n    var el = this.el;\n    var newLight = this.getLight(data);\n    if (newLight) {\n      if (this.light) {\n        el.removeObject3D('light');\n      }\n\n      this.light = newLight;\n      this.light.el = el;\n      el.setObject3D('light', this.light);\n\n      // HACK solution for issue #1624\n      if (data.type === 'spot' || data.type === 'directional' || data.type === 'hemisphere') {\n        el.getObject3D('light').translateY(-1);\n      }\n\n      // set and position default lighttarget as a child to enable spotlight orientation\n      if (data.type === 'spot') {\n        el.setObject3D('light-target', this.defaultTarget);\n        el.getObject3D('light-target').position.set(0, 0, -1);\n      }\n    }\n  },\n\n  /**\n   * Updates shadow-related properties on the current light.\n   */\n  updateShadow: function () {\n    var el = this.el;\n    var data = this.data;\n    var light = this.light;\n\n    light.castShadow = data.castShadow;\n\n    // Shadow camera helper.\n    var cameraHelper = el.getObject3D('cameraHelper');\n    if (data.shadowCameraVisible && !cameraHelper) {\n      el.setObject3D('cameraHelper', new THREE.CameraHelper(light.shadow.camera));\n    } else if (!data.shadowCameraVisible && cameraHelper) {\n      el.removeObject3D('cameraHelper');\n    }\n\n    if (!data.castShadow) { return light; }\n\n    // Shadow appearance.\n    light.shadow.bias = data.shadowBias;\n    light.shadow.radius = data.shadowRadius;\n    light.shadow.mapSize.height = data.shadowMapHeight;\n    light.shadow.mapSize.width = data.shadowMapWidth;\n\n    // Shadow camera.\n    light.shadow.camera.near = data.shadowCameraNear;\n    light.shadow.camera.far = data.shadowCameraFar;\n    if (light.shadow.camera instanceof THREE.OrthographicCamera) {\n      light.shadow.camera.top = data.shadowCameraTop;\n      light.shadow.camera.right = data.shadowCameraRight;\n      light.shadow.camera.bottom = data.shadowCameraBottom;\n      light.shadow.camera.left = data.shadowCameraLeft;\n    } else {\n      light.shadow.camera.fov = data.shadowCameraFov;\n    }\n    light.shadow.camera.updateProjectionMatrix();\n\n    if (cameraHelper) { cameraHelper.update(); }\n  },\n\n  /**\n   * Creates a new three.js light object given data object defining the light.\n   *\n   * @param {object} data\n   */\n  getLight: function (data) {\n    var angle = data.angle;\n    var color = new THREE.Color(data.color);\n    this.rendererSystem.applyColorCorrection(color);\n    color = color.getHex();\n    var decay = data.decay;\n    var distance = data.distance;\n    var groundColor = new THREE.Color(data.groundColor);\n    this.rendererSystem.applyColorCorrection(groundColor);\n    groundColor = groundColor.getHex();\n    var intensity = data.intensity;\n    var type = data.type;\n    var target = data.target;\n    var light = null;\n\n    switch (type.toLowerCase()) {\n      case 'ambient': {\n        return new THREE.AmbientLight(color, intensity);\n      }\n\n      case 'directional': {\n        light = new THREE.DirectionalLight(color, intensity);\n        this.defaultTarget = light.target;\n        if (target) {\n          if (target.hasLoaded) {\n            this.onSetTarget(target, light);\n          } else {\n            target.addEventListener('loaded', bind(this.onSetTarget, this, target, light));\n          }\n        }\n        return light;\n      }\n\n      case 'hemisphere': {\n        return new THREE.HemisphereLight(color, groundColor, intensity);\n      }\n\n      case 'point': {\n        return new THREE.PointLight(color, intensity, distance, decay);\n      }\n\n      case 'spot': {\n        light = new THREE.SpotLight(color, intensity, distance, degToRad(angle), data.penumbra, decay);\n        this.defaultTarget = light.target;\n        if (target) {\n          if (target.hasLoaded) {\n            this.onSetTarget(target, light);\n          } else {\n            target.addEventListener('loaded', bind(this.onSetTarget, this, target, light));\n          }\n        }\n        return light;\n      }\n\n      default: {\n        warn('%s is not a valid light type. ' +\n           'Choose from ambient, directional, hemisphere, point, spot.', type);\n      }\n    }\n  },\n\n  onSetTarget: function (targetEl, light) {\n    light.target = targetEl.object3D;\n  },\n\n  /**\n   * Remove light on remove (callback).\n   */\n  remove: function () {\n    var el = this.el;\n    el.removeObject3D('light');\n    if (el.getObject3D('cameraHelper')) {\n      el.removeObject3D('cameraHelper');\n    }\n  }\n});\n","/* global THREE */\nvar registerComponent = require('../core/component').registerComponent;\n\nmodule.exports.Component = registerComponent('line', {\n  schema: {\n    start: {type: 'vec3', default: {x: 0, y: 0, z: 0}},\n    end: {type: 'vec3', default: {x: 0, y: 0, z: 0}},\n    color: {type: 'color', default: '#74BEC1'},\n    opacity: {type: 'number', default: 1},\n    visible: {default: true}\n  },\n\n  multiple: true,\n\n  init: function () {\n    var data = this.data;\n    var geometry;\n    var material;\n    this.rendererSystem = this.el.sceneEl.systems.renderer;\n    material = this.material = new THREE.LineBasicMaterial({\n      color: data.color,\n      opacity: data.opacity,\n      transparent: data.opacity < 1,\n      visible: data.visible\n    });\n    geometry = this.geometry = new THREE.BufferGeometry();\n    geometry.addAttribute('position', new THREE.BufferAttribute(new Float32Array(2 * 3), 3));\n\n    this.rendererSystem.applyColorCorrection(material.color);\n    this.line = new THREE.Line(geometry, material);\n    this.el.setObject3D(this.attrName, this.line);\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n    var geometry = this.geometry;\n    var geoNeedsUpdate = false;\n    var material = this.material;\n    var positionArray = geometry.attributes.position.array;\n\n    // Update geometry.\n    if (!isEqualVec3(data.start, oldData.start)) {\n      positionArray[0] = data.start.x;\n      positionArray[1] = data.start.y;\n      positionArray[2] = data.start.z;\n      geoNeedsUpdate = true;\n    }\n\n    if (!isEqualVec3(data.end, oldData.end)) {\n      positionArray[3] = data.end.x;\n      positionArray[4] = data.end.y;\n      positionArray[5] = data.end.z;\n      geoNeedsUpdate = true;\n    }\n\n    if (geoNeedsUpdate) {\n      geometry.attributes.position.needsUpdate = true;\n      geometry.computeBoundingSphere();\n    }\n\n    material.color.setStyle(data.color);\n    this.rendererSystem.applyColorCorrection(material.color);\n    material.opacity = data.opacity;\n    material.transparent = data.opacity < 1;\n    material.visible = data.visible;\n  },\n\n  remove: function () {\n    this.el.removeObject3D('line', this.line);\n  }\n});\n\nfunction isEqualVec3 (a, b) {\n  if (!a || !b) { return false; }\n  return (a.x === b.x && a.y === b.y && a.z === b.z);\n}\n","var registerComponent = require('../core/component').registerComponent;\nvar registerShader = require('../core/shader').registerShader;\nvar THREE = require('../lib/three');\n\n/**\n * Link component. Connect experiences and traverse between them in VR\n *\n * @member {object} hiddenEls - Store the hidden elements during peek mode.\n */\nmodule.exports.Component = registerComponent('link', {\n  schema: {\n    backgroundColor: {default: 'red', type: 'color'},\n    borderColor: {default: 'white', type: 'color'},\n    highlighted: {default: false},\n    highlightedColor: {default: '#24CAFF', type: 'color'},\n    href: {default: ''},\n    image: {type: 'asset'},\n    on: {default: 'click'},\n    peekMode: {default: false},\n    title: {default: ''},\n    titleColor: {default: 'white', type: 'color'},\n    visualAspectEnabled: {default: false}\n  },\n\n  init: function () {\n    this.navigate = this.navigate.bind(this);\n    this.previousQuaternion = undefined;\n    this.quaternionClone = new THREE.Quaternion();\n    // Store hidden elements during peek mode so we can show them again later.\n    this.hiddenEls = [];\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n    var backgroundColor;\n    var strokeColor;\n\n    if (!data.visualAspectEnabled) { return; }\n\n    this.initVisualAspect();\n\n    backgroundColor = data.highlighted ? data.highlightedColor : data.backgroundColor;\n    strokeColor = data.highlighted ? data.highlightedColor : data.borderColor;\n    el.setAttribute('material', 'backgroundColor', backgroundColor);\n    el.setAttribute('material', 'strokeColor', strokeColor);\n\n    if (data.on !== oldData.on) { this.updateEventListener(); }\n\n    if (oldData.peekMode !== undefined &&\n        data.peekMode !== oldData.peekMode) { this.updatePeekMode(); }\n\n    if (!data.image || oldData.image === data.image) { return; }\n\n    el.setAttribute('material', 'pano',\n                    typeof data.image === 'string' ? data.image : data.image.src);\n  },\n\n  /*\n   * Toggle all elements and full 360 preview of the linked page.\n   */\n  updatePeekMode: function () {\n    var el = this.el;\n    var sphereEl = this.sphereEl;\n    if (this.data.peekMode) {\n      this.hideAll();\n      el.getObject3D('mesh').visible = false;\n      sphereEl.setAttribute('visible', true);\n    } else {\n      this.showAll();\n      el.getObject3D('mesh').visible = true;\n      sphereEl.setAttribute('visible', false);\n    }\n  },\n\n  play: function () {\n    this.updateEventListener();\n  },\n\n  pause: function () {\n    this.removeEventListener();\n  },\n\n  updateEventListener: function () {\n    var el = this.el;\n    if (!el.isPlaying) { return; }\n    this.removeEventListener();\n    el.addEventListener(this.data.on, this.navigate);\n  },\n\n  removeEventListener: function () {\n    var on = this.data.on;\n    if (!on) { return; }\n    this.el.removeEventListener(on, this.navigate);\n  },\n\n  initVisualAspect: function () {\n    var el = this.el;\n    var semiSphereEl;\n    var sphereEl;\n    var textEl;\n\n    if (!this.data.visualAspectEnabled || this.visualAspectInitialized) { return; }\n\n    textEl = this.textEl = this.textEl || document.createElement('a-entity');\n    sphereEl = this.sphereEl = this.sphereEl || document.createElement('a-entity');\n    semiSphereEl = this.semiSphereEl = this.semiSphereEl || document.createElement('a-entity');\n\n    // Set portal.\n    el.setAttribute('geometry', {primitive: 'circle', radius: 1.0, segments: 64});\n    el.setAttribute('material', {shader: 'portal', pano: this.data.image, side: 'double'});\n\n    // Set text that displays the link title and URL.\n    textEl.setAttribute('text', {\n      color: this.data.titleColor,\n      align: 'center',\n      font: 'kelsonsans',\n      value: this.data.title || this.data.href,\n      width: 4\n    });\n    textEl.setAttribute('position', '0 1.5 0');\n    el.appendChild(textEl);\n\n    // Set sphere rendered when camera is close to portal to allow user to peek inside.\n    semiSphereEl.setAttribute('geometry', {\n      primitive: 'sphere',\n      radius: 1.0,\n      phiStart: 0,\n      segmentsWidth: 64,\n      segmentsHeight: 64,\n      phiLength: 180,\n      thetaStart: 0,\n      thetaLength: 360\n    });\n    semiSphereEl.setAttribute('material', {\n      shader: 'portal',\n      borderEnabled: 0.0,\n      pano: this.data.image,\n      side: 'back'\n    });\n    semiSphereEl.setAttribute('rotation', '0 180 0');\n    semiSphereEl.setAttribute('position', '0 0 0');\n    semiSphereEl.setAttribute('visible', false);\n    el.appendChild(semiSphereEl);\n\n    // Set sphere rendered when camera is close to portal to allow user to peek inside.\n    sphereEl.setAttribute('geometry', {\n      primitive: 'sphere',\n      radius: 10,\n      segmentsWidth: 64,\n      segmentsHeight: 64\n    });\n    sphereEl.setAttribute('material', {\n      shader: 'portal',\n      borderEnabled: 0.0,\n      pano: this.data.image,\n      side: 'back'\n    });\n    sphereEl.setAttribute('visible', false);\n    el.appendChild(sphereEl);\n\n    this.visualAspectInitialized = true;\n  },\n\n  navigate: function () {\n    window.location = this.data.href;\n  },\n\n  /**\n   * 1. Swap plane that represents portal with sphere with a hole when the camera is close\n   * so user can peek inside portal. Sphere is rendered on oposite side of portal\n   * from where user enters.\n   * 2. Place the url/title above or inside portal depending on distance to camera.\n   * 3. Face portal to camera when far away from user.\n   */\n  tick: (function () {\n    var cameraWorldPosition = new THREE.Vector3();\n    var elWorldPosition = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    var scale = new THREE.Vector3();\n\n    return function () {\n      var el = this.el;\n      var object3D = el.object3D;\n      var camera = el.sceneEl.camera;\n      var cameraPortalOrientation;\n      var distance;\n      var textEl = this.textEl;\n\n      if (!this.data.visualAspectEnabled) { return; }\n\n      // Update matrices\n      object3D.updateMatrixWorld();\n      camera.parent.updateMatrixWorld();\n      camera.updateMatrixWorld();\n\n      object3D.matrix.decompose(elWorldPosition, quaternion, scale);\n      elWorldPosition.setFromMatrixPosition(object3D.matrixWorld);\n      cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n      distance = elWorldPosition.distanceTo(cameraWorldPosition);\n\n      if (distance > 20) {\n        // Store original orientation to be restored when the portal stops facing the camera.\n        if (!this.previousQuaternion) {\n          this.quaternionClone.copy(quaternion);\n          this.previousQuaternion = this.quaternionClone;\n        }\n        // If the portal is far away from the user, face portal to camera.\n        object3D.lookAt(cameraWorldPosition);\n      } else {\n        // When portal is close to the user/camera.\n        cameraPortalOrientation = this.calculateCameraPortalOrientation();\n        // If user gets very close to portal, replace with holed sphere they can peek in.\n        if (distance < 0.5) {\n          // Configure text size and sphere orientation depending side user approaches portal.\n          if (this.semiSphereEl.getAttribute('visible') === true) { return; }\n          textEl.setAttribute('text', 'width', 1.5);\n          if (cameraPortalOrientation <= 0.0) {\n            textEl.setAttribute('position', '0 0 0.75');\n            textEl.setAttribute('rotation', '0 180 0');\n            this.semiSphereEl.setAttribute('rotation', '0 0 0');\n          } else {\n            textEl.setAttribute('position', '0 0 -0.75');\n            textEl.setAttribute('rotation', '0 0 0');\n            this.semiSphereEl.setAttribute('rotation', '0 180 0');\n          }\n          el.getObject3D('mesh').visible = false;\n          this.semiSphereEl.setAttribute('visible', true);\n          this.peekCameraPortalOrientation = cameraPortalOrientation;\n        } else {\n          // Calculate wich side the camera is approaching the camera (back / front).\n          // Adjust text orientation based on camera position.\n          if (cameraPortalOrientation <= 0.0) {\n            textEl.setAttribute('rotation', '0 180 0');\n          } else {\n            textEl.setAttribute('rotation', '0 0 0');\n          }\n          textEl.setAttribute('text', 'width', 5);\n          textEl.setAttribute('position', '0 1.5 0');\n          el.getObject3D('mesh').visible = true;\n          this.semiSphereEl.setAttribute('visible', false);\n          this.peekCameraPortalOrientation = undefined;\n        }\n        if (this.previousQuaternion) {\n          object3D.quaternion.copy(this.previousQuaternion);\n          this.previousQuaternion = undefined;\n        }\n      }\n    };\n  })(),\n\n  hideAll: function () {\n    var el = this.el;\n    var hiddenEls = this.hiddenEls;\n    var self = this;\n    if (hiddenEls.length > 0) { return; }\n    el.sceneEl.object3D.traverse(function (object) {\n      if (object && object.el && object.el.hasAttribute('link-controls')) { return; }\n      if (!object.el || object === el.sceneEl.object3D || object.el === el ||\n          object.el === self.sphereEl || object.el === el.sceneEl.cameraEl ||\n          object.el.getAttribute('visible') === false || object.el === self.textEl ||\n          object.el === self.semiSphereEl) {\n        return;\n      }\n      object.el.setAttribute('visible', false);\n      hiddenEls.push(object.el);\n    });\n  },\n\n  showAll: function () {\n    this.hiddenEls.forEach(function (el) { el.setAttribute('visible', true); });\n    this.hiddenEls = [];\n  },\n\n  /**\n   * Calculate whether the camera faces the front or back face of the portal.\n   * @returns {number} > 0 if camera faces front of portal, < 0 if it faces back of portal.\n   */\n  calculateCameraPortalOrientation: (function () {\n    var mat4 = new THREE.Matrix4();\n    var cameraPosition = new THREE.Vector3();\n    var portalNormal = new THREE.Vector3(0, 0, 1);\n    var portalPosition = new THREE.Vector3(0, 0, 0);\n\n    return function () {\n      var el = this.el;\n      var camera = el.sceneEl.camera;\n\n      // Reset tmp variables.\n      cameraPosition.set(0, 0, 0);\n      portalNormal.set(0, 0, 1);\n      portalPosition.set(0, 0, 0);\n\n      // Apply portal orientation to the normal.\n      el.object3D.matrixWorld.extractRotation(mat4);\n      portalNormal.applyMatrix4(mat4);\n\n      // Calculate portal world position.\n      el.object3D.updateMatrixWorld();\n      el.object3D.localToWorld(portalPosition);\n\n      // Calculate camera world position.\n      camera.parent.parent.updateMatrixWorld();\n      camera.parent.updateMatrixWorld();\n      camera.updateMatrixWorld();\n      camera.localToWorld(cameraPosition);\n\n      // Calculate vector from portal to camera.\n      // (portal) -------> (camera)\n      cameraPosition.sub(portalPosition).normalize();\n      portalNormal.normalize();\n\n      // Side where camera approaches portal is given by sign of dot product of portal normal\n      // and portal to camera vectors.\n      return Math.sign(portalNormal.dot(cameraPosition));\n    };\n  })(),\n\n  remove: function () {\n    this.removeEventListener();\n  }\n});\n\n/* eslint-disable */\nregisterShader('portal', {\n  schema: {\n    borderEnabled: {default: 1.0, type: 'int', is: 'uniform'},\n    backgroundColor: {default: 'red', type: 'color', is: 'uniform'},\n    pano: {type: 'map', is: 'uniform'},\n    strokeColor: {default: 'white', type: 'color', is: 'uniform'}\n  },\n\n  vertexShader: [\n    'vec3 portalPosition;',\n    'varying vec3 vWorldPosition;',\n    'varying float vDistanceToCenter;',\n    'varying float vDistance;',\n    'void main() {',\n    'vDistanceToCenter = clamp(length(position - vec3(0.0, 0.0, 0.0)), 0.0, 1.0);',\n    'portalPosition = (modelMatrix * vec4(0.0, 0.0, 0.0, 1.0)).xyz;',\n    'vDistance = length(portalPosition - cameraPosition);',\n    'vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;',\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);',\n    '}'\n  ].join('\\n'),\n\n  fragmentShader: [\n    '#define RECIPROCAL_PI2 0.15915494',\n    'uniform sampler2D pano;',\n    'uniform vec3 strokeColor;',\n    'uniform vec3 backgroundColor;',\n    'uniform float borderEnabled;',\n    'varying float vDistanceToCenter;',\n    'varying float vDistance;',\n    'varying vec3 vWorldPosition;',\n    'void main() {',\n    'vec3 direction = normalize(vWorldPosition - cameraPosition);',\n    'vec2 sampleUV;',\n    'float borderThickness = clamp(exp(-vDistance / 50.0), 0.6, 0.95);',\n    'sampleUV.y = saturate(direction.y * 0.5  + 0.5);',\n    'sampleUV.x = atan(direction.z, -direction.x) * -RECIPROCAL_PI2 + 0.5;',\n    'if (vDistanceToCenter > borderThickness && borderEnabled == 1.0) {',\n    'gl_FragColor = vec4(strokeColor, 1.0);',\n    '} else {',\n    'gl_FragColor = mix(texture2D(pano, sampleUV), vec4(backgroundColor, 1.0), clamp(pow((vDistance / 15.0), 2.0), 0.0, 1.0));',\n    '}',\n    '}'\n  ].join('\\n')\n});\n/* eslint-enable */\n","var registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\nvar utils = require('../utils/');\nvar bind = utils.bind;\nvar PolyfillControls = require('../utils').device.PolyfillControls;\n\n// To avoid recalculation at every mouse movement tick\nvar PI_2 = Math.PI / 2;\n\n/**\n * look-controls. Update entity pose, factoring mouse, touch, and WebVR API data.\n */\nmodule.exports.Component = registerComponent('look-controls', {\n  dependencies: ['position', 'rotation'],\n\n  schema: {\n    enabled: {default: true},\n    hmdEnabled: {default: true},\n    pointerLockEnabled: {default: false},\n    reverseMouseDrag: {default: false},\n    reverseTouchDrag: {default: false},\n    touchEnabled: {default: true}\n  },\n\n  init: function () {\n    this.previousHMDPosition = new THREE.Vector3();\n    this.hmdQuaternion = new THREE.Quaternion();\n    this.hmdEuler = new THREE.Euler();\n    this.position = new THREE.Vector3();\n    // To save / restore camera pose\n    this.savedRotation = new THREE.Vector3();\n    this.savedPosition = new THREE.Vector3();\n    this.polyfillObject = new THREE.Object3D();\n    this.polyfillControls = new PolyfillControls(this.polyfillObject);\n    this.rotation = {};\n    this.deltaRotation = {};\n    this.savedPose = null;\n    this.pointerLocked = false;\n    this.setupMouseControls();\n    this.bindMethods();\n    this.el.object3D.matrixAutoUpdate = false;\n    this.el.object3D.updateMatrix();\n\n    this.savedPose = {\n      position: new THREE.Vector3(),\n      rotation: new THREE.Euler()\n    };\n\n    // Call enter VR handler if the scene has entered VR before the event listeners attached.\n    if (this.el.sceneEl.is('vr-mode')) { this.onEnterVR(); }\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n\n    // Disable grab cursor classes if no longer enabled.\n    if (data.enabled !== oldData.enabled) {\n      this.updateGrabCursor(data.enabled);\n    }\n\n    // Reset pitch and yaw if disabling HMD.\n    if (oldData && !data.hmdEnabled && !oldData.hmdEnabled) {\n      this.pitchObject.rotation.set(0, 0, 0);\n      this.yawObject.rotation.set(0, 0, 0);\n    }\n\n    if (oldData && !data.pointerLockEnabled !== oldData.pointerLockEnabled) {\n      this.removeEventListeners();\n      this.addEventListeners();\n      if (this.pointerLocked) { this.exitPointerLock(); }\n    }\n  },\n\n  tick: function (t) {\n    var data = this.data;\n    if (!data.enabled) { return; }\n    this.updateOrientation();\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    if (this.pointerLocked) { this.exitPointerLock(); }\n  },\n\n  remove: function () {\n    this.removeEventListeners();\n    if (this.pointerLocked) { this.exitPointerLock(); }\n  },\n\n  bindMethods: function () {\n    this.onMouseDown = bind(this.onMouseDown, this);\n    this.onMouseMove = bind(this.onMouseMove, this);\n    this.onMouseUp = bind(this.onMouseUp, this);\n    this.onTouchStart = bind(this.onTouchStart, this);\n    this.onTouchMove = bind(this.onTouchMove, this);\n    this.onTouchEnd = bind(this.onTouchEnd, this);\n    this.onEnterVR = bind(this.onEnterVR, this);\n    this.onExitVR = bind(this.onExitVR, this);\n    this.onPointerLockChange = bind(this.onPointerLockChange, this);\n    this.onPointerLockError = bind(this.onPointerLockError, this);\n  },\n\n /**\n  * Set up states and Object3Ds needed to store rotation data.\n  */\n  setupMouseControls: function () {\n    this.mouseDown = false;\n    this.pitchObject = new THREE.Object3D();\n    this.yawObject = new THREE.Object3D();\n    this.yawObject.position.y = 10;\n    this.yawObject.add(this.pitchObject);\n  },\n\n  /**\n   * Add mouse and touch event listeners to canvas.\n   */\n  addEventListeners: function () {\n    var sceneEl = this.el.sceneEl;\n    var canvasEl = sceneEl.canvas;\n\n    // Wait for canvas to load.\n    if (!canvasEl) {\n      sceneEl.addEventListener('render-target-loaded', bind(this.addEventListeners, this));\n      return;\n    }\n\n    // Mouse events.\n    canvasEl.addEventListener('mousedown', this.onMouseDown, false);\n    window.addEventListener('mousemove', this.onMouseMove, false);\n    window.addEventListener('mouseup', this.onMouseUp, false);\n\n    // Touch events.\n    canvasEl.addEventListener('touchstart', this.onTouchStart);\n    window.addEventListener('touchmove', this.onTouchMove);\n    window.addEventListener('touchend', this.onTouchEnd);\n\n    // sceneEl events.\n    sceneEl.addEventListener('enter-vr', this.onEnterVR);\n    sceneEl.addEventListener('exit-vr', this.onExitVR);\n\n    // Pointer Lock events.\n    if (this.data.pointerLockEnabled) {\n      document.addEventListener('pointerlockchange', this.onPointerLockChange, false);\n      document.addEventListener('mozpointerlockchange', this.onPointerLockChange, false);\n      document.addEventListener('pointerlockerror', this.onPointerLockError, false);\n    }\n  },\n\n  /**\n   * Remove mouse and touch event listeners from canvas.\n   */\n  removeEventListeners: function () {\n    var sceneEl = this.el.sceneEl;\n    var canvasEl = sceneEl && sceneEl.canvas;\n\n    if (!canvasEl) { return; }\n\n    // Mouse events.\n    canvasEl.removeEventListener('mousedown', this.onMouseDown);\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('mouseup', this.onMouseUp);\n\n    // Touch events.\n    canvasEl.removeEventListener('touchstart', this.onTouchStart);\n    window.removeEventListener('touchmove', this.onTouchMove);\n    window.removeEventListener('touchend', this.onTouchEnd);\n\n    // sceneEl events.\n    sceneEl.removeEventListener('enter-vr', this.onEnterVR);\n    sceneEl.removeEventListener('exit-vr', this.onExitVR);\n\n    // Pointer Lock events.\n    document.removeEventListener('pointerlockchange', this.onPointerLockChange, false);\n    document.removeEventListener('mozpointerlockchange', this.onPointerLockChange, false);\n    document.removeEventListener('pointerlockerror', this.onPointerLockError, false);\n  },\n\n  /**\n   * Update orientation for mobile, mouse drag, and headset.\n   * Mouse-drag only enabled if HMD is not active.\n   */\n  updateOrientation: (function () {\n    var poseMatrix = new THREE.Matrix4();\n\n    return function () {\n      var hmdEuler = this.hmdEuler;\n      var object3D = this.el.object3D;\n      var pitchObject = this.pitchObject;\n      var yawObject = this.yawObject;\n      var pose;\n      var sceneEl = this.el.sceneEl;\n\n      // WebXR API updates applies headset pose to the object3D matrixWorld internally.\n      // Reflect values back on position, rotation, scale so setAttribute returns expected values.\n      if (sceneEl.is('vr-mode') && sceneEl.hasWebXR) {\n        pose = sceneEl.renderer.vr.getCameraPose();\n        if (pose) {\n          poseMatrix.elements = pose.poseModelMatrix;\n          poseMatrix.decompose(object3D.position, object3D.rotation, object3D.scale);\n        }\n      } else {\n        object3D.updateMatrix();\n      }\n\n      // In VR mode, THREE is in charge of updating the camera rotation.\n      if (sceneEl.is('vr-mode') && sceneEl.checkHeadsetConnected()) { return; }\n      // Calculate polyfilled HMD quaternion.\n      this.polyfillControls.update();\n      hmdEuler.setFromQuaternion(this.polyfillObject.quaternion, 'YXZ');\n\n      // On mobile, do camera rotation with touch events and sensors.\n      object3D.rotation.x = hmdEuler.x + pitchObject.rotation.x;\n      object3D.rotation.y = hmdEuler.y + yawObject.rotation.y;\n    };\n  })(),\n\n  /**\n   * Translate mouse drag into rotation.\n   *\n   * Dragging up and down rotates the camera around the X-axis (yaw).\n   * Dragging left and right rotates the camera around the Y-axis (pitch).\n   */\n  onMouseMove: function (event) {\n    var direction;\n    var movementX;\n    var movementY;\n    var pitchObject = this.pitchObject;\n    var previousMouseEvent = this.previousMouseEvent;\n    var yawObject = this.yawObject;\n\n    // Not dragging or not enabled.\n    if (!this.data.enabled || (!this.mouseDown && !this.pointerLocked)) { return; }\n\n    // Calculate delta.\n    if (this.pointerLocked) {\n      movementX = event.movementX || event.mozMovementX || 0;\n      movementY = event.movementY || event.mozMovementY || 0;\n    } else {\n      movementX = event.screenX - previousMouseEvent.screenX;\n      movementY = event.screenY - previousMouseEvent.screenY;\n    }\n    this.previousMouseEvent = event;\n\n    // Calculate rotation.\n    direction = this.data.reverseMouseDrag ? 1 : -1;\n    yawObject.rotation.y += movementX * 0.002 * direction;\n    pitchObject.rotation.x += movementY * 0.002 * direction;\n    pitchObject.rotation.x = Math.max(-PI_2, Math.min(PI_2, pitchObject.rotation.x));\n  },\n\n  /**\n   * Register mouse down to detect mouse drag.\n   */\n  onMouseDown: function (evt) {\n    if (!this.data.enabled) { return; }\n    // Handle only primary button.\n    if (evt.button !== 0) { return; }\n\n    var sceneEl = this.el.sceneEl;\n    var canvasEl = sceneEl && sceneEl.canvas;\n\n    this.mouseDown = true;\n    this.previousMouseEvent = evt;\n    this.showGrabbingCursor();\n\n    if (this.data.pointerLockEnabled && !this.pointerLocked) {\n      if (canvasEl.requestPointerLock) {\n        canvasEl.requestPointerLock();\n      } else if (canvasEl.mozRequestPointerLock) {\n        canvasEl.mozRequestPointerLock();\n      }\n    }\n  },\n\n  /**\n   * Shows grabbing cursor on scene\n   */\n  showGrabbingCursor: function () {\n    this.el.sceneEl.canvas.style.cursor = 'grabbing';\n  },\n\n  /**\n   * Hides grabbing cursor on scene\n   */\n  hideGrabbingCursor: function () {\n    this.el.sceneEl.canvas.style.cursor = '';\n  },\n\n  /**\n   * Register mouse up to detect release of mouse drag.\n   */\n  onMouseUp: function () {\n    this.mouseDown = false;\n    this.hideGrabbingCursor();\n  },\n\n  /**\n   * Register touch down to detect touch drag.\n   */\n  onTouchStart: function (evt) {\n    if (evt.touches.length !== 1 || !this.data.touchEnabled) { return; }\n    this.touchStart = {\n      x: evt.touches[0].pageX,\n      y: evt.touches[0].pageY\n    };\n    this.touchStarted = true;\n  },\n\n  /**\n   * Translate touch move to Y-axis rotation.\n   */\n  onTouchMove: function (evt) {\n    var direction;\n    var canvas = this.el.sceneEl.canvas;\n    var deltaY;\n    var yawObject = this.yawObject;\n\n    if (!this.touchStarted || !this.data.touchEnabled) { return; }\n\n    deltaY = 2 * Math.PI * (evt.touches[0].pageX - this.touchStart.x) / canvas.clientWidth;\n\n    direction = this.data.reverseTouchDrag ? 1 : -1;\n    // Limit touch orientaion to to yaw (y axis).\n    yawObject.rotation.y -= deltaY * 0.5 * direction;\n    this.touchStart = {\n      x: evt.touches[0].pageX,\n      y: evt.touches[0].pageY\n    };\n  },\n\n  /**\n   * Register touch end to detect release of touch drag.\n   */\n  onTouchEnd: function () {\n    this.touchStarted = false;\n  },\n\n  /**\n   * Save pose.\n   */\n  onEnterVR: function () {\n    if (!this.el.sceneEl.checkHeadsetConnected()) { return; }\n    this.saveCameraPose();\n    this.el.object3D.position.set(0, 0, 0);\n    this.el.object3D.updateMatrix();\n  },\n\n  /**\n   * Restore the pose.\n   */\n  onExitVR: function () {\n    if (!this.el.sceneEl.checkHeadsetConnected()) { return; }\n    this.restoreCameraPose();\n    this.previousHMDPosition.set(0, 0, 0);\n  },\n\n  /**\n   * Update Pointer Lock state.\n   */\n  onPointerLockChange: function () {\n    this.pointerLocked = !!(document.pointerLockElement || document.mozPointerLockElement);\n  },\n\n  /**\n   * Recover from Pointer Lock error.\n   */\n  onPointerLockError: function () {\n    this.pointerLocked = false;\n  },\n\n  // Exits pointer-locked mode.\n  exitPointerLock: function () {\n    document.exitPointerLock();\n    this.pointerLocked = false;\n  },\n\n  /**\n   * Toggle the feature of showing/hiding the grab cursor.\n   */\n  updateGrabCursor: function (enabled) {\n    var sceneEl = this.el.sceneEl;\n\n    function enableGrabCursor () { sceneEl.canvas.classList.add('a-grab-cursor'); }\n    function disableGrabCursor () { sceneEl.canvas.classList.remove('a-grab-cursor'); }\n\n    if (!sceneEl.canvas) {\n      if (enabled) {\n        sceneEl.addEventListener('render-target-loaded', enableGrabCursor);\n      } else {\n        sceneEl.addEventListener('render-target-loaded', disableGrabCursor);\n      }\n      return;\n    }\n\n    if (enabled) {\n      enableGrabCursor();\n      return;\n    }\n    disableGrabCursor();\n  },\n\n  /**\n   * Save camera pose before entering VR to restore later if exiting.\n   */\n  saveCameraPose: function () {\n    var el = this.el;\n\n    this.savedPose.position.copy(el.object3D.position);\n    this.savedPose.rotation.copy(el.object3D.rotation);\n    this.hasSavedPose = true;\n  },\n\n  /**\n   * Reset camera pose to before entering VR.\n   */\n  restoreCameraPose: function () {\n    var el = this.el;\n    var savedPose = this.savedPose;\n\n    if (!this.hasSavedPose) { return; }\n\n    // Reset camera orientation.\n    el.object3D.position.copy(savedPose.position);\n    el.object3D.rotation.copy(savedPose.rotation);\n    this.hasSavedPose = false;\n  }\n});\n","/* global Promise */\nvar utils = require('../utils/');\nvar component = require('../core/component');\nvar THREE = require('../lib/three');\nvar shader = require('../core/shader');\n\nvar error = utils.debug('components:material:error');\nvar registerComponent = component.registerComponent;\nvar shaders = shader.shaders;\nvar shaderNames = shader.shaderNames;\n\n/**\n * Material component.\n *\n * @member {object} shader - Determines how material is shaded. Defaults to `standard`,\n *         three.js's implementation of PBR. Another standard shading model is `flat` which\n *         uses MeshBasicMaterial.\n */\nmodule.exports.Component = registerComponent('material', {\n  schema: {\n    alphaTest: {default: 0.0, min: 0.0, max: 1.0},\n    depthTest: {default: true},\n    depthWrite: {default: true},\n    flatShading: {default: false},\n    npot: {default: false},\n    offset: {type: 'vec2', default: {x: 0, y: 0}},\n    opacity: {default: 1.0, min: 0.0, max: 1.0},\n    repeat: {type: 'vec2', default: {x: 1, y: 1}},\n    shader: {default: 'standard', oneOf: shaderNames, schemaChange: true},\n    side: {default: 'front', oneOf: ['front', 'back', 'double']},\n    transparent: {default: false},\n    vertexColors: {type: 'string', default: 'none', oneOf: ['face', 'vertex']},\n    visible: {default: true},\n    blending: {default: 'normal', oneOf: ['none', 'normal', 'additive', 'subtractive', 'multiply']}\n  },\n\n  init: function () {\n    this.material = null;\n  },\n\n  /**\n   * Update or create material.\n   *\n   * @param {object|null} oldData\n   */\n  update: function (oldData) {\n    var data = this.data;\n    if (!this.shader || data.shader !== oldData.shader) {\n      this.updateShader(data.shader);\n    }\n    this.shader.update(this.data);\n    this.updateMaterial(oldData);\n  },\n\n  updateSchema: function (data) {\n    var currentShader;\n    var newShader;\n    var schema;\n    var shader;\n\n    newShader = data && data.shader;\n    currentShader = this.oldData && this.oldData.shader;\n    shader = newShader || currentShader;\n    schema = shaders[shader] && shaders[shader].schema;\n\n    if (!schema) { error('Unknown shader schema ' + shader); }\n    if (currentShader && newShader === currentShader) { return; }\n    this.extendSchema(schema);\n    this.updateBehavior();\n  },\n\n  updateBehavior: function () {\n    var key;\n    var sceneEl = this.el.sceneEl;\n    var schema = this.schema;\n    var self = this;\n    var tickProperties;\n\n    function tickTime (time, delta) {\n      var key;\n      for (key in tickProperties) {\n        tickProperties[key] = time;\n      }\n      self.shader.update(tickProperties);\n    }\n\n    this.tick = undefined;\n\n    tickProperties = {};\n    for (key in schema) {\n      if (schema[key].type === 'time') {\n        this.tick = tickTime;\n        tickProperties[key] = true;\n      }\n    }\n\n    if (!sceneEl) { return; }\n    if (this.tick) {\n      sceneEl.addBehavior(this);\n    } else {\n      sceneEl.removeBehavior(this);\n    }\n  },\n\n  updateShader: function (shaderName) {\n    var data = this.data;\n    var Shader = shaders[shaderName] && shaders[shaderName].Shader;\n    var shaderInstance;\n\n    if (!Shader) { throw new Error('Unknown shader ' + shaderName); }\n\n    // Get material from A-Frame shader.\n    shaderInstance = this.shader = new Shader();\n    shaderInstance.el = this.el;\n    shaderInstance.init(data);\n    this.setMaterial(shaderInstance.material);\n    this.updateSchema(data);\n  },\n\n  /**\n   * Set and update base material properties.\n   * Set `needsUpdate` when needed.\n   */\n  updateMaterial: function (oldData) {\n    var data = this.data;\n    var material = this.material;\n    var oldDataHasKeys;\n\n    // Base material properties.\n    material.alphaTest = data.alphaTest;\n    material.depthTest = data.depthTest !== false;\n    material.depthWrite = data.depthWrite !== false;\n    material.opacity = data.opacity;\n    material.flatShading = data.flatShading;\n    material.side = parseSide(data.side);\n    material.transparent = data.transparent !== false || data.opacity < 1.0;\n    material.vertexColors = parseVertexColors(data.vertexColors);\n    material.visible = data.visible;\n    material.blending = parseBlending(data.blending);\n\n    // Check if material needs update.\n    for (oldDataHasKeys in oldData) { break; }\n    if (oldDataHasKeys &&\n        (oldData.alphaTest !== data.alphaTest ||\n         oldData.side !== data.side ||\n         oldData.vertexColors !== data.vertexColors)) {\n      material.needsUpdate = true;\n    }\n  },\n\n  /**\n   * Remove material on remove (callback).\n   * Dispose of it from memory and unsubscribe from scene updates.\n   */\n  remove: function () {\n    var defaultMaterial = new THREE.MeshBasicMaterial();\n    var material = this.material;\n    var object3D = this.el.getObject3D('mesh');\n    if (object3D) { object3D.material = defaultMaterial; }\n    disposeMaterial(material, this.system);\n  },\n\n  /**\n   * (Re)create new material. Has side-effects of setting `this.material` and updating\n   * material registration in scene.\n   *\n   * @param {object} data - Material component data.\n   * @param {object} type - Material type to create.\n   * @returns {object} Material.\n   */\n  setMaterial: function (material) {\n    var el = this.el;\n    var mesh;\n    var system = this.system;\n\n    if (this.material) { disposeMaterial(this.material, system); }\n\n    this.material = material;\n    system.registerMaterial(material);\n\n    // Set on mesh. If mesh does not exist, wait for it.\n    mesh = el.getObject3D('mesh');\n    if (mesh) {\n      mesh.material = material;\n    } else {\n      el.addEventListener('object3dset', function waitForMesh (evt) {\n        if (evt.detail.type !== 'mesh' || evt.target !== el) { return; }\n        el.getObject3D('mesh').material = material;\n        el.removeEventListener('object3dset', waitForMesh);\n      });\n    }\n  }\n});\n\n/**\n * Return a three.js constant determining which material face sides to render\n * based on the side parameter (passed as a component property).\n *\n * @param {string} [side=front] - `front`, `back`, or `double`.\n * @returns {number} THREE.FrontSide, THREE.BackSide, or THREE.DoubleSide.\n */\nfunction parseSide (side) {\n  switch (side) {\n    case 'back': {\n      return THREE.BackSide;\n    }\n    case 'double': {\n      return THREE.DoubleSide;\n    }\n    default: {\n      // Including case `front`.\n      return THREE.FrontSide;\n    }\n  }\n}\n\n/**\n * Return a three.js constant determining vertex coloring.\n */\nfunction parseVertexColors (coloring) {\n  switch (coloring) {\n    case 'face': {\n      return THREE.FaceColors;\n    }\n    case 'vertex': {\n      return THREE.VertexColors;\n    }\n    default: {\n      return THREE.NoColors;\n    }\n  }\n}\n\n/**\n * Return a three.js constant determining blending\n *\n * @param {string} [blending=normal]\n * - `none`, additive`, `subtractive`,`multiply` or `normal`.\n * @returns {number}\n */\nfunction parseBlending (blending) {\n  switch (blending) {\n    case 'none': {\n      return THREE.NoBlending;\n    }\n    case 'additive': {\n      return THREE.AdditiveBlending;\n    }\n    case 'subtractive': {\n      return THREE.SubtractiveBlending;\n    }\n    case 'multiply': {\n      return THREE.MultiplyBlending;\n    }\n    default: {\n      return THREE.NormalBlending;\n    }\n  }\n}\n\n/**\n * Dispose of material from memory and unsubscribe material from scene updates like fog.\n */\nfunction disposeMaterial (material, system) {\n  material.dispose();\n  system.unregisterMaterial(material);\n}\n","var debug = require('../utils/debug');\nvar registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\n\nvar warn = debug('components:obj-model:warn');\n\nmodule.exports.Component = registerComponent('obj-model', {\n  schema: {\n    mtl: {type: 'model'},\n    obj: {type: 'model'}\n  },\n\n  init: function () {\n    this.model = null;\n    this.objLoader = new THREE.OBJLoader();\n    this.mtlLoader = new THREE.MTLLoader(this.objLoader.manager);\n    // Allow cross-origin images to be loaded.\n    this.mtlLoader.crossOrigin = '';\n  },\n\n  update: function () {\n    var data = this.data;\n    if (!data.obj) { return; }\n    this.resetMesh();\n    this.loadObj(data.obj, data.mtl);\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.resetMesh();\n  },\n\n  resetMesh: function () {\n    this.el.removeObject3D('mesh');\n  },\n\n  loadObj: function (objUrl, mtlUrl) {\n    var self = this;\n    var el = this.el;\n    var mtlLoader = this.mtlLoader;\n    var objLoader = this.objLoader;\n    var rendererSystem = this.el.sceneEl.systems.renderer;\n\n    if (mtlUrl) {\n      // .OBJ with an .MTL.\n      if (el.hasAttribute('material')) {\n        warn('Material component properties are ignored when a .MTL is provided');\n      }\n      mtlLoader.setTexturePath(mtlUrl.substr(0, mtlUrl.lastIndexOf('/') + 1));\n      mtlLoader.load(mtlUrl, function (materials) {\n        materials.preload();\n        objLoader.setMaterials(materials);\n        objLoader.load(objUrl, function (objModel) {\n          self.model = objModel;\n          self.model.traverse(function (object) {\n            if (object.isMesh) {\n              var material = object.material;\n              if (material.color) rendererSystem.applyColorCorrection(material.color);\n              if (material.map) rendererSystem.applyColorCorrection(material.map);\n              if (material.emissive) rendererSystem.applyColorCorrection(material.emissive);\n              if (material.emissiveMap) rendererSystem.applyColorCorrection(material.emissiveMap);\n            }\n          });\n          el.setObject3D('mesh', objModel);\n          el.emit('model-loaded', {format: 'obj', model: objModel});\n        });\n      });\n      return;\n    }\n\n    // .OBJ only.\n    objLoader.load(objUrl, function loadObjOnly (objModel) {\n      // Apply material.\n      var material = el.components.material;\n      if (material) {\n        objModel.traverse(function (child) {\n          if (child instanceof THREE.Mesh) {\n            child.material = material.material;\n          }\n        });\n      }\n\n      self.model = objModel;\n      el.setObject3D('mesh', objModel);\n      el.emit('model-loaded', {format: 'obj', model: objModel});\n    });\n  }\n});\n","var registerComponent = require('../core/component').registerComponent;\n\nmodule.exports.Component = registerComponent('position', {\n  schema: {type: 'vec3'},\n\n  update: function () {\n    var object3D = this.el.object3D;\n    var data = this.data;\n    object3D.position.set(data.x, data.y, data.z);\n    object3D.matrixNeedsUpdate = true;\n  },\n\n  remove: function () {\n    // Pretty much for mixins.\n    this.el.object3D.position.set(0, 0, 0);\n    this.el.object3D.matrixNeedsUpdate = true;\n  }\n});\n","/* global MutationObserver */\n\nvar registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\nvar utils = require('../utils/');\n\nvar warn = utils.debug('components:raycaster:warn');\n\n// Defines selectors that should be 'safe' for the MutationObserver used to\n// refresh the whitelist. Matches classnames, IDs, and presence of attributes.\n// Selectors for the value of an attribute, like [position=0 2 0], cannot be\n// reliably detected and are therefore disallowed.\nvar OBSERVER_SELECTOR_RE = /^[\\w\\s-.,[\\]#]*$/;\n\n// Configuration for the MutationObserver used to refresh the whitelist.\n// Listens for addition/removal of elements and attributes within the scene.\nvar OBSERVER_CONFIG = {\n  childList: true,\n  attributes: true,\n  subtree: true\n};\n\nvar EVENTS = {\n  INTERSECT: 'raycaster-intersected',\n  INTERSECTION: 'raycaster-intersection',\n  INTERSECT_CLEAR: 'raycaster-intersected-cleared',\n  INTERSECTION_CLEAR: 'raycaster-intersection-cleared'\n};\n\n/**\n * Raycaster component.\n *\n * Pass options to three.js Raycaster including which objects to test.\n * Poll for intersections.\n * Emit event on origin entity and on target entity on intersect.\n *\n * @member {array} intersectedEls - List of currently intersected entities.\n * @member {array} objects - Cached list of meshes to intersect.\n * @member {number} prevCheckTime - Previous time intersection was checked. To help interval.\n * @member {object} raycaster - three.js Raycaster.\n */\nmodule.exports.Component = registerComponent('raycaster', {\n  schema: {\n    autoRefresh: {default: true},\n    direction: {type: 'vec3', default: {x: 0, y: 0, z: -1}},\n    enabled: {default: true},\n    far: {default: 1000},\n    interval: {default: 0},\n    near: {default: 0},\n    objects: {default: ''},\n    origin: {type: 'vec3'},\n    showLine: {default: false},\n    useWorldCoordinates: {default: false}\n  },\n\n  multiple: true,\n\n  init: function () {\n    this.clearedIntersectedEls = [];\n    this.unitLineEndVec3 = new THREE.Vector3();\n    this.intersectedEls = [];\n    this.intersections = [];\n    this.newIntersectedEls = [];\n    this.newIntersections = [];\n    this.objects = [];\n    this.prevCheckTime = undefined;\n    this.prevIntersectedEls = [];\n    this.rawIntersections = [];\n    this.raycaster = new THREE.Raycaster();\n    this.updateOriginDirection();\n    this.setDirty = this.setDirty.bind(this);\n    this.updateLine = this.updateLine.bind(this);\n    this.observer = new MutationObserver(this.setDirty);\n    this.dirty = true;\n    this.lineEndVec3 = new THREE.Vector3();\n    this.otherLineEndVec3 = new THREE.Vector3();\n    this.lineData = {end: this.lineEndVec3};\n\n    this.getIntersection = this.getIntersection.bind(this);\n    this.intersectedDetail = {el: this.el, getIntersection: this.getIntersection};\n    this.intersectedClearedDetail = {el: this.el};\n    this.intersectionClearedDetail = {clearedEls: this.clearedIntersectedEls};\n    this.intersectionDetail = {};\n  },\n\n  /**\n   * Create or update raycaster object.\n   */\n  update: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n    var raycaster = this.raycaster;\n\n    // Set raycaster properties.\n    raycaster.far = data.far;\n    raycaster.near = data.near;\n\n    // Draw line.\n    if (data.showLine &&\n        (data.far !== oldData.far || data.origin !== oldData.origin ||\n         data.direction !== oldData.direction || !oldData.showLine)) {\n      // Calculate unit vector for line direction. Can be multiplied via scalar to performantly\n      // adjust line length.\n      this.unitLineEndVec3.copy(data.origin).add(data.direction).normalize();\n      this.drawLine();\n    }\n\n    if (!data.showLine && oldData.showLine) {\n      el.removeAttribute('line');\n    }\n\n    if (data.objects !== oldData.objects && !OBSERVER_SELECTOR_RE.test(data.objects)) {\n      warn('[raycaster] Selector \"' + data.objects +\n           '\" may not update automatically with DOM changes.');\n    }\n\n    if (!data.objects) {\n      warn('[raycaster] For performance, please define raycaster.objects when using ' +\n           'raycaster or cursor components to whitelist which entities to intersect with. ' +\n           'e.g., raycaster=\"objects: [data-raycastable]\".');\n    }\n\n    if (data.autoRefresh !== oldData.autoRefresh && el.isPlaying) {\n      data.autoRefresh\n        ? this.addEventListeners()\n        : this.removeEventListeners();\n    }\n\n    if (oldData.enabled && !data.enabled) { this.clearAllIntersections(); }\n\n    this.setDirty();\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n  },\n\n  remove: function () {\n    if (this.data.showLine) {\n      this.el.removeAttribute('line');\n    }\n    this.clearAllIntersections();\n  },\n\n  addEventListeners: function () {\n    if (!this.data.autoRefresh) { return; }\n    this.observer.observe(this.el.sceneEl, OBSERVER_CONFIG);\n    this.el.sceneEl.addEventListener('object3dset', this.setDirty);\n    this.el.sceneEl.addEventListener('object3dremove', this.setDirty);\n  },\n\n  removeEventListeners: function () {\n    this.observer.disconnect();\n    this.el.sceneEl.removeEventListener('object3dset', this.setDirty);\n    this.el.sceneEl.removeEventListener('object3dremove', this.setDirty);\n  },\n\n  /**\n   * Mark the object list as dirty, to be refreshed before next raycast.\n   */\n  setDirty: function () {\n    this.dirty = true;\n  },\n\n  /**\n   * Update list of objects to test for intersection.\n   */\n  refreshObjects: function () {\n    var data = this.data;\n    var els;\n\n    // If objects not defined, intersect with everything.\n    els = data.objects\n      ? this.el.sceneEl.querySelectorAll(data.objects)\n      : this.el.sceneEl.querySelectorAll('*');\n    this.objects = this.flattenObject3DMaps(els);\n    this.dirty = false;\n  },\n\n  /**\n   * Check for intersections and cleared intersections on an interval.\n   */\n  tick: function (time) {\n    var data = this.data;\n    var prevCheckTime = this.prevCheckTime;\n\n    if (!data.enabled) { return; }\n\n    // Only check for intersection if interval time has passed.\n    if (prevCheckTime && (time - prevCheckTime < data.interval)) { return; }\n\n    // Update check time.\n    this.prevCheckTime = time;\n    this.checkIntersections();\n  },\n\n  /**\n   * Raycast for intersections and emit events for current and cleared inersections.\n   */\n  checkIntersections: function () {\n    var clearedIntersectedEls = this.clearedIntersectedEls;\n    var el = this.el;\n    var data = this.data;\n    var i;\n    var intersectedEls = this.intersectedEls;\n    var intersection;\n    var intersections = this.intersections;\n    var newIntersectedEls = this.newIntersectedEls;\n    var newIntersections = this.newIntersections;\n    var prevIntersectedEls = this.prevIntersectedEls;\n    var rawIntersections = this.rawIntersections;\n\n    // Refresh the object whitelist if needed.\n    if (this.dirty) { this.refreshObjects(); }\n\n    // Store old previously intersected entities.\n    copyArray(this.prevIntersectedEls, this.intersectedEls);\n\n    // Raycast.\n    this.updateOriginDirection();\n    rawIntersections.length = 0;\n    this.raycaster.intersectObjects(this.objects, true, rawIntersections);\n\n    // Only keep intersections against objects that have a reference to an entity.\n    intersections.length = 0;\n    intersectedEls.length = 0;\n    for (i = 0; i < rawIntersections.length; i++) {\n      intersection = rawIntersections[i];\n      // Don't intersect with own line.\n      if (data.showLine && intersection.object === el.getObject3D('line')) {\n        continue;\n      }\n      if (intersection.object.el) {\n        intersections.push(intersection);\n        intersectedEls.push(intersection.object.el);\n      }\n    }\n\n    // Get newly intersected entities.\n    newIntersections.length = 0;\n    newIntersectedEls.length = 0;\n    for (i = 0; i < intersections.length; i++) {\n      if (prevIntersectedEls.indexOf(intersections[i].object.el) === -1) {\n        newIntersections.push(intersections[i]);\n        newIntersectedEls.push(intersections[i].object.el);\n      }\n    }\n\n    // Emit intersection cleared on both entities per formerly intersected entity.\n    clearedIntersectedEls.length = 0;\n    for (i = 0; i < prevIntersectedEls.length; i++) {\n      if (intersectedEls.indexOf(prevIntersectedEls[i]) !== -1) { continue; }\n      prevIntersectedEls[i].emit(EVENTS.INTERSECT_CLEAR,\n                                 this.intersectedClearedDetail);\n      clearedIntersectedEls.push(prevIntersectedEls[i]);\n    }\n    if (clearedIntersectedEls.length) {\n      el.emit(EVENTS.INTERSECTION_CLEAR, this.intersectionClearedDetail);\n    }\n\n    // Emit intersected on intersected entity per intersected entity.\n    for (i = 0; i < newIntersectedEls.length; i++) {\n      newIntersectedEls[i].emit(EVENTS.INTERSECT, this.intersectedDetail);\n    }\n\n    // Emit all intersections at once on raycasting entity.\n    if (newIntersections.length) {\n      this.intersectionDetail.els = newIntersectedEls;\n      this.intersectionDetail.intersections = newIntersections;\n      el.emit(EVENTS.INTERSECTION, this.intersectionDetail);\n    }\n\n    // Update line length.\n    setTimeout(this.updateLine);\n  },\n\n  updateLine: function () {\n    var el = this.el;\n    var intersections = this.intersections;\n    var lineLength;\n\n    if (this.data.showLine) {\n      if (intersections.length) {\n        if (intersections[0].object.el === el && intersections[1]) {\n          lineLength = intersections[1].distance;\n        } else {\n          lineLength = intersections[0].distance;\n        }\n      }\n      this.drawLine(lineLength);\n    }\n  },\n\n  /**\n   * Return the most recent intersection details for a given entity, if any.\n   * @param {AEntity} el\n   * @return {Object}\n   */\n  getIntersection: function (el) {\n    var i;\n    var intersection;\n    for (i = 0; i < this.intersections.length; i++) {\n      intersection = this.intersections[i];\n      if (intersection.object.el === el) { return intersection; }\n    }\n    return null;\n  },\n\n  /**\n   * Update origin and direction of raycaster using entity transforms and supplied origin or\n   * direction offsets.\n   */\n  updateOriginDirection: (function () {\n    var direction = new THREE.Vector3();\n    var originVec3 = new THREE.Vector3();\n\n    // Closure to make quaternion/vector3 objects private.\n    return function updateOriginDirection () {\n      var el = this.el;\n      var data = this.data;\n\n      if (data.useWorldCoordinates) {\n        this.raycaster.set(data.origin, data.direction);\n        return;\n      }\n\n      // Grab the position and rotation. (As a side effect, this updates el.object3D.matrixWorld.)\n      el.object3D.getWorldPosition(originVec3);\n\n      // If non-zero origin, translate the origin into world space.\n      if (data.origin.x !== 0 || data.origin.y !== 0 || data.origin.z !== 0) {\n        originVec3 = el.object3D.localToWorld(originVec3.copy(data.origin));\n      }\n\n      // three.js raycaster direction is relative to 0, 0, 0 NOT the origin / offset we\n      // provide. Apply the offset to the direction, then rotation from the object,\n      // and normalize.\n      direction.copy(data.direction).transformDirection(el.object3D.matrixWorld).normalize();\n\n      // Apply offset and direction, in world coordinates.\n      this.raycaster.set(originVec3, direction);\n    };\n  })(),\n\n  /**\n   * Create or update line to give raycaster visual representation.\n   * Customize the line through through line component.\n   * We draw the line in the raycaster component to customize the line to the\n   * raycaster's origin, direction, and far.\n   *\n   * Unlike the raycaster, we create the line as a child of the object. The line will\n   * be affected by the transforms of the objects, so we don't have to calculate transforms\n   * like we do with the raycaster.\n   *\n   * @param {number} length - Length of line. Pass in to shorten the line to the intersection\n   *   point. If not provided, length will default to the max length, `raycaster.far`.\n   */\n  drawLine: function (length) {\n    var data = this.data;\n    var el = this.el;\n    var endVec3;\n\n    // Switch each time vector so line update triggered and to avoid unnecessary vector clone.\n    endVec3 = this.lineData.end === this.lineEndVec3\n      ? this.otherLineEndVec3\n      : this.lineEndVec3;\n\n    // Treat Infinity as 1000m for the line.\n    if (length === undefined) {\n      length = data.far === Infinity ? 1000 : data.far;\n    }\n\n    // Update the length of the line if given. `unitLineEndVec3` is the direction\n    // given by data.direction, then we apply a scalar to give it a length.\n    this.lineData.start = data.origin;\n    this.lineData.end = endVec3.copy(this.unitLineEndVec3).multiplyScalar(length);\n    el.setAttribute('line', this.lineData);\n  },\n\n  /**\n   * Return A-Frame attachments of each element's object3D group (e.g., mesh).\n   * Children are flattened by one level, removing the THREE.Group wrapper,\n   * so that non-recursive raycasting remains useful.\n   *\n   * Only push children defined as component attachemnts (e.g., setObject3D),\n   * NOT actual children in the scene graph hierarchy.\n   *\n   * @param  {Array<Element>} els\n   * @return {Array<THREE.Object3D>}\n   */\n  flattenObject3DMaps: function (els) {\n    var key;\n    var i;\n    var objects = this.objects;\n\n    // Push meshes and other attachments onto list of objects to intersect.\n    objects.length = 0;\n    for (i = 0; i < els.length; i++) {\n      if (els[i].isEntity && els[i].object3D) {\n        for (key in els[i].object3DMap) {\n          objects.push(els[i].getObject3D(key));\n        }\n      }\n    }\n\n    return objects;\n  },\n\n  clearAllIntersections: function () {\n    var i;\n    for (i = 0; i < this.intersectedEls.length; i++) {\n      this.intersectedEls[i].emit(EVENTS.INTERSECT_CLEAR,\n                                  this.intersectedClearedDetail);\n    }\n    copyArray(this.clearedIntersectedEls, this.intersectedEls);\n    this.intersectedEls.length = 0;\n    this.intersections.length = 0;\n    this.el.emit(EVENTS.INTERSECTION_CLEAR, this.intersectionClearedDetail);\n  }\n});\n\n/**\n * Copy contents of one array to another without allocating new array.\n */\nfunction copyArray (a, b) {\n  var i;\n  a.length = b.length;\n  for (i = 0; i < b.length; i++) {\n    a[i] = b[i];\n  }\n}\n","var degToRad = require('../lib/three').Math.degToRad;\nvar registerComponent = require('../core/component').registerComponent;\n\nmodule.exports.Component = registerComponent('rotation', {\n  schema: {type: 'vec3'},\n\n  /**\n   * Updates object3D rotation.\n   */\n  update: function () {\n    var data = this.data;\n    var object3D = this.el.object3D;\n    object3D.rotation.set(degToRad(data.x), degToRad(data.y), degToRad(data.z));\n    object3D.rotation.order = 'YXZ';\n    object3D.matrixNeedsUpdate = true;\n  },\n\n  remove: function () {\n    // Pretty much for mixins.\n    this.el.object3D.rotation.set(0, 0, 0);\n    this.el.object3D.matrixNeedsUpdate = true;\n  }\n});\n","var registerComponent = require('../core/component').registerComponent;\n\n// Avoids triggering a zero-determinant which makes object3D matrix non-invertible.\nvar zeroScale = 0.00001;\n\nmodule.exports.Component = registerComponent('scale', {\n  schema: {\n    type: 'vec3',\n    default: {x: 1, y: 1, z: 1}\n  },\n\n  update: function () {\n    var data = this.data;\n    var object3D = this.el.object3D;\n    var x = data.x === 0 ? zeroScale : data.x;\n    var y = data.y === 0 ? zeroScale : data.y;\n    var z = data.z === 0 ? zeroScale : data.z;\n    object3D.scale.set(x, y, z);\n    object3D.matrixNeedsUpdate = true;\n  },\n\n  remove: function () {\n    // Pretty much for mixins.\n    this.el.object3D.scale.set(1, 1, 1);\n    this.el.object3D.matrixNeedsUpdate = true;\n  }\n});\n","var component = require('../core/component');\nvar THREE = require('../lib/three');\nvar bind = require('../utils/bind');\nvar registerComponent = component.registerComponent;\n\n/**\n * Shadow component.\n *\n * When applied to an entity, that entity's geometry and any descendants will cast or receive\n * shadows as specified by the `cast` and `receive` properties.\n */\nmodule.exports.Component = registerComponent('shadow', {\n  schema: {\n    cast: {default: true},\n    receive: {default: true}\n  },\n\n  init: function () {\n    this.onMeshChanged = bind(this.update, this);\n    this.el.addEventListener('object3dset', this.onMeshChanged);\n    this.system.setShadowMapEnabled(true);\n  },\n\n  update: function () {\n    var data = this.data;\n    this.updateDescendants(data.cast, data.receive);\n  },\n\n  remove: function () {\n    var el = this.el;\n    el.removeEventListener('object3dset', this.onMeshChanged);\n    this.updateDescendants(false, false);\n  },\n\n  updateDescendants: function (cast, receive) {\n    var sceneEl = this.el.sceneEl;\n    this.el.object3D.traverse(function (node) {\n      if (!(node instanceof THREE.Mesh)) { return; }\n\n      node.castShadow = cast;\n      node.receiveShadow = receive;\n\n      // If scene has already rendered, materials must be updated.\n      if (sceneEl.hasLoaded && node.material) {\n        var materials = Array.isArray(node.material) ? node.material : [node.material];\n        for (var i = 0; i < materials.length; i++) {\n          materials[i].needsUpdate = true;\n        }\n      }\n    });\n  }\n});\n","var registerComponent = require('../core/component').registerComponent;\nvar debug = require('../utils/debug');\nvar THREE = require('../lib/three');\n\nvar warn = debug('components:sound:warn');\n\n/**\n * Sound component.\n */\nmodule.exports.Component = registerComponent('sound', {\n  schema: {\n    autoplay: {default: false},\n    distanceModel: {default: 'inverse', oneOf: ['linear', 'inverse', 'exponential']},\n    loop: {default: false},\n    maxDistance: {default: 10000},\n    on: {default: ''},\n    poolSize: {default: 1},\n    positional: {default: true},\n    refDistance: {default: 1},\n    rolloffFactor: {default: 1},\n    src: {type: 'audio'},\n    volume: {default: 1}\n  },\n\n  multiple: true,\n\n  init: function () {\n    var self = this;\n\n    this.listener = null;\n    this.audioLoader = new THREE.AudioLoader();\n    this.pool = new THREE.Group();\n    this.loaded = false;\n    this.mustPlay = false;\n\n    // Don't pass evt because playSound takes a function as parameter.\n    this.playSoundBound = function () { self.playSound(); };\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n    var i;\n    var sound;\n    var srcChanged = data.src !== oldData.src;\n\n    // Create new sound if not yet created or changing `src`.\n    if (srcChanged) {\n      if (!data.src) { return; }\n      this.setupSound();\n    }\n\n    for (i = 0; i < this.pool.children.length; i++) {\n      sound = this.pool.children[i];\n      if (data.positional) {\n        sound.setDistanceModel(data.distanceModel);\n        sound.setMaxDistance(data.maxDistance);\n        sound.setRefDistance(data.refDistance);\n        sound.setRolloffFactor(data.rolloffFactor);\n      }\n      sound.setLoop(data.loop);\n      sound.setVolume(data.volume);\n      sound.isPaused = false;\n    }\n\n    if (data.on !== oldData.on) {\n      this.updateEventListener(oldData.on);\n    }\n\n    // All sound values set. Load in `src`.\n    if (srcChanged) {\n      var self = this;\n\n      this.loaded = false;\n      this.audioLoader.load(data.src, function (buffer) {\n        for (i = 0; i < self.pool.children.length; i++) {\n          sound = self.pool.children[i];\n          sound.setBuffer(buffer);\n        }\n        self.loaded = true;\n\n        // Remove this key from cache, otherwise we can't play it again\n        THREE.Cache.remove(data.src);\n        if (self.data.autoplay || self.mustPlay) { self.playSound(); }\n        self.el.emit('sound-loaded', self.evtDetail, false);\n      });\n    }\n  },\n\n  pause: function () {\n    this.stopSound();\n    this.removeEventListener();\n  },\n\n  play: function () {\n    if (this.data.autoplay) { this.playSound(); }\n    this.updateEventListener();\n  },\n\n  remove: function () {\n    var i;\n    var sound;\n\n    this.removeEventListener();\n\n    if (this.el.getObject3D(this.attrName)) {\n      this.el.removeObject3D(this.attrName);\n    }\n\n    try {\n      for (i = 0; i < this.pool.children.length; i++) {\n        sound = this.pool.children[i];\n        sound.disconnect();\n      }\n    } catch (e) {\n      // disconnect() will throw if it was never connected initially.\n      warn('Audio source not properly disconnected');\n    }\n  },\n\n  /**\n  *  Update listener attached to the user defined on event.\n  */\n  updateEventListener: function (oldEvt) {\n    var el = this.el;\n    if (oldEvt) { el.removeEventListener(oldEvt, this.playSoundBound); }\n    el.addEventListener(this.data.on, this.playSoundBound);\n  },\n\n  removeEventListener: function () {\n    this.el.removeEventListener(this.data.on, this.playSoundBound);\n  },\n\n  /**\n   * Removes current sound object, creates new sound object, adds to entity.\n   *\n   * @returns {object} sound\n   */\n  setupSound: function () {\n    var self = this;\n    var el = this.el;\n    var i;\n    var sceneEl = el.sceneEl;\n    var sound;\n\n    if (this.pool.children.length > 0) {\n      this.stopSound();\n      el.removeObject3D('sound');\n    }\n\n    // Only want one AudioListener. Cache it on the scene.\n    var listener = this.listener = sceneEl.audioListener || new THREE.AudioListener();\n    sceneEl.audioListener = listener;\n\n    if (sceneEl.camera) {\n      sceneEl.camera.add(listener);\n    }\n\n    // Wait for camera if necessary.\n    sceneEl.addEventListener('camera-set-active', function (evt) {\n      evt.detail.cameraEl.getObject3D('camera').add(listener);\n    });\n\n    // Create [poolSize] audio instances and attach them to pool\n    this.pool = new THREE.Group();\n    for (i = 0; i < this.data.poolSize; i++) {\n      sound = this.data.positional\n        ? new THREE.PositionalAudio(listener)\n        : new THREE.Audio(listener);\n      this.pool.add(sound);\n    }\n    el.setObject3D(this.attrName, this.pool);\n\n    for (i = 0; i < this.pool.children.length; i++) {\n      sound = this.pool.children[i];\n      sound.onEnded = function () {\n        this.isPlaying = false;\n        el.emit('sound-ended', self.evtDetail, false);\n      };\n    }\n  },\n\n  /**\n   * Pause all the sounds in the pool.\n   */\n  pauseSound: function () {\n    var i;\n    var sound;\n\n    this.isPlaying = false;\n    for (i = 0; i < this.pool.children.length; i++) {\n      sound = this.pool.children[i];\n      if (!sound.source || !sound.source.buffer || !sound.isPlaying || sound.isPaused) {\n        continue;\n      }\n      sound.isPaused = true;\n      sound.pause();\n    }\n  },\n\n  /**\n   * Look for an unused sound in the pool and play it if found.\n   */\n  playSound: function (processSound) {\n    var found;\n    var i;\n    var sound;\n\n    if (!this.loaded) {\n      warn('Sound not loaded yet. It will be played once it finished loading');\n      this.mustPlay = true;\n      return;\n    }\n\n    found = false;\n    this.isPlaying = true;\n    for (i = 0; i < this.pool.children.length; i++) {\n      sound = this.pool.children[i];\n      if (!sound.isPlaying && sound.buffer && !found) {\n        if (processSound) { processSound(sound); }\n        sound.play();\n        sound.isPaused = false;\n        found = true;\n        continue;\n      }\n    }\n\n    if (!found) {\n      warn('All the sounds are playing. If you need to play more sounds simultaneously ' +\n           'consider increasing the size of pool with the `poolSize` attribute.', this.el);\n      return;\n    }\n\n    this.mustPlay = false;\n  },\n\n  /**\n   * Stop all the sounds in the pool.\n   */\n  stopSound: function () {\n    var i;\n    var sound;\n    this.isPlaying = false;\n    for (i = 0; i < this.pool.children.length; i++) {\n      sound = this.pool.children[i];\n      if (!sound.source || !sound.source.buffer) { return; }\n      sound.stop();\n    }\n  }\n});\n","var registerComponent = require('../core/component').registerComponent;\n\n/**\n * Visibility component.\n */\nmodule.exports.Component = registerComponent('visible', {\n  schema: {default: true},\n\n  update: function () {\n    this.el.object3D.visible = this.data;\n  }\n});\n","var KEYCODE_TO_CODE = require('../constants').keyboardevent.KEYCODE_TO_CODE;\nvar registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\nvar utils = require('../utils/');\n\nvar bind = utils.bind;\nvar shouldCaptureKeyEvent = utils.shouldCaptureKeyEvent;\n\nvar CLAMP_VELOCITY = 0.00001;\nvar MAX_DELTA = 0.2;\nvar KEYS = [\n  'KeyW', 'KeyA', 'KeyS', 'KeyD',\n  'ArrowUp', 'ArrowLeft', 'ArrowRight', 'ArrowDown'\n];\n\n/**\n * WASD component to control entities using WASD keys.\n */\nmodule.exports.Component = registerComponent('wasd-controls', {\n  schema: {\n    acceleration: {default: 65},\n    adAxis: {default: 'x', oneOf: ['x', 'y', 'z']},\n    adEnabled: {default: true},\n    adInverted: {default: false},\n    enabled: {default: true},\n    fly: {default: false},\n    wsAxis: {default: 'z', oneOf: ['x', 'y', 'z']},\n    wsEnabled: {default: true},\n    wsInverted: {default: false}\n  },\n\n  init: function () {\n    // To keep track of the pressed keys.\n    this.keys = {};\n    this.easing = 1.1;\n\n    this.velocity = new THREE.Vector3();\n\n    // Bind methods and add event listeners.\n    this.onBlur = bind(this.onBlur, this);\n    this.onFocus = bind(this.onFocus, this);\n    this.onKeyDown = bind(this.onKeyDown, this);\n    this.onKeyUp = bind(this.onKeyUp, this);\n    this.onVisibilityChange = bind(this.onVisibilityChange, this);\n    this.attachVisibilityEventListeners();\n  },\n\n  tick: function (time, delta) {\n    var data = this.data;\n    var el = this.el;\n    var velocity = this.velocity;\n\n    if (!velocity[data.adAxis] && !velocity[data.wsAxis] &&\n        isEmptyObject(this.keys)) { return; }\n\n    // Update velocity.\n    delta = delta / 1000;\n    this.updateVelocity(delta);\n\n    if (!velocity[data.adAxis] && !velocity[data.wsAxis]) { return; }\n\n    // Get movement vector and translate position.\n    el.object3D.position.add(this.getMovementVector(delta));\n  },\n\n  remove: function () {\n    this.removeKeyEventListeners();\n    this.removeVisibilityEventListeners();\n  },\n\n  play: function () {\n    this.attachKeyEventListeners();\n  },\n\n  pause: function () {\n    this.keys = {};\n    this.removeKeyEventListeners();\n  },\n\n  updateVelocity: function (delta) {\n    var acceleration;\n    var adAxis;\n    var adSign;\n    var data = this.data;\n    var keys = this.keys;\n    var velocity = this.velocity;\n    var wsAxis;\n    var wsSign;\n\n    adAxis = data.adAxis;\n    wsAxis = data.wsAxis;\n\n    // If FPS too low, reset velocity.\n    if (delta > MAX_DELTA) {\n      velocity[adAxis] = 0;\n      velocity[wsAxis] = 0;\n      return;\n    }\n\n    // https://gamedev.stackexchange.com/questions/151383/frame-rate-independant-movement-with-acceleration\n    var scaledEasing = Math.pow(1 / this.easing, delta * 60);\n    // Velocity Easing.\n    if (velocity[adAxis] !== 0) {\n      velocity[adAxis] -= velocity[adAxis] * scaledEasing;\n    }\n    if (velocity[wsAxis] !== 0) {\n      velocity[wsAxis] -= velocity[wsAxis] * scaledEasing;\n    }\n\n    // Clamp velocity easing.\n    if (Math.abs(velocity[adAxis]) < CLAMP_VELOCITY) { velocity[adAxis] = 0; }\n    if (Math.abs(velocity[wsAxis]) < CLAMP_VELOCITY) { velocity[wsAxis] = 0; }\n\n    if (!data.enabled) { return; }\n\n    // Update velocity using keys pressed.\n    acceleration = data.acceleration;\n    if (data.adEnabled) {\n      adSign = data.adInverted ? -1 : 1;\n      if (keys.KeyA || keys.ArrowLeft) { velocity[adAxis] -= adSign * acceleration * delta; }\n      if (keys.KeyD || keys.ArrowRight) { velocity[adAxis] += adSign * acceleration * delta; }\n    }\n    if (data.wsEnabled) {\n      wsSign = data.wsInverted ? -1 : 1;\n      if (keys.KeyW || keys.ArrowUp) { velocity[wsAxis] -= wsSign * acceleration * delta; }\n      if (keys.KeyS || keys.ArrowDown) { velocity[wsAxis] += wsSign * acceleration * delta; }\n    }\n  },\n\n  getMovementVector: (function () {\n    var directionVector = new THREE.Vector3(0, 0, 0);\n    var rotationEuler = new THREE.Euler(0, 0, 0, 'YXZ');\n\n    return function (delta) {\n      var rotation = this.el.getAttribute('rotation');\n      var velocity = this.velocity;\n      var xRotation;\n\n      directionVector.copy(velocity);\n      directionVector.multiplyScalar(delta);\n\n      // Absolute.\n      if (!rotation) { return directionVector; }\n\n      xRotation = this.data.fly ? rotation.x : 0;\n\n      // Transform direction relative to heading.\n      rotationEuler.set(THREE.Math.degToRad(xRotation), THREE.Math.degToRad(rotation.y), 0);\n      directionVector.applyEuler(rotationEuler);\n      return directionVector;\n    };\n  })(),\n\n  attachVisibilityEventListeners: function () {\n    window.addEventListener('blur', this.onBlur);\n    window.addEventListener('focus', this.onFocus);\n    document.addEventListener('visibilitychange', this.onVisibilityChange);\n  },\n\n  removeVisibilityEventListeners: function () {\n    window.removeEventListener('blur', this.onBlur);\n    window.removeEventListener('focus', this.onFocus);\n    document.removeEventListener('visibilitychange', this.onVisibilityChange);\n  },\n\n  attachKeyEventListeners: function () {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n  },\n\n  removeKeyEventListeners: function () {\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  },\n\n  onBlur: function () {\n    this.pause();\n  },\n\n  onFocus: function () {\n    this.play();\n  },\n\n  onVisibilityChange: function () {\n    if (document.hidden) {\n      this.onBlur();\n    } else {\n      this.onFocus();\n    }\n  },\n\n  onKeyDown: function (event) {\n    var code;\n    if (!shouldCaptureKeyEvent(event)) { return; }\n    code = event.code || KEYCODE_TO_CODE[event.keyCode];\n    if (KEYS.indexOf(code) !== -1) { this.keys[code] = true; }\n  },\n\n  onKeyUp: function (event) {\n    var code;\n    code = event.code || KEYCODE_TO_CODE[event.keyCode];\n    delete this.keys[code];\n  }\n});\n\nfunction isEmptyObject (keys) {\n  var key;\n  for (key in keys) { return false; }\n  return true;\n}\n","/* global THREE */\nvar register = require('../../core/component').registerComponent;\n\nmodule.exports.Component = register('background', {\n  schema: {\n    color: {type: 'color', default: 'black'},\n    transparent: {default: false}\n  },\n  update: function () {\n    var data = this.data;\n    var object3D = this.el.object3D;\n    if (data.transparent) {\n      object3D.background = null;\n      return;\n    }\n    object3D.background = new THREE.Color(data.color);\n  }\n});\n","var register = require('../../core/component').registerComponent;\n\nmodule.exports.Component = register('debug', {\n  schema: {default: true}\n});\n","var registerComponent = require('../../core/component').registerComponent;\n\n/**\n * Component to embed an a-frame scene within the layout of a 2D page.\n */\nmodule.exports.Component = registerComponent('embedded', {\n  dependencies: ['vr-mode-ui'],\n\n  schema: {default: true},\n\n  update: function () {\n    var sceneEl = this.el;\n    var enterVREl = sceneEl.querySelector('.a-enter-vr');\n    if (this.data === true) {\n      if (enterVREl) { enterVREl.classList.add('embedded'); }\n      sceneEl.removeFullScreenStyles();\n    } else {\n      if (enterVREl) { enterVREl.classList.remove('embedded'); }\n      sceneEl.addFullScreenStyles();\n    }\n  }\n\n});\n","/* global AFRAME */\nvar AFRAME_INJECTED = require('../../constants').AFRAME_INJECTED;\nvar registerComponent = require('../../core/component').registerComponent;\nvar utils = require('../../utils/');\n\nvar INSPECTOR_DEV_URL = 'https://aframe.io/aframe-inspector/dist/aframe-inspector.js';\nvar INSPECTOR_RELEASE_URL = 'https://unpkg.com/aframe-inspector@0.9.0/dist/aframe-inspector.min.js';\nvar INSPECTOR_URL = process.env.INSPECTOR_VERSION === 'dev' ? INSPECTOR_DEV_URL : INSPECTOR_RELEASE_URL;\nvar LOADING_MESSAGE = 'Loading Inspector';\nvar LOADING_ERROR_MESSAGE = 'Error loading Inspector';\n\nmodule.exports.Component = registerComponent('inspector', {\n  schema: {\n    url: {default: INSPECTOR_URL}\n  },\n\n  init: function () {\n    this.firstPlay = true;\n    this.onKeydown = this.onKeydown.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n    this.initOverlay();\n    window.addEventListener('keydown', this.onKeydown);\n    window.addEventListener('message', this.onMessage);\n  },\n\n  play: function () {\n    var urlParam;\n    if (!this.firstPlay) { return; }\n    urlParam = utils.getUrlParameter('inspector');\n    if (urlParam !== 'false' && !!urlParam) {\n      this.openInspector();\n      this.firstPlay = false;\n    }\n  },\n\n  initOverlay: function () {\n    var dotsHTML = '<span class=\"dots\"><span>.</span><span>.</span><span>.</span></span>';\n    this.loadingMessageEl = document.createElement('div');\n    this.loadingMessageEl.classList.add('a-inspector-loader');\n    this.loadingMessageEl.innerHTML = LOADING_MESSAGE + dotsHTML;\n  },\n\n  remove: function () {\n    this.removeEventListeners();\n  },\n\n  /**\n   * <ctrl> + <alt> + i keyboard shortcut.\n   */\n  onKeydown: function (evt) {\n    var shortcutPressed = evt.keyCode === 73 && evt.ctrlKey && evt.altKey;\n    if (!shortcutPressed) { return; }\n    this.openInspector();\n  },\n\n  showLoader: function () {\n    document.body.appendChild(this.loadingMessageEl);\n  },\n\n  hideLoader: function () {\n    document.body.removeChild(this.loadingMessageEl);\n  },\n\n  /**\n   * postMessage. aframe.io uses this to create a button on examples to open Inspector.\n   */\n  onMessage: function (evt) {\n    if (evt.data === 'INJECT_AFRAME_INSPECTOR') { this.openInspector(); }\n  },\n\n  openInspector: function (focusEl) {\n    var self = this;\n    var script;\n\n    // Already injected. Open.\n    if (AFRAME.INSPECTOR || AFRAME.inspectorInjected) {\n      AFRAME.INSPECTOR.open(focusEl);\n      return;\n    }\n\n    this.showLoader();\n\n    // Inject.\n    script = document.createElement('script');\n    script.src = this.data.url;\n    script.setAttribute('data-name', 'aframe-inspector');\n    script.setAttribute(AFRAME_INJECTED, '');\n    script.onload = function () {\n      AFRAME.INSPECTOR.open(focusEl);\n      self.hideLoader();\n      self.removeEventListeners();\n    };\n    script.onerror = function () {\n      self.loadingMessageEl.innerHTML = LOADING_ERROR_MESSAGE;\n    };\n    document.head.appendChild(script);\n    AFRAME.inspectorInjected = true;\n  },\n\n  removeEventListeners: function () {\n    window.removeEventListener('keydown', this.onKeydown);\n    window.removeEventListener('message', this.onMessage);\n  }\n});\n","var register = require('../../core/component').registerComponent;\nvar THREE = require('../../lib/three');\nvar debug = require('../../utils/debug');\n\nvar warn = debug('components:fog:warn');\n\n/**\n * Fog component.\n * Applies only to the scene entity.\n */\nmodule.exports.Component = register('fog', {\n  schema: {\n    color: {type: 'color', default: '#000'},\n    density: {default: 0.00025},\n    far: {default: 1000, min: 0},\n    near: {default: 1, min: 0},\n    type: {default: 'linear', oneOf: ['linear', 'exponential']}\n  },\n\n  update: function () {\n    var data = this.data;\n    var el = this.el;\n    var fog = this.el.object3D.fog;\n\n    if (!el.isScene) {\n      warn('Fog component can only be applied to <a-scene>');\n      return;\n    }\n\n    // (Re)create fog if fog doesn't exist or fog type changed.\n    if (!fog || data.type !== fog.name) {\n      el.object3D.fog = getFog(data);\n      el.systems.material.updateMaterials();\n      return;\n    }\n\n    // Fog data changed. Update fog.\n    Object.keys(this.schema).forEach(function (key) {\n      var value = data[key];\n      if (key === 'color') { value = new THREE.Color(value); }\n      fog[key] = value;\n    });\n  },\n\n  /**\n   * Remove fog on remove (callback).\n   */\n  remove: function () {\n    var fog = this.el.object3D.fog;\n    if (!fog) { return; }\n    fog.far = 0;\n    fog.near = 0.1;\n  }\n});\n\n/**\n * Creates a fog object. Sets fog.name to be able to detect fog type changes.\n *\n * @param {object} data - Fog data.\n * @returns {object} fog\n */\nfunction getFog (data) {\n  var fog;\n  if (data.type === 'exponential') {\n    fog = new THREE.FogExp2(data.color, data.density);\n  } else {\n    fog = new THREE.Fog(data.color, data.near, data.far);\n  }\n  fog.name = data.type;\n  return fog;\n}\n","var registerComponent = require('../../core/component').registerComponent;\nvar shouldCaptureKeyEvent = require('../../utils/').shouldCaptureKeyEvent;\n\nmodule.exports.Component = registerComponent('keyboard-shortcuts', {\n  schema: {\n    enterVR: {default: true},\n    exitVR: {default: true}\n  },\n\n  init: function () {\n    this.onKeyup = this.onKeyup.bind(this);\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n    this.enterVREnabled = data.enterVR;\n  },\n\n  play: function () {\n    window.addEventListener('keyup', this.onKeyup, false);\n  },\n\n  pause: function () {\n    window.removeEventListener('keyup', this.onKeyup);\n  },\n\n  onKeyup: function (evt) {\n    var scene = this.el;\n    if (!shouldCaptureKeyEvent(evt)) { return; }\n    if (this.enterVREnabled && evt.keyCode === 70) {  // f.\n      scene.enterVR();\n    }\n    if (this.enterVREnabled && evt.keyCode === 27) {  // escape.\n      scene.exitVR();\n    }\n  }\n});\n","var debug = require('../../utils/debug');\nvar registerComponent = require('../../core/component').registerComponent;\n\nvar warn = debug('components:pool:warn');\n\n/**\n * Pool component to reuse entities.\n * Avoids creating and destroying the same kind of entities.\n * Helps reduce GC pauses. For example in a game to reuse enemies entities.\n *\n * @member {array} availableEls - Available entities in the pool.\n * @member {array} usedEls - Entities of the pool in use.\n */\nmodule.exports.Component = registerComponent('pool', {\n  schema: {\n    container: {default: ''},\n    mixin: {default: ''},\n    size: {default: 0},\n    dynamic: {default: false}\n  },\n\n  multiple: true,\n\n  initPool: function () {\n    var i;\n\n    this.availableEls = [];\n    this.usedEls = [];\n\n    if (!this.data.mixin) {\n      warn('No mixin provided for pool component.');\n    }\n\n    if (this.data.container) {\n      this.container = document.querySelector(this.data.container);\n      if (!this.container) {\n        warn('Container ' + this.data.container + ' not found.');\n      }\n    }\n    this.container = this.container || this.el;\n\n    for (i = 0; i < this.data.size; ++i) {\n      this.createEntity();\n    }\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n    if (oldData.mixin !== data.mixin || oldData.size !== data.size) {\n      this.initPool();\n    }\n  },\n\n  /**\n   * Add a new entity to the list of available entities.\n   */\n  createEntity: function () {\n    var el;\n    el = document.createElement('a-entity');\n    el.play = this.wrapPlay(el.play);\n    el.setAttribute('mixin', this.data.mixin);\n    el.object3D.visible = false;\n    el.pause();\n    this.container.appendChild(el);\n    this.availableEls.push(el);\n  },\n\n  /**\n   * Play wrapper for pooled entities. When pausing and playing a scene, don't want to play\n   * entities that are not in use.\n   */\n  wrapPlay: function (playMethod) {\n    var usedEls = this.usedEls;\n    return function () {\n      if (usedEls.indexOf(this) === -1) { return; }\n      playMethod.call(this);\n    };\n  },\n\n  /**\n   * Used to request one of the available entities of the pool.\n   */\n  requestEntity: function () {\n    var el;\n    if (this.availableEls.length === 0) {\n      if (this.data.dynamic === false) {\n        warn('Requested entity from empty pool: ' + this.attrName);\n        return;\n      } else {\n        warn('Requested entity from empty pool. This pool is dynamic and will resize ' +\n             'automatically. You might want to increase its initial size: ' + this.attrName);\n      }\n      this.createEntity();\n    }\n    el = this.availableEls.shift();\n    this.usedEls.push(el);\n    el.object3D.visible = true;\n    return el;\n  },\n\n  /**\n   * Used to return a used entity to the pool.\n   */\n  returnEntity: function (el) {\n    var index = this.usedEls.indexOf(el);\n    if (index === -1) {\n      warn('The returned entity was not previously pooled from ' + this.attrName);\n      return;\n    }\n    this.usedEls.splice(index, 1);\n    this.availableEls.push(el);\n    el.object3D.visible = false;\n    el.pause();\n    return el;\n  }\n});\n","/* global ImageData, URL */\nvar registerComponent = require('../../core/component').registerComponent;\nvar THREE = require('../../lib/three');\n\nvar VERTEX_SHADER = [\n  'attribute vec3 position;',\n  'attribute vec2 uv;',\n  'uniform mat4 projectionMatrix;',\n  'uniform mat4 modelViewMatrix;',\n  'varying vec2 vUv;',\n  'void main()  {',\n  '  vUv = vec2( 1.- uv.x, uv.y );',\n  '  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n  '}'\n].join('\\n');\n\nvar FRAGMENT_SHADER = [\n  'precision mediump float;',\n  'uniform samplerCube map;',\n  'varying vec2 vUv;',\n  '#define M_PI 3.141592653589793238462643383279',\n  'void main() {',\n  '  vec2 uv = vUv;',\n  '  float longitude = uv.x * 2. * M_PI - M_PI + M_PI / 2.;',\n  '  float latitude = uv.y * M_PI;',\n  '  vec3 dir = vec3(',\n  '    - sin( longitude ) * sin( latitude ),',\n  '    cos( latitude ),',\n  '    - cos( longitude ) * sin( latitude )',\n  '  );',\n  '  normalize( dir );',\n  '  gl_FragColor = vec4( textureCube( map, dir ).rgb, 1.0 );',\n  '}'\n].join('\\n');\n\n/**\n * Component to take screenshots of the scene using a keboard shortcut (alt+s).\n * It can be configured to either take 360&deg; captures (`equirectangular`)\n * or regular screenshots (`projection`)\n *\n * This is based on https://github.com/spite/THREE.CubemapToEquirectangular\n * To capture an equirectangular projection of the scene a THREE.CubeCamera is used\n * The cube map produced by the CubeCamera is projected on a quad and then rendered to\n * WebGLRenderTarget with an ortographic camera.\n */\nmodule.exports.Component = registerComponent('screenshot', {\n  schema: {\n    width: {default: 4096},\n    height: {default: 2048},\n    camera: {type: 'selector'}\n  },\n\n  init: function () {\n    var el = this.el;\n    var self = this;\n\n    if (el.renderer) {\n      setup();\n    } else {\n      el.addEventListener('render-target-loaded', setup);\n    }\n\n    function setup () {\n      var gl = el.renderer.getContext();\n      if (!gl) { return; }\n      self.cubeMapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      self.material = new THREE.RawShaderMaterial({\n        uniforms: {map: {type: 't', value: null}},\n        vertexShader: VERTEX_SHADER,\n        fragmentShader: FRAGMENT_SHADER,\n        side: THREE.DoubleSide\n      });\n      self.quad = new THREE.Mesh(\n        new THREE.PlaneBufferGeometry(1, 1),\n        self.material\n      );\n      self.quad.visible = false;\n      self.camera = new THREE.OrthographicCamera(-1 / 2, 1 / 2, 1 / 2, -1 / 2, -10000, 10000);\n      self.canvas = document.createElement('canvas');\n      self.ctx = self.canvas.getContext('2d');\n      el.object3D.add(self.quad);\n      self.onKeyDown = self.onKeyDown.bind(self);\n    }\n  },\n\n  getRenderTarget: function (width, height) {\n    return new THREE.WebGLRenderTarget(width, height, {\n      minFilter: THREE.LinearFilter,\n      magFilter: THREE.LinearFilter,\n      wrapS: THREE.ClampToEdgeWrapping,\n      wrapT: THREE.ClampToEdgeWrapping,\n      format: THREE.RGBAFormat,\n      type: THREE.UnsignedByteType\n    });\n  },\n\n  resize: function (width, height) {\n    // Resize quad.\n    this.quad.scale.set(width, height, 1);\n\n    // Resize camera.\n    this.camera.left = -1 * width / 2;\n    this.camera.right = width / 2;\n    this.camera.top = height / 2;\n    this.camera.bottom = -1 * height / 2;\n    this.camera.updateProjectionMatrix();\n\n    // Resize canvas.\n    this.canvas.width = width;\n    this.canvas.height = height;\n  },\n\n  play: function () {\n    window.addEventListener('keydown', this.onKeyDown);\n  },\n\n  /**\n   * <ctrl> + <alt> + s = Regular screenshot.\n   * <ctrl> + <alt> + <shift> + s = Equirectangular screenshot.\n  */\n  onKeyDown: function (evt) {\n    var shortcutPressed = evt.keyCode === 83 && evt.ctrlKey && evt.altKey;\n    if (!this.data || !shortcutPressed) { return; }\n    var projection = evt.shiftKey ? 'equirectangular' : 'perspective';\n    this.capture(projection);\n  },\n\n  /**\n   * Capture a screenshot of the scene.\n   *\n   * @param {string} projection - Screenshot projection (equirectangular or perspective).\n   */\n  setCapture: function (projection) {\n    var el = this.el;\n    var size;\n    var camera;\n    var cubeCamera;\n    // Configure camera.\n    if (projection === 'perspective') {\n      // Quad is only used in equirectangular mode. Hide it in this case.\n      this.quad.visible = false;\n      // Use scene camera.\n      camera = (this.data.camera && this.data.camera.components.camera.camera) || el.camera;\n      size = {width: this.data.width, height: this.data.height};\n    } else {\n      // Use ortho camera.\n      camera = this.camera;\n      // Create cube camera and copy position from scene camera.\n      cubeCamera = new THREE.CubeCamera(el.camera.near, el.camera.far,\n                                        Math.min(this.cubeMapSize, 2048));\n      // Copy camera position into cube camera;\n      el.camera.getWorldPosition(cubeCamera.position);\n      el.camera.getWorldQuaternion(cubeCamera.quaternion);\n      // Render scene with cube camera.\n      cubeCamera.update(el.renderer, el.object3D);\n      this.quad.material.uniforms.map.value = cubeCamera.renderTarget.texture;\n      size = {width: this.data.width, height: this.data.height};\n      // Use quad to project image taken by the cube camera.\n      this.quad.visible = true;\n    }\n    return {\n      camera: camera,\n      size: size,\n      projection: projection\n    };\n  },\n\n  /**\n   * Maintained for backwards compatibility.\n   */\n  capture: function (projection) {\n    var isVREnabled = this.el.renderer.vr.enabled;\n    var renderer = this.el.renderer;\n    var params;\n    // Disable VR.\n    renderer.vr.enabled = false;\n    params = this.setCapture(projection);\n    this.renderCapture(params.camera, params.size, params.projection);\n    // Trigger file download.\n    this.saveCapture();\n    // Restore VR.\n    renderer.vr.enabled = isVREnabled;\n  },\n\n  /**\n   * Return canvas instead of triggering download (e.g., for uploading blob to server).\n   */\n  getCanvas: function (projection) {\n    var params = this.setCapture(projection);\n    this.renderCapture(params.camera, params.size, params.projection);\n    return this.canvas;\n  },\n\n  renderCapture: function (camera, size, projection) {\n    var autoClear = this.el.renderer.autoClear;\n    var el = this.el;\n    var imageData;\n    var output;\n    var pixels;\n    var renderer = el.renderer;\n    // Create rendering target and buffer to store the read pixels.\n    output = this.getRenderTarget(size.width, size.height);\n    pixels = new Uint8Array(4 * size.width * size.height);\n    // Resize quad, camera, and canvas.\n    this.resize(size.width, size.height);\n    // Render scene to render target.\n    renderer.autoClear = true;\n    renderer.render(el.object3D, camera, output, true);\n    renderer.autoClear = autoClear;\n    // Read image pizels back.\n    renderer.readRenderTargetPixels(output, 0, 0, size.width, size.height, pixels);\n    if (projection === 'perspective') {\n      pixels = this.flipPixelsVertically(pixels, size.width, size.height);\n    }\n    imageData = new ImageData(new Uint8ClampedArray(pixels), size.width, size.height);\n    // Hide quad after projecting the image.\n    this.quad.visible = false;\n    // Copy pixels into canvas.\n    this.ctx.putImageData(imageData, 0, 0);\n  },\n\n  flipPixelsVertically: function (pixels, width, height) {\n    var flippedPixels = pixels.slice(0);\n    for (var x = 0; x < width; ++x) {\n      for (var y = 0; y < height; ++y) {\n        flippedPixels[x * 4 + y * width * 4] = pixels[x * 4 + (height - y) * width * 4];\n        flippedPixels[x * 4 + 1 + y * width * 4] = pixels[x * 4 + 1 + (height - y) * width * 4];\n        flippedPixels[x * 4 + 2 + y * width * 4] = pixels[x * 4 + 2 + (height - y) * width * 4];\n        flippedPixels[x * 4 + 3 + y * width * 4] = pixels[x * 4 + 3 + (height - y) * width * 4];\n      }\n    }\n    return flippedPixels;\n  },\n\n  /**\n   * Download capture to file.\n   */\n  saveCapture: function () {\n    this.canvas.toBlob(function (blob) {\n      var fileName = 'screenshot-' + document.title.toLowerCase() + '-' + Date.now() + '.png';\n      var linkEl = document.createElement('a');\n      var url = URL.createObjectURL(blob);\n      linkEl.href = url;\n      linkEl.setAttribute('download', fileName);\n      linkEl.innerHTML = 'downloading...';\n      linkEl.style.display = 'none';\n      document.body.appendChild(linkEl);\n      setTimeout(function () {\n        linkEl.click();\n        document.body.removeChild(linkEl);\n      }, 1);\n    }, 'image/png');\n  }\n});\n","var registerComponent = require('../../core/component').registerComponent;\nvar RStats = require('../../../vendor/rStats');\nvar utils = require('../../utils');\nrequire('../../../vendor/rStats.extras');\nrequire('../../lib/rStatsAframe');\n\nvar AFrameStats = window.aframeStats;\nvar bind = utils.bind;\nvar HIDDEN_CLASS = 'a-hidden';\nvar ThreeStats = window.threeStats;\n\n/**\n * Stats appended to document.body by RStats.\n */\nmodule.exports.Component = registerComponent('stats', {\n  schema: {default: true},\n\n  init: function () {\n    var scene = this.el;\n\n    if (utils.getUrlParameter('stats') === 'false') { return; }\n\n    this.stats = createStats(scene);\n    this.statsEl = document.querySelector('.rs-base');\n\n    this.hideBound = bind(this.hide, this);\n    this.showBound = bind(this.show, this);\n\n    scene.addEventListener('enter-vr', this.hideBound);\n    scene.addEventListener('exit-vr', this.showBound);\n  },\n\n  update: function () {\n    if (!this.stats) { return; }\n    return (!this.data) ? this.hide() : this.show();\n  },\n\n  remove: function () {\n    this.el.removeEventListener('enter-vr', this.hideBound);\n    this.el.removeEventListener('exit-vr', this.showBound);\n    if (!this.statsEl) { return; }  // Scene detached.\n    this.statsEl.parentNode.removeChild(this.statsEl);\n  },\n\n  tick: function () {\n    var stats = this.stats;\n\n    if (!stats) { return; }\n\n    stats('rAF').tick();\n    stats('FPS').frame();\n    stats().update();\n  },\n\n  hide: function () {\n    this.statsEl.classList.add(HIDDEN_CLASS);\n  },\n\n  show: function () {\n    this.statsEl.classList.remove(HIDDEN_CLASS);\n  }\n});\n\nfunction createStats (scene) {\n  var threeStats = new ThreeStats(scene.renderer);\n  var aframeStats = new AFrameStats(scene);\n  var plugins = scene.isMobile ? [] : [threeStats, aframeStats];\n  return new RStats({\n    css: [],  // Our stylesheet is injected from `src/index.js`.\n    values: {\n      fps: {caption: 'fps', below: 30}\n    },\n    groups: [\n      {caption: 'Framerate', values: ['fps', 'raf']}\n    ],\n    plugins: plugins\n  });\n}\n","// performance.now() polyfill from https://gist.github.com/paulirish/5438650\n'use strict';\n\n( function () {\n\n    if ( 'performance' in window == false ) {\n        window.performance = {};\n    }\n\n    var performance = window.performance;\n\n    if ( 'now' in performance == false ) {\n\n        var nowOffset = Date.now();\n\n        if ( performance.timing && performance.timing.navigationStart ) {\n            nowOffset = performance.timing.navigationStart;\n        }\n\n        performance.now = function now () {\n            return Date.now() - nowOffset;\n        };\n\n    }\n\n    if( !performance.mark ) {\n        performance.mark = function(){}\n    }\n\n    if( !performance.measure ) {\n        performance.measure = function(){}\n    }\n\n} )();\n\nwindow.rStats = function rStats ( settings ) {\n\n    function iterateKeys ( array, callback ) {\n        var keys = Object.keys( array );\n        for ( var j = 0, l = keys.length; j < l; j++ ) {\n            callback( keys[ j ] );\n        }\n    }\n\n    function importCSS ( url ) {\n\n        var element = document.createElement( 'link' );\n        element.href = url;\n        element.rel = 'stylesheet';\n        element.type = 'text/css';\n        document.getElementsByTagName( 'head' )[ 0 ].appendChild( element );\n\n    }\n\n    var _settings = settings || {};\n    var _colours = _settings.colours || [ '#850700', '#c74900', '#fcb300', '#284280', '#4c7c0c' ];\n\n    var _cssFont = 'https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700,300';\n    var _cssRStats = ( _settings.CSSPath ? _settings.CSSPath : '' ) + 'rStats.css';\n\n    var _css = _settings.css || [ _cssFont, _cssRStats ];\n    _css.forEach(function (uri) {\n        importCSS( uri );\n    });\n\n    if ( !_settings.values ) _settings.values = {};\n\n    var _base, _div, _elHeight = 10, _elWidth = 200;\n    var _perfCounters = {};\n\n\n    function Graph ( _dom, _id, _defArg ) {\n\n        var _def = _defArg || {};\n        var _canvas = document.createElement( 'canvas' ),\n            _ctx = _canvas.getContext( '2d' ),\n            _max = 0,\n            _current = 0;\n\n        var c = _def.color ? _def.color : '#666666';\n\n        var _dotCanvas = document.createElement( 'canvas' ),\n            _dotCtx = _dotCanvas.getContext( '2d' );\n        _dotCanvas.width = 1;\n        _dotCanvas.height = 2 * _elHeight;\n        _dotCtx.fillStyle = '#444444';\n        _dotCtx.fillRect( 0, 0, 1, 2 * _elHeight );\n        _dotCtx.fillStyle = c;\n        _dotCtx.fillRect( 0, _elHeight, 1, _elHeight );\n        _dotCtx.fillStyle = '#ffffff';\n        _dotCtx.globalAlpha = 0.5;\n        _dotCtx.fillRect( 0, _elHeight, 1, 1 );\n        _dotCtx.globalAlpha = 1;\n\n        var _alarmCanvas = document.createElement( 'canvas' ),\n            _alarmCtx = _alarmCanvas.getContext( '2d' );\n        _alarmCanvas.width = 1;\n        _alarmCanvas.height = 2 * _elHeight;\n        _alarmCtx.fillStyle = '#444444';\n        _alarmCtx.fillRect( 0, 0, 1, 2 * _elHeight );\n        _alarmCtx.fillStyle = '#b70000';\n        _alarmCtx.fillRect( 0, _elHeight, 1, _elHeight );\n        _alarmCtx.globalAlpha = 0.5;\n        _alarmCtx.fillStyle = '#ffffff';\n        _alarmCtx.fillRect( 0, _elHeight, 1, 1 );\n        _alarmCtx.globalAlpha = 1;\n\n        function _init () {\n\n            _canvas.width = _elWidth;\n            _canvas.height = _elHeight;\n            _canvas.style.width = _canvas.width + 'px';\n            _canvas.style.height = _canvas.height + 'px';\n            _canvas.className = 'rs-canvas';\n            _dom.appendChild( _canvas );\n\n            _ctx.fillStyle = '#444444';\n            _ctx.fillRect( 0, 0, _canvas.width, _canvas.height );\n\n        }\n\n        function _draw ( v, alarm ) {\n            _current += ( v - _current ) * 0.1;\n            _max *= 0.99;\n            if ( _current > _max ) _max = _current;\n            _ctx.drawImage( _canvas, 1, 0, _canvas.width - 1, _canvas.height, 0, 0, _canvas.width - 1, _canvas.height );\n            if ( alarm ) {\n                _ctx.drawImage( _alarmCanvas, _canvas.width - 1, _canvas.height - _current * _canvas.height / _max - _elHeight );\n            } else {\n                _ctx.drawImage( _dotCanvas, _canvas.width - 1, _canvas.height - _current * _canvas.height / _max - _elHeight );\n            }\n        }\n\n        _init();\n\n        return {\n            draw: _draw\n        };\n\n    }\n\n    function StackGraph ( _dom, _num ) {\n\n        var _canvas = document.createElement( 'canvas' ),\n            _ctx = _canvas.getContext( '2d' );\n\n        function _init () {\n\n            _canvas.width = _elWidth;\n            _canvas.height = _elHeight * _num;\n            _canvas.style.width = _canvas.width + 'px';\n            _canvas.style.height = _canvas.height + 'px';\n            _canvas.className = 'rs-canvas';\n            _dom.appendChild( _canvas );\n\n            _ctx.fillStyle = '#444444';\n            _ctx.fillRect( 0, 0, _canvas.width, _canvas.height );\n\n        }\n\n        function _draw ( v ) {\n            _ctx.drawImage( _canvas, 1, 0, _canvas.width - 1, _canvas.height, 0, 0, _canvas.width - 1, _canvas.height );\n            var th = 0;\n            iterateKeys( v, function ( j ) {\n                var h = v[ j ] * _canvas.height;\n                _ctx.fillStyle = _colours[ j ];\n                _ctx.fillRect( _canvas.width - 1, th, 1, h );\n                th += h;\n            } );\n        }\n\n        _init();\n\n        return {\n            draw: _draw\n        };\n\n    }\n\n    function PerfCounter ( id, group ) {\n\n        var _id = id,\n            _time,\n            _value = 0,\n            _total = 0,\n            _averageValue = 0,\n            _accumValue = 0,\n            _accumStart = performance.now(),\n            _accumSamples = 0,\n            _dom = document.createElement( 'div' ),\n            _spanId = document.createElement( 'span' ),\n            _spanValue = document.createElement( 'div' ),\n            _spanValueText = document.createTextNode( '' ),\n            _def = _settings ? _settings.values[ _id.toLowerCase() ] : null,\n            _graph = new Graph( _dom, _id, _def ),\n            _started = false;\n\n        _spanId.className = 'rs-counter-id';\n        _spanId.textContent = ( _def && _def.caption ) ? _def.caption : _id;\n\n        _spanValue.className = 'rs-counter-value';\n        _spanValue.appendChild( _spanValueText );\n\n        _dom.appendChild( _spanId );\n        _dom.appendChild( _spanValue );\n        if ( group ) group.div.appendChild( _dom );\n        else _div.appendChild( _dom );\n\n        _time = performance.now();\n\n        function _average ( v ) {\n            if ( _def && _def.average ) {\n                _accumValue += v;\n                _accumSamples++;\n                var t = performance.now();\n                if ( t - _accumStart >= ( _def.avgMs || 1000 ) ) {\n                    _averageValue = _accumValue / _accumSamples;\n                    _accumValue = 0;\n                    _accumStart = t;\n                    _accumSamples = 0;\n                }\n            }\n        }\n\n        function _start () {\n            _time = performance.now();\n            if( _settings.userTimingAPI ) performance.mark( _id + '-start' );\n            _started = true;\n        }\n\n        function _end () {\n            _value = performance.now() - _time;\n            if( _settings.userTimingAPI ) {\n                performance.mark( _id + '-end' );\n                if( _started ) {\n                    performance.measure( _id, _id + '-start', _id + '-end' );\n                }\n            }\n            _average( _value );\n        }\n\n        function _tick () {\n            _end();\n            _start();\n        }\n\n        function _draw () {\n            var v = ( _def && _def.average ) ? _averageValue : _value;\n            _spanValueText.nodeValue = Math.round( v * 100 ) / 100;\n            var a = ( _def && ( ( _def.below && _value < _def.below ) || ( _def.over && _value > _def.over ) ) );\n            _graph.draw( _value, a );\n            _dom.className = a ? 'rs-counter-base alarm' : 'rs-counter-base';\n\n        }\n\n        function _frame () {\n            var t = performance.now();\n            var e = t - _time;\n            _total++;\n            if ( e > 1000 ) {\n                if ( _def && _def.interpolate === false ) {\n                    _value = _total;\n                } else {\n                    _value = _total * 1000 / e;\n                }\n                _total = 0;\n                _time = t;\n                _average( _value );\n            }\n        }\n\n        function _set ( v ) {\n            _value = v;\n            _average( _value );\n        }\n\n        return {\n            set: _set,\n            start: _start,\n            tick: _tick,\n            end: _end,\n            frame: _frame,\n            value: function () {\n                return _value;\n            },\n            draw: _draw\n        };\n\n    }\n\n    function sample () {\n\n        var _value = 0;\n\n        function _set ( v ) {\n            _value = v;\n        }\n\n        return {\n            set: _set,\n            value: function () {\n                return _value;\n            }\n        };\n\n    }\n\n    function _perf ( idArg ) {\n\n        var id = idArg.toLowerCase();\n        if ( id === undefined ) id = 'default';\n        if ( _perfCounters[ id ] ) return _perfCounters[ id ];\n\n        var group = null;\n        if ( _settings && _settings.groups ) {\n            iterateKeys( _settings.groups, function ( j ) {\n                var g = _settings.groups[ parseInt( j, 10 ) ];\n                if ( !group && g.values.indexOf( id.toLowerCase() ) !== -1 ) {\n                    group = g;\n                }\n            } );\n        }\n\n        var p = new PerfCounter( id, group );\n        _perfCounters[ id ] = p;\n        return p;\n\n    }\n\n    function _init () {\n\n        if ( _settings.plugins ) {\n            if ( !_settings.values ) _settings.values = {};\n            if ( !_settings.groups ) _settings.groups = [];\n            if ( !_settings.fractions ) _settings.fractions = [];\n            for ( var j = 0; j < _settings.plugins.length; j++ ) {\n                _settings.plugins[ j ].attach( _perf );\n                iterateKeys( _settings.plugins[ j ].values, function ( k ) {\n                    _settings.values[ k ] = _settings.plugins[ j ].values[ k ];\n                } );\n                _settings.groups = _settings.groups.concat( _settings.plugins[ j ].groups );\n                _settings.fractions = _settings.fractions.concat( _settings.plugins[ j ].fractions );\n            }\n        } else {\n            _settings.plugins = {};\n        }\n\n        _base = document.createElement( 'div' );\n        _base.className = 'rs-base';\n        _div = document.createElement( 'div' );\n        _div.className = 'rs-container';\n        _div.style.height = 'auto';\n        _base.appendChild( _div );\n        document.body.appendChild( _base );\n\n        if ( !_settings ) return;\n\n        if ( _settings.groups ) {\n            iterateKeys( _settings.groups, function ( j ) {\n                var g = _settings.groups[ parseInt( j, 10 ) ];\n                var div = document.createElement( 'div' );\n                div.className = 'rs-group';\n                g.div = div;\n                var h1 = document.createElement( 'h1' );\n                h1.textContent = g.caption;\n                h1.addEventListener( 'click', function ( e ) {\n                    this.classList.toggle( 'hidden' );\n                    e.preventDefault();\n                }.bind( div ) );\n                _div.appendChild( h1 );\n                _div.appendChild( div );\n            } );\n        }\n\n        if ( _settings.fractions ) {\n            iterateKeys( _settings.fractions, function ( j ) {\n                var f = _settings.fractions[ parseInt( j, 10 ) ];\n                var div = document.createElement( 'div' );\n                div.className = 'rs-fraction';\n                var legend = document.createElement( 'div' );\n                legend.className = 'rs-legend';\n\n                var h = 0;\n                iterateKeys( _settings.fractions[ j ].steps, function ( k ) {\n                    var p = document.createElement( 'p' );\n                    p.textContent = _settings.fractions[ j ].steps[ k ];\n                    p.style.color = _colours[ h ];\n                    legend.appendChild( p );\n                    h++;\n                } );\n                div.appendChild( legend );\n                div.style.height = h * _elHeight + 'px';\n                f.div = div;\n                var graph = new StackGraph( div, h );\n                f.graph = graph;\n                _div.appendChild( div );\n            } );\n        }\n\n    }\n\n    function _update () {\n\n        iterateKeys( _settings.plugins, function ( j ) {\n            _settings.plugins[ j ].update();\n        } );\n\n        iterateKeys( _perfCounters, function ( j ) {\n            _perfCounters[ j ].draw();\n        } );\n\n        if ( _settings && _settings.fractions ) {\n            iterateKeys( _settings.fractions, function ( j ) {\n                var f = _settings.fractions[ parseInt( j, 10 ) ];\n                var v = [];\n                var base = _perfCounters[ f.base.toLowerCase() ];\n                if ( base ) {\n                    base = base.value();\n                    iterateKeys( _settings.fractions[ j ].steps, function ( k ) {\n                        var s = _settings.fractions[ j ].steps[ parseInt( k, 10 ) ].toLowerCase();\n                        var val = _perfCounters[ s ];\n                        if ( val ) {\n                            v.push( val.value() / base );\n                        }\n                    } );\n                }\n                f.graph.draw( v );\n            } );\n        }\n\n        /*if( _height != _div.clientHeight ) {\n            _height = _div.clientHeight;\n            _base.style.height = _height + 2 * _elHeight + 'px';\n        console.log( _base.clientHeight );\n        }*/\n\n    }\n\n    _init();\n\n    return function ( id ) {\n        if ( id ) return _perf( id );\n        return {\n            element: _base,\n            update: _update\n        };\n    };\n\n}\n\nif (typeof module === 'object') {\n  module.exports = window.rStats;\n}\n","window.glStats = function () {\n\n    var _rS = null;\n\n    var _totalDrawArraysCalls = 0,\n        _totalDrawElementsCalls = 0,\n        _totalUseProgramCalls = 0,\n        _totalFaces = 0,\n        _totalVertices = 0,\n        _totalPoints = 0,\n        _totalBindTexures = 0;\n\n    function _h ( f, c ) {\n        return function () {\n            c.apply( this, arguments );\n            f.apply( this, arguments );\n        };\n    }\n\n    WebGLRenderingContext.prototype.drawArrays = _h( WebGLRenderingContext.prototype.drawArrays, function () {\n        _totalDrawArraysCalls++;\n        if ( arguments[ 0 ] == this.POINTS ) _totalPoints += arguments[ 2 ];\n        else _totalVertices += arguments[ 2 ];\n    } );\n\n    WebGLRenderingContext.prototype.drawElements = _h( WebGLRenderingContext.prototype.drawElements, function () {\n        _totalDrawElementsCalls++;\n        _totalFaces += arguments[ 1 ] / 3;\n        _totalVertices += arguments[ 1 ];\n    } );\n\n    WebGLRenderingContext.prototype.useProgram = _h( WebGLRenderingContext.prototype.useProgram, function () {\n        _totalUseProgramCalls++;\n    } );\n\n    WebGLRenderingContext.prototype.bindTexture = _h( WebGLRenderingContext.prototype.bindTexture, function () {\n        _totalBindTexures++;\n    } );\n\n    var _values = {\n        allcalls: {\n            over: 3000,\n            caption: 'Calls (hook)'\n        },\n        drawelements: {\n            caption: 'drawElements (hook)'\n        },\n        drawarrays: {\n            caption: 'drawArrays (hook)'\n        }\n    };\n\n    var _groups = [ {\n        caption: 'WebGL',\n        values: [ 'allcalls', 'drawelements', 'drawarrays', 'useprogram', 'bindtexture', 'glfaces', 'glvertices', 'glpoints' ]\n    } ];\n\n    var _fractions = [ {\n        base: 'allcalls',\n        steps: [ 'drawelements', 'drawarrays' ]\n    } ];\n\n    function _update () {\n        _rS( 'allcalls' ).set( _totalDrawArraysCalls + _totalDrawElementsCalls );\n        _rS( 'drawElements' ).set( _totalDrawElementsCalls );\n        _rS( 'drawArrays' ).set( _totalDrawArraysCalls );\n        _rS( 'bindTexture' ).set( _totalBindTexures );\n        _rS( 'useProgram' ).set( _totalUseProgramCalls );\n        _rS( 'glfaces' ).set( _totalFaces );\n        _rS( 'glvertices' ).set( _totalVertices );\n        _rS( 'glpoints' ).set( _totalPoints );\n    }\n\n    function _start () {\n        _totalDrawArraysCalls = 0;\n        _totalDrawElementsCalls = 0;\n        _totalUseProgramCalls = 0;\n        _totalFaces = 0;\n        _totalVertices = 0;\n        _totalPoints = 0;\n        _totalBindTexures = 0;\n    }\n\n    function _end () {}\n\n    function _attach ( r ) {\n        _rS = r;\n    }\n\n    return {\n        update: _update,\n        start: _start,\n        end: _end,\n        attach: _attach,\n        values: _values,\n        groups: _groups,\n        fractions: _fractions\n    };\n\n};\n\nwindow.threeStats = function ( renderer ) {\n\n    var _rS = null;\n\n    var _values = {\n        'renderer.info.memory.geometries': {\n            caption: 'Geometries'\n        },\n        'renderer.info.memory.textures': {\n            caption: 'Textures'\n        },\n        'renderer.info.programs': {\n            caption: 'Programs'\n        },\n        'renderer.info.render.calls': {\n            caption: 'Calls'\n        },\n        'renderer.info.render.triangles': {\n            caption: 'Triangles',\n            over: 1000\n        },\n        'renderer.info.render.points': {\n            caption: 'Points'\n        }\n    };\n\n    var _groups = [ {\n        caption: 'Three.js - Memory',\n        values: [ 'renderer.info.memory.geometries', 'renderer.info.programs', 'renderer.info.memory.textures' ]\n    }, {\n        caption: 'Three.js - Render',\n        values: [ 'renderer.info.render.calls', 'renderer.info.render.triangles', 'renderer.info.render.points' ]\n    } ];\n\n    var _fractions = [];\n\n    function _update () {\n\n        _rS( 'renderer.info.memory.geometries' ).set( renderer.info.memory.geometries );\n        _rS( 'renderer.info.programs' ).set( renderer.info.programs.length );\n        _rS( 'renderer.info.memory.textures' ).set( renderer.info.memory.textures );\n        _rS( 'renderer.info.render.calls' ).set( renderer.info.render.calls );\n        _rS( 'renderer.info.render.triangles' ).set( renderer.info.render.triangles );\n        _rS( 'renderer.info.render.points' ).set( renderer.info.render.points );\n\n    }\n\n    function _start () {}\n\n    function _end () {}\n\n    function _attach ( r ) {\n        _rS = r;\n    }\n\n    return {\n        update: _update,\n        start: _start,\n        end: _end,\n        attach: _attach,\n        values: _values,\n        groups: _groups,\n        fractions: _fractions\n    };\n\n};\n\n/*\n *   From https://github.com/paulirish/memory-stats.js\n */\n\nwindow.BrowserStats = function () {\n\n    var _rS = null;\n\n    var _usedJSHeapSize = 0,\n        _totalJSHeapSize = 0;\n\n    if ( window.performance && !performance.memory ) {\n        performance.memory = {\n            usedJSHeapSize: 0,\n            totalJSHeapSize: 0\n        };\n    }\n\n    if ( performance.memory.totalJSHeapSize === 0 ) {\n        console.warn( 'totalJSHeapSize === 0... performance.memory is only available in Chrome .' );\n    }\n\n    var _values = {\n        memory: {\n            caption: 'Used Memory',\n            average: true,\n            avgMs: 1000,\n            over: 22\n        },\n        total: {\n            caption: 'Total Memory'\n        }\n    };\n\n    var _groups = [ {\n        caption: 'Browser',\n        values: [ 'memory', 'total' ]\n    } ];\n\n    var _fractions = [ {\n        base: 'total',\n        steps: [ 'memory' ]\n    } ];\n\n    var log1024 = Math.log( 1024 );\n\n    function _size ( v ) {\n\n        var precision = 100; //Math.pow(10, 2);\n        var i = Math.floor( Math.log( v ) / log1024 );\n        return Math.round( v * precision / Math.pow( 1024, i ) ) / precision; // + ' ' + sizes[i];\n\n    }\n\n    function _update () {\n        _usedJSHeapSize = _size( performance.memory.usedJSHeapSize );\n        _totalJSHeapSize = _size( performance.memory.totalJSHeapSize );\n\n        _rS( 'memory' ).set( _usedJSHeapSize );\n        _rS( 'total' ).set( _totalJSHeapSize );\n    }\n\n    function _start () {\n        _usedJSHeapSize = 0;\n    }\n\n    function _end () {}\n\n    function _attach ( r ) {\n        _rS = r;\n    }\n\n    return {\n        update: _update,\n        start: _start,\n        end: _end,\n        attach: _attach,\n        values: _values,\n        groups: _groups,\n        fractions: _fractions\n    };\n\n};\n\nif (typeof module === 'object') {\n  module.exports = {\n    glStats: window.glStats,\n    threeStats: window.threeStats,\n    BrowserStats: window.BrowserStats\n  };\n}\n","window.aframeStats = function (scene) {\n  var _rS = null;\n  var _scene = scene;\n  var _values = {\n    te: {\n      caption: 'Entities'\n    },\n    lt: {\n      caption: 'Load Time'\n    }\n  };\n  var _groups = [ {\n    caption: 'A-Frame',\n    values: [ 'te', 'lt' ]\n  } ];\n\n  function _update () {\n    _rS('te').set(getEntityCount());\n    if (window.performance.getEntriesByName) {\n      _rS('lt').set(window.performance.getEntriesByName('render-started')[0].startTime.toFixed(0));\n    }\n  }\n\n  function getEntityCount () {\n    var elements = _scene.querySelectorAll('*');\n    Array.prototype.slice.call(elements).filter(function (el) {\n      return el.isEntity;\n    });\n    return elements.length;\n  }\n\n  function _start () {}\n\n  function _end () {}\n\n  function _attach (r) {\n    _rS = r;\n  }\n\n  return {\n    update: _update,\n    start: _start,\n    end: _end,\n    attach: _attach,\n    values: _values,\n    groups: _groups,\n    fractions: []\n  };\n};\n\nif (typeof module === 'object') {\n  module.exports = {\n    aframeStats: window.aframeStats\n  };\n}\n","var registerComponent = require('../../core/component').registerComponent;\nvar constants = require('../../constants/');\nvar utils = require('../../utils/');\nvar bind = utils.bind;\n\nvar ENTER_VR_CLASS = 'a-enter-vr';\nvar ENTER_VR_BTN_CLASS = 'a-enter-vr-button';\nvar HIDDEN_CLASS = 'a-hidden';\nvar ORIENTATION_MODAL_CLASS = 'a-orientation-modal';\n\n/**\n * UI for entering VR mode.\n */\nmodule.exports.Component = registerComponent('vr-mode-ui', {\n  dependencies: ['canvas'],\n\n  schema: {\n    enabled: {default: true},\n    enterVRButton: {default: ''}\n  },\n\n  init: function () {\n    var self = this;\n    var sceneEl = this.el;\n\n    if (utils.getUrlParameter('ui') === 'false') { return; }\n\n    this.insideLoader = false;\n    this.enterVREl = null;\n    this.orientationModalEl = null;\n    this.bindMethods();\n\n    // Hide/show VR UI when entering/exiting VR mode.\n    sceneEl.addEventListener('enter-vr', this.updateEnterVRInterface);\n    sceneEl.addEventListener('exit-vr', this.updateEnterVRInterface);\n\n    window.addEventListener('message', function (event) {\n      if (event.data.type === 'loaderReady') {\n        self.insideLoader = true;\n        self.remove();\n      }\n    });\n\n    // Modal that tells the user to change orientation if in portrait.\n    window.addEventListener('orientationchange', this.toggleOrientationModalIfNeeded);\n  },\n\n  bindMethods: function () {\n    this.onEnterVRButtonClick = bind(this.onEnterVRButtonClick, this);\n    this.onModalClick = bind(this.onModalClick, this);\n    this.toggleOrientationModalIfNeeded = bind(this.toggleOrientationModalIfNeeded, this);\n    this.updateEnterVRInterface = bind(this.updateEnterVRInterface, this);\n  },\n\n  /**\n   * Exit VR when modal clicked.\n   */\n  onModalClick: function () {\n    this.el.exitVR();\n  },\n\n  /**\n   * Enter VR when modal clicked.\n   */\n  onEnterVRButtonClick: function () {\n    this.el.enterVR();\n  },\n\n  update: function () {\n    var data = this.data;\n    var sceneEl = this.el;\n\n    if (!data.enabled || this.insideLoader || utils.getUrlParameter('ui') === 'false') {\n      return this.remove();\n    }\n    if (this.enterVREl || this.orientationModalEl) { return; }\n\n    // Add UI if enabled and not already present.\n    if (data.enterVRButton) {\n      // Custom button.\n      this.enterVREl = document.querySelector(data.enterVRButton);\n      this.enterVREl.addEventListener('click', this.onEnterVRButtonClick);\n    } else {\n      this.enterVREl = createEnterVRButton(this.onEnterVRButtonClick);\n      sceneEl.appendChild(this.enterVREl);\n    }\n\n    this.orientationModalEl = createOrientationModal(this.onModalClick);\n    sceneEl.appendChild(this.orientationModalEl);\n\n    this.updateEnterVRInterface();\n  },\n\n  remove: function () {\n    [this.enterVREl, this.orientationModalEl].forEach(function (uiElement) {\n      if (uiElement && uiElement.parentNode) {\n        uiElement.parentNode.removeChild(uiElement);\n      }\n    });\n  },\n\n  updateEnterVRInterface: function () {\n    this.toggleEnterVRButtonIfNeeded();\n    this.toggleOrientationModalIfNeeded();\n  },\n\n  toggleEnterVRButtonIfNeeded: function () {\n    var sceneEl = this.el;\n    if (!this.enterVREl) { return; }\n    if (sceneEl.is('vr-mode')) {\n      this.enterVREl.classList.add(HIDDEN_CLASS);\n    } else {\n      this.enterVREl.classList.remove(HIDDEN_CLASS);\n    }\n  },\n\n  toggleOrientationModalIfNeeded: function () {\n    var sceneEl = this.el;\n    var orientationModalEl = this.orientationModalEl;\n    if (!orientationModalEl || !sceneEl.isMobile) { return; }\n    if (!utils.device.isLandscape() && sceneEl.is('vr-mode')) {\n      // Show if in VR mode on portrait.\n      orientationModalEl.classList.remove(HIDDEN_CLASS);\n    } else {\n      orientationModalEl.classList.add(HIDDEN_CLASS);\n    }\n  }\n});\n\n/**\n * Create a button that when clicked will enter into stereo-rendering mode for VR.\n *\n * Structure: <div><button></div>\n *\n * @param {function} onClick - click event handler\n * @returns {Element} Wrapper <div>.\n */\nfunction createEnterVRButton (onClick) {\n  var vrButton;\n  var wrapper;\n\n  // Create elements.\n  wrapper = document.createElement('div');\n  wrapper.classList.add(ENTER_VR_CLASS);\n  wrapper.setAttribute(constants.AFRAME_INJECTED, '');\n  vrButton = document.createElement('button');\n  vrButton.className = ENTER_VR_BTN_CLASS;\n  vrButton.setAttribute('title',\n    'Enter VR mode with a headset or fullscreen mode on a desktop. ' +\n    'Visit https://webvr.rocks or https://webvr.info for more information.');\n  vrButton.setAttribute(constants.AFRAME_INJECTED, '');\n\n  // Insert elements.\n  wrapper.appendChild(vrButton);\n  vrButton.addEventListener('click', function (evt) {\n    onClick();\n    evt.stopPropagation();\n  });\n  return wrapper;\n}\n\n/**\n * Creates a modal dialog to request the user to switch to landscape orientation.\n *\n * @param {function} onClick - click event handler\n * @returns {Element} Wrapper <div>.\n */\nfunction createOrientationModal (onClick) {\n  var modal = document.createElement('div');\n  modal.className = ORIENTATION_MODAL_CLASS;\n  modal.classList.add(HIDDEN_CLASS);\n  modal.setAttribute(constants.AFRAME_INJECTED, '');\n\n  var exit = document.createElement('button');\n  exit.setAttribute(constants.AFRAME_INJECTED, '');\n  exit.innerHTML = 'Exit VR';\n\n  // Exit VR on close.\n  exit.addEventListener('click', onClick);\n\n  modal.appendChild(exit);\n\n  return modal;\n}\n","require('./box.js');\nrequire('./circle.js');\nrequire('./cone.js');\nrequire('./cylinder.js');\nrequire('./dodecahedron.js');\nrequire('./icosahedron.js');\nrequire('./octahedron.js');\nrequire('./plane.js');\nrequire('./ring.js');\nrequire('./sphere.js');\nrequire('./tetrahedron.js');\nrequire('./torus.js');\nrequire('./torusKnot.js');\nrequire('./triangle.js');\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nregisterGeometry('box', {\n  schema: {\n    depth: {default: 1, min: 0},\n    height: {default: 1, min: 0},\n    width: {default: 1, min: 0},\n    segmentsHeight: {default: 1, min: 1, max: 20, type: 'int'},\n    segmentsWidth: {default: 1, min: 1, max: 20, type: 'int'},\n    segmentsDepth: {default: 1, min: 1, max: 20, type: 'int'}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.BoxGeometry(\n      data.width, data.height, data.depth,\n      data.segmentsWidth, data.segmentsHeight, data.segmentsDepth);\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nvar degToRad = THREE.Math.degToRad;\n\nregisterGeometry('circle', {\n  schema: {\n    radius: {default: 1, min: 0},\n    segments: {default: 32, min: 3, type: 'int'},\n    thetaLength: {default: 360, min: 0},\n    thetaStart: {default: 0}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.CircleGeometry(\n      data.radius, data.segments, degToRad(data.thetaStart), degToRad(data.thetaLength));\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nvar degToRad = THREE.Math.degToRad;\n\nregisterGeometry('cone', {\n  schema: {\n    height: {default: 1, min: 0},\n    openEnded: {default: false},\n    radiusBottom: {default: 1, min: 0},\n    radiusTop: {default: 0.01, min: 0},\n    segmentsHeight: {default: 18, min: 1, type: 'int'},\n    segmentsRadial: {default: 36, min: 3, type: 'int'},\n    thetaLength: {default: 360, min: 0},\n    thetaStart: {default: 0}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.CylinderGeometry(\n        data.radiusTop, data.radiusBottom, data.height, data.segmentsRadial,\n        data.segmentsHeight, data.openEnded, degToRad(data.thetaStart),\n        degToRad(data.thetaLength));\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nvar degToRad = THREE.Math.degToRad;\n\nregisterGeometry('cylinder', {\n  schema: {\n    height: {default: 1, min: 0},\n    openEnded: {default: false},\n    radius: {default: 1, min: 0},\n    segmentsHeight: {default: 18, min: 1, type: 'int'},\n    segmentsRadial: {default: 36, min: 3, type: 'int'},\n    thetaLength: {default: 360, min: 0},\n    thetaStart: {default: 0}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.CylinderGeometry(\n        data.radius, data.radius, data.height, data.segmentsRadial, data.segmentsHeight,\n        data.openEnded, degToRad(data.thetaStart), degToRad(data.thetaLength));\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nregisterGeometry('dodecahedron', {\n  schema: {\n    detail: {default: 0, min: 0, max: 5, type: 'int'},\n    radius: {default: 1, min: 0}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.DodecahedronGeometry(data.radius, data.detail);\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nregisterGeometry('icosahedron', {\n  schema: {\n    detail: {default: 0, min: 0, max: 5, type: 'int'},\n    radius: {default: 1, min: 0}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.IcosahedronGeometry(data.radius, data.detail);\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nregisterGeometry('octahedron', {\n  schema: {\n    detail: {default: 0, min: 0, max: 5, type: 'int'},\n    radius: {default: 1, min: 0}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.OctahedronGeometry(data.radius, data.detail);\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nregisterGeometry('plane', {\n  schema: {\n    height: {default: 1, min: 0},\n    width: {default: 1, min: 0},\n    segmentsHeight: {default: 1, min: 1, max: 20, type: 'int'},\n    segmentsWidth: {default: 1, min: 1, max: 20, type: 'int'}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.PlaneGeometry(data.width, data.height, data.segmentsWidth, data.segmentsHeight);\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nvar degToRad = THREE.Math.degToRad;\n\nregisterGeometry('ring', {\n  schema: {\n    radiusInner: {default: 0.8, min: 0},\n    radiusOuter: {default: 1.2, min: 0},\n    segmentsPhi: {default: 10, min: 1, type: 'int'},\n    segmentsTheta: {default: 32, min: 3, type: 'int'},\n    thetaLength: {default: 360, min: 0},\n    thetaStart: {default: 0}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.RingGeometry(\n        data.radiusInner, data.radiusOuter, data.segmentsTheta, data.segmentsPhi,\n        degToRad(data.thetaStart), degToRad(data.thetaLength));\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nvar degToRad = THREE.Math.degToRad;\n\nregisterGeometry('sphere', {\n  schema: {\n    radius: {default: 1, min: 0},\n    phiLength: {default: 360},\n    phiStart: {default: 0, min: 0},\n    thetaLength: {default: 180, min: 0},\n    thetaStart: {default: 0},\n    segmentsHeight: {default: 18, min: 2, type: 'int'},\n    segmentsWidth: {default: 36, min: 3, type: 'int'}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.SphereGeometry(\n      data.radius, data.segmentsWidth, data.segmentsHeight, degToRad(data.phiStart),\n      degToRad(data.phiLength), degToRad(data.thetaStart), degToRad(data.thetaLength));\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nregisterGeometry('tetrahedron', {\n  schema: {\n    detail: {default: 0, min: 0, max: 5, type: 'int'},\n    radius: {default: 1, min: 0}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.TetrahedronGeometry(data.radius, data.detail);\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nvar degToRad = THREE.Math.degToRad;\n\nregisterGeometry('torus', {\n  schema: {\n    arc: {default: 360},\n    radius: {default: 1, min: 0},\n    radiusTubular: {default: 0.2, min: 0},\n    segmentsRadial: {default: 36, min: 2, type: 'int'},\n    segmentsTubular: {default: 32, min: 3, type: 'int'}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.TorusGeometry(\n      data.radius, data.radiusTubular * 2, data.segmentsRadial, data.segmentsTubular,\n      degToRad(data.arc));\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nregisterGeometry('torusKnot', {\n  schema: {\n    p: {default: 2, min: 1},\n    q: {default: 3, min: 1},\n    radius: {default: 1, min: 0},\n    radiusTubular: {default: 0.2, min: 0},\n    segmentsRadial: {default: 8, min: 3, type: 'int'},\n    segmentsTubular: {default: 100, min: 3, type: 'int'}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.TorusKnotGeometry(\n      data.radius, data.radiusTubular * 2, data.segmentsTubular, data.segmentsRadial,\n      data.p, data.q);\n  }\n});\n","var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nvar quaternion = new THREE.Quaternion();\nvar rotateVector = new THREE.Vector3(0, 0, 1);\nvar uvMinVector = new THREE.Vector2();\nvar uvMaxVector = new THREE.Vector2();\nvar uvScaleVector = new THREE.Vector2();\n\nregisterGeometry('triangle', {\n  schema: {\n    vertexA: {type: 'vec3', default: {x: 0, y: 0.5, z: 0}},\n    vertexB: {type: 'vec3', default: {x: -0.5, y: -0.5, z: 0}},\n    vertexC: {type: 'vec3', default: {x: 0.5, y: -0.5, z: 0}}\n  },\n\n  init: function (data) {\n    var geometry;\n    var normal;\n    var triangle;\n    var uvA;\n    var uvB;\n    var uvC;\n\n    triangle = new THREE.Triangle();\n    triangle.a.set(data.vertexA.x, data.vertexA.y, data.vertexA.z);\n    triangle.b.set(data.vertexB.x, data.vertexB.y, data.vertexB.z);\n    triangle.c.set(data.vertexC.x, data.vertexC.y, data.vertexC.z);\n    normal = triangle.getNormal(new THREE.Vector3());\n\n    // Rotate the 3D triangle to be parallel to XY plane.\n    quaternion.setFromUnitVectors(normal, rotateVector);\n    uvA = triangle.a.clone().applyQuaternion(quaternion);\n    uvB = triangle.b.clone().applyQuaternion(quaternion);\n    uvC = triangle.c.clone().applyQuaternion(quaternion);\n\n    // Compute UVs.\n    // Normalize x/y values of UV so they are within 0 to 1.\n    uvMinVector.set(Math.min(uvA.x, uvB.x, uvC.x), Math.min(uvA.y, uvB.y, uvC.y));\n    uvMaxVector.set(Math.max(uvA.x, uvB.x, uvC.x), Math.max(uvA.y, uvB.y, uvC.y));\n    uvScaleVector.set(0, 0).subVectors(uvMaxVector, uvMinVector);\n    uvA = new THREE.Vector2().subVectors(uvA, uvMinVector).divide(uvScaleVector);\n    uvB = new THREE.Vector2().subVectors(uvB, uvMinVector).divide(uvScaleVector);\n    uvC = new THREE.Vector2().subVectors(uvC, uvMinVector).divide(uvScaleVector);\n\n    geometry = this.geometry = new THREE.Geometry();\n    geometry.vertices.push(triangle.a);\n    geometry.vertices.push(triangle.b);\n    geometry.vertices.push(triangle.c);\n    geometry.faces.push(new THREE.Face3(0, 1, 2, normal));\n    geometry.faceVertexUvs[0] = [[uvA, uvB, uvC]];\n  }\n});\n","require('./flat');\nrequire('./standard');\nrequire('./sdf');\nrequire('./msdf');\nrequire('./ios10hls');\n","var registerShader = require('../core/shader').registerShader;\nvar THREE = require('../lib/three');\nvar utils = require('../utils/');\n\n/**\n * Flat shader using THREE.MeshBasicMaterial.\n */\nmodule.exports.Shader = registerShader('flat', {\n  schema: {\n    color: {type: 'color'},\n    fog: {default: true},\n    height: {default: 256},\n    offset: {type: 'vec2', default: {x: 0, y: 0}},\n    repeat: {type: 'vec2', default: {x: 1, y: 1}},\n    src: {type: 'map'},\n    width: {default: 512},\n    wireframe: {default: false},\n    wireframeLinewidth: {default: 2}\n  },\n\n  /**\n   * Initializes the shader.\n   * Adds a reference from the scene to this entity as the camera.\n   */\n  init: function (data) {\n    this.rendererSystem = this.el.sceneEl.systems.renderer;\n    this.materialData = {color: new THREE.Color()};\n    this.textureSrc = null;\n    getMaterialData(data, this.materialData);\n    this.rendererSystem.applyColorCorrection(this.materialData.color);\n    this.material = new THREE.MeshBasicMaterial(this.materialData);\n    utils.material.updateMap(this, data);\n  },\n\n  update: function (data) {\n    this.updateMaterial(data);\n    utils.material.updateMap(this, data);\n  },\n\n  /**\n   * Updating existing material.\n   *\n   * @param {object} data - Material component data.\n   */\n  updateMaterial: function (data) {\n    var key;\n    getMaterialData(data, this.materialData);\n    this.rendererSystem.applyColorCorrection(this.materialData.color);\n    for (key in this.materialData) {\n      this.material[key] = this.materialData[key];\n    }\n  }\n});\n\n/**\n * Builds and normalize material data, normalizing stuff along the way.\n *\n * @param {object} data - Material data.\n * @param {object} materialData - Object to reuse.\n * @returns {object} Updated material data.\n */\nfunction getMaterialData (data, materialData) {\n  materialData.color.set(data.color);\n  materialData.fog = data.fog;\n  materialData.wireframe = data.wireframe;\n  materialData.wireframeLinewidth = data.wireframeLinewidth;\n  return materialData;\n}\n","var registerShader = require('../core/shader').registerShader;\nvar THREE = require('../lib/three');\nvar utils = require('../utils/');\n\nvar CubeLoader = new THREE.CubeTextureLoader();\nvar texturePromises = {};\n\n/**\n * Standard (physically-based) shader using THREE.MeshStandardMaterial.\n */\nmodule.exports.Shader = registerShader('standard', {\n  schema: {\n    ambientOcclusionMap: {type: 'map'},\n    ambientOcclusionMapIntensity: {default: 1},\n    ambientOcclusionTextureOffset: {type: 'vec2'},\n    ambientOcclusionTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n    color: {type: 'color'},\n\n    displacementMap: {type: 'map'},\n    displacementScale: {default: 1},\n    displacementBias: {default: 0.5},\n    displacementTextureOffset: {type: 'vec2'},\n    displacementTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n    emissive: {type: 'color', default: '#000'},\n    emissiveIntensity: {default: 1},\n    envMap: {default: ''},\n\n    fog: {default: true},\n    height: {default: 256},\n\n    metalness: {default: 0.0, min: 0.0, max: 1.0},\n    metalnessMap: {type: 'map'},\n    metalnessTextureOffset: {type: 'vec2'},\n    metalnessTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n    normalMap: {type: 'map'},\n    normalScale: {type: 'vec2', default: {x: 1, y: 1}},\n    normalTextureOffset: {type: 'vec2'},\n    normalTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n    offset: {type: 'vec2', default: {x: 0, y: 0}},\n    repeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n    roughness: {default: 0.5, min: 0.0, max: 1.0},\n    roughnessMap: {type: 'map'},\n    roughnessTextureOffset: {type: 'vec2'},\n    roughnessTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n    sphericalEnvMap: {type: 'map'},\n    src: {type: 'map'},\n    width: {default: 512},\n    wireframe: {default: false},\n    wireframeLinewidth: {default: 2}\n  },\n\n  /**\n   * Initializes the shader.\n   * Adds a reference from the scene to this entity as the camera.\n   */\n  init: function (data) {\n    this.rendererSystem = this.el.sceneEl.systems.renderer;\n    this.materialData = {color: new THREE.Color(), emissive: new THREE.Color()};\n    getMaterialData(data, this.materialData);\n    this.rendererSystem.applyColorCorrection(this.materialData.color);\n    this.rendererSystem.applyColorCorrection(this.materialData.emissive);\n    this.material = new THREE.MeshStandardMaterial(this.materialData);\n\n    utils.material.updateMap(this, data);\n    if (data.normalMap) { utils.material.updateDistortionMap('normal', this, data); }\n    if (data.displacementMap) { utils.material.updateDistortionMap('displacement', this, data); }\n    if (data.ambientOcclusionMap) { utils.material.updateDistortionMap('ambientOcclusion', this, data); }\n    if (data.metalnessMap) { utils.material.updateDistortionMap('metalness', this, data); }\n    if (data.roughnessMap) { utils.material.updateDistortionMap('roughness', this, data); }\n    this.updateEnvMap(data);\n  },\n\n  update: function (data) {\n    this.updateMaterial(data);\n    utils.material.updateMap(this, data);\n    if (data.normalMap) { utils.material.updateDistortionMap('normal', this, data); }\n    if (data.displacementMap) { utils.material.updateDistortionMap('displacement', this, data); }\n    if (data.ambientOcclusionMap) { utils.material.updateDistortionMap('ambientOcclusion', this, data); }\n    if (data.metalnessMap) { utils.material.updateDistortionMap('metalness', this, data); }\n    if (data.roughnessMap) { utils.material.updateDistortionMap('roughness', this, data); }\n    this.updateEnvMap(data);\n  },\n\n  /**\n   * Updating existing material.\n   *\n   * @param {object} data - Material component data.\n   * @returns {object} Material.\n   */\n  updateMaterial: function (data) {\n    var key;\n    var material = this.material;\n    getMaterialData(data, this.materialData);\n    this.rendererSystem.applyColorCorrection(this.materialData.color);\n    this.rendererSystem.applyColorCorrection(this.materialData.emissive);\n    for (key in this.materialData) {\n      material[key] = this.materialData[key];\n    }\n  },\n\n  /**\n   * Handle environment cubemap. Textures are cached in texturePromises.\n   */\n  updateEnvMap: function (data) {\n    var self = this;\n    var material = this.material;\n    var envMap = data.envMap;\n    var sphericalEnvMap = data.sphericalEnvMap;\n\n    // No envMap defined or already loading.\n    if ((!envMap && !sphericalEnvMap) || this.isLoadingEnvMap) {\n      material.envMap = null;\n      material.needsUpdate = true;\n      return;\n    }\n    this.isLoadingEnvMap = true;\n\n    // if a spherical env map is defined then use it.\n    if (sphericalEnvMap) {\n      this.el.sceneEl.systems.material.loadTexture(sphericalEnvMap, {src: sphericalEnvMap}, function textureLoaded (texture) {\n        self.isLoadingEnvMap = false;\n        texture.mapping = THREE.SphericalReflectionMapping;\n        material.envMap = texture;\n        utils.material.handleTextureEvents(self.el, texture);\n        material.needsUpdate = true;\n      });\n      return;\n    }\n\n    // Another material is already loading this texture. Wait on promise.\n    if (texturePromises[envMap]) {\n      texturePromises[envMap].then(function (cube) {\n        self.isLoadingEnvMap = false;\n        material.envMap = cube;\n        utils.material.handleTextureEvents(self.el, cube);\n        material.needsUpdate = true;\n      });\n      return;\n    }\n\n    // Material is first to load this texture. Load and resolve texture.\n    texturePromises[envMap] = new Promise(function (resolve) {\n      utils.srcLoader.validateCubemapSrc(envMap, function loadEnvMap (urls) {\n        CubeLoader.load(urls, function (cube) {\n          // Texture loaded.\n          self.isLoadingEnvMap = false;\n          material.envMap = cube;\n          utils.material.handleTextureEvents(self.el, cube);\n          resolve(cube);\n        });\n      });\n    });\n  }\n});\n\n/**\n * Builds and normalize material data, normalizing stuff along the way.\n *\n * @param {object} data - Material data.\n * @param {object} materialData - Object to use.\n * @returns {object} Updated materialData.\n */\nfunction getMaterialData (data, materialData) {\n  materialData.color.set(data.color);\n  materialData.emissive.set(data.emissive);\n  materialData.emissiveIntensity = data.emissiveIntensity;\n  materialData.fog = data.fog;\n  materialData.metalness = data.metalness;\n  materialData.roughness = data.roughness;\n  materialData.wireframe = data.wireframe;\n  materialData.wireframeLinewidth = data.wireframeLinewidth;\n\n  if (data.normalMap) { materialData.normalScale = data.normalScale; }\n\n  if (data.ambientOcclusionMap) {\n    materialData.aoMapIntensity = data.ambientOcclusionMapIntensity;\n  }\n\n  if (data.displacementMap) {\n    materialData.displacementScale = data.displacementScale;\n    materialData.displacementBias = data.displacementBias;\n  }\n\n  return materialData;\n}\n","var registerShader = require('../core/shader').registerShader;\n\n/**\n * Signed distance field.\n * Used by text component.\n */\nmodule.exports.Shader = registerShader('sdf', {\n  schema: {\n    alphaTest: {type: 'number', is: 'uniform', default: 0.5},\n    color: {type: 'color', is: 'uniform', default: 'white'},\n    map: {type: 'map', is: 'uniform'},\n    opacity: {type: 'number', is: 'uniform', default: 1.0}\n  },\n\n  raw: true,\n\n  vertexShader: [\n    '#ifdef AFRAME_enable_multiview',\n    '  #extension GL_OVR_multiview : require',\n    '  layout(num_views = 2) in;',\n    '#endif',\n    'attribute vec2 uv;',\n    'attribute vec3 position;',\n    'uniform mat4 projectionMatrix;',\n    'uniform mat4 modelViewMatrix;',\n    '#ifdef AFRAME_enable_multiview',\n    '  uniform mat4 modelViewMatrix2;',\n    '  uniform mat4 projectionMatrix2;',\n    '  #define modelViewMatrix (gl_ViewID_OVR==0u?modelViewMatrix:modelViewMatrix2)',\n    '  #define projectionMatrix (gl_ViewID_OVR==0u?projectionMatrix:projectionMatrix2)',\n    '#endif',\n    'varying vec2 vUV;',\n    'void main(void) {',\n    '  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);',\n    '  vUV = uv;',\n    '}'\n  ].join('\\n'),\n\n  fragmentShader: [\n    '#ifdef GL_OES_standard_derivatives',\n    '#extension GL_OES_standard_derivatives: enable',\n    '#endif',\n\n    'precision highp float;',\n    'uniform float alphaTest;',\n    'uniform float opacity;',\n    'uniform sampler2D map;',\n    'uniform vec3 color;',\n    'varying vec2 vUV;',\n\n    '#ifdef GL_OES_standard_derivatives',\n    '  float contour(float width, float value) {',\n    '    return smoothstep(0.5 - value, 0.5 + value, width);',\n    '  }',\n    '#else',\n    '  float aastep(float value, float afwidth) {',\n    '    return smoothstep(0.5 - afwidth, 0.5 + afwidth, value);',\n    '  }',\n    '#endif',\n\n    // FIXME: Experimentally determined constants.\n    '#define BIG_ENOUGH 0.001',\n    '#define MODIFIED_ALPHATEST (0.02 * isBigEnough / BIG_ENOUGH)',\n    '#define ALL_SMOOTH 0.4',\n    '#define ALL_ROUGH 0.02',\n    '#define DISCARD_ALPHA (alphaTest / (2.2 - 1.2 * ratio))',\n\n    'void main() {',\n       // When we have derivatives and can get texel size for supersampling.\n    '  #ifdef GL_OES_standard_derivatives',\n    '    vec2 uv = vUV;',\n    '    vec4 texColor = texture2D(map, uv);',\n    '    float dist = texColor.a;',\n    '    float width = fwidth(dist);',\n    '    float alpha = contour(dist, width);',\n    '    float dscale = 0.353505;',\n\n    '    vec2 duv = dscale * (dFdx(uv) + dFdy(uv));',\n    '    float isBigEnough = max(abs(duv.x), abs(duv.y));',\n\n         // Otherwise do weighted supersampling.\n         // FIXME: why this weighting?\n    '    if (isBigEnough <= BIG_ENOUGH) {',\n    '      vec4 box = vec4 (uv - duv, uv + duv);',\n    '      alpha = (alpha + 0.5 * (',\n    '        contour(texture2D(map, box.xy).a, width)',\n    '        + contour(texture2D(map, box.zw).a, width)',\n    '        + contour(texture2D(map, box.xw).a, width)',\n    '        + contour(texture2D(map, box.zy).a, width)',\n    '      )) / 3.0;',\n    '    }',\n\n         // Do modified alpha test.\n    '    if (alpha < alphaTest * MODIFIED_ALPHATEST) { discard; return; }',\n\n    '  #else',\n         // When we don't have derivatives, use approximations.\n    '    vec4 texColor = texture2D(map, vUV);',\n    '    float value = texColor.a;',\n         // FIXME: if we understood font pixel dimensions, this could probably be improved\n    '    float afwidth = (1.0 / 32.0) * (1.4142135623730951 / (2.0 * gl_FragCoord.w));',\n    '    float alpha = aastep(value, afwidth);',\n\n         // Use gl_FragCoord.w to guess when we should blend.\n         // FIXME: If we understood font pixel dimensions, this could probably be improved.\n    '    float ratio = (gl_FragCoord.w >= ALL_SMOOTH) ? 1.0 : (gl_FragCoord.w < ALL_ROUGH) ? 0.0 : (gl_FragCoord.w - ALL_ROUGH) / (ALL_SMOOTH - ALL_ROUGH);',\n    '    if (alpha < alphaTest) { if (ratio >= 1.0) { discard; return; } alpha = 0.0; }',\n    '    alpha = alpha * ratio + (1.0 - ratio) * value;',\n    '    if (ratio < 1.0 && alpha <= DISCARD_ALPHA) { discard; return; }',\n    '  #endif',\n\n    '  gl_FragColor = vec4(color, opacity * alpha);',\n    '}'\n  ].join('\\n')\n});\n","var registerShader = require('../core/shader').registerShader;\n\n/**\n * Multi-channel signed distance field.\n * Used by text component.\n */\nmodule.exports.Shader = registerShader('msdf', {\n  schema: {\n    alphaTest: {type: 'number', is: 'uniform', default: 0.5},\n    color: {type: 'color', is: 'uniform', default: 'white'},\n    map: {type: 'map', is: 'uniform'},\n    negate: {type: 'boolean', is: 'uniform', default: true},\n    opacity: {type: 'number', is: 'uniform', default: 1.0}\n  },\n\n  raw: true,\n\n  vertexShader: [\n    '#ifdef AFRAME_enable_multiview',\n    '  #extension GL_OVR_multiview : require',\n    '  layout(num_views = 2) in;',\n    '#endif',\n    'attribute vec2 uv;',\n    'attribute vec3 position;',\n    'uniform mat4 projectionMatrix;',\n    'uniform mat4 modelViewMatrix;',\n    '#ifdef AFRAME_enable_multiview',\n    '  uniform mat4 modelViewMatrix2;',\n    '  uniform mat4 projectionMatrix2;',\n    '  #define modelViewMatrix (gl_ViewID_OVR==0u?modelViewMatrix:modelViewMatrix2)',\n    '  #define projectionMatrix (gl_ViewID_OVR==0u?projectionMatrix:projectionMatrix2)',\n    '#endif',\n    'varying vec2 vUV;',\n    'void main(void) {',\n    '  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);',\n    '  vUV = uv;',\n    '}'\n  ].join('\\n'),\n\n  fragmentShader: [\n    '#ifdef GL_OES_standard_derivatives',\n    '#extension GL_OES_standard_derivatives: enable',\n    '#endif',\n\n    'precision highp float;',\n    'uniform bool negate;',\n    'uniform float alphaTest;',\n    'uniform float opacity;',\n    'uniform sampler2D map;',\n    'uniform vec3 color;',\n    'varying vec2 vUV;',\n\n    'float median(float r, float g, float b) {',\n    '  return max(min(r, g), min(max(r, g), b));',\n    '}',\n\n    // FIXME: Experimentally determined constants.\n    '#define BIG_ENOUGH 0.001',\n    '#define MODIFIED_ALPHATEST (0.02 * isBigEnough / BIG_ENOUGH)',\n\n    'void main() {',\n    '  vec3 tSample = texture2D(map, vUV).rgb;',\n    '  if (negate) { tSample = 1.0 - tSample; }',\n\n    '  float sigDist = median(tSample.r, tSample.g, tSample.b) - 0.5;',\n    '  float alpha = clamp(sigDist / fwidth(sigDist) + 0.5, 0.0, 1.0);',\n    '  float dscale = 0.353505;',\n    '  vec2 duv = dscale * (dFdx(vUV) + dFdy(vUV));',\n    '  float isBigEnough = max(abs(duv.x), abs(duv.y));',\n\n    '  // Do modified alpha test.',\n    '  if (alpha < alphaTest * MODIFIED_ALPHATEST) { discard; return; }',\n    '  gl_FragColor = vec4(color.xyz, alpha * opacity);',\n    '}'\n  ].join('\\n')\n});\n","var registerShader = require('../core/shader').registerShader;\n\n/**\n * Custom shader for iOS 10 HTTP Live Streaming (HLS).\n * For more information on HLS, see https://datatracker.ietf.org/doc/draft-pantos-http-live-streaming/\n */\nmodule.exports.Shader = registerShader('ios10hls', {\n  schema: {\n    src: {type: 'map', is: 'uniform'},\n    opacity: {type: 'number', is: 'uniform', default: 1}\n  },\n\n  vertexShader: [\n    'varying vec2 vUV;',\n    'void main(void) {',\n    '  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);',\n    '  vUV = uv;',\n    '}'\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform sampler2D src;',\n    'uniform float opacity;',\n    'varying vec2 vUV;',\n    'void main() {',\n    '  vec2 offset = vec2(0, 0);',\n    '  vec2 repeat = vec2(1, 1);',\n    '  vec4 color = texture2D(src, vec2(vUV.x / repeat.x + offset.x, (1.0 - vUV.y) / repeat.y + offset.y)).bgra;',\n    '  gl_FragColor = vec4(color.rgb, opacity);',\n    '}'\n  ].join('\\n')\n});\n\n","require('./camera');\nrequire('./geometry');\nrequire('./gltf-model');\nrequire('./light');\nrequire('./material');\nrequire('./renderer');\nrequire('./shadow');\n","var constants = require('../constants/');\nvar registerSystem = require('../core/system').registerSystem;\n\nvar DEFAULT_CAMERA_ATTR = 'data-aframe-default-camera';\n\n/**\n * Camera system. Manages which camera is active among multiple cameras in scene.\n *\n * @member {object} activeCameraEl - Active camera entity.\n */\nmodule.exports.System = registerSystem('camera', {\n  init: function () {\n    this.activeCameraEl = null;\n\n    this.render = this.render.bind(this);\n    this.unwrapRender = this.unwrapRender.bind(this);\n    this.wrapRender = this.wrapRender.bind(this);\n\n    this.initialCameraFound = false;\n    this.numUserCameras = 0;\n    this.numUserCamerasChecked = 0;\n    this.setupInitialCamera();\n  },\n\n  /**\n   * Setup initial camera, either searching for camera or\n   * creating a default camera if user has not added one during the initial scene traversal.\n   * We want sceneEl.camera to be ready, set, and initialized before the rest of the scene\n   * loads.\n   *\n   * Default camera offset height is at average eye level (~1.6m).\n   */\n  setupInitialCamera: function () {\n    var cameraEls;\n    var i;\n    var sceneEl = this.sceneEl;\n    var self = this;\n\n    // Camera already defined or the one defined it is an spectator one.\n    if (sceneEl.camera && !sceneEl.camera.el.getAttribute('camera').spectator) {\n      sceneEl.emit('cameraready', {cameraEl: sceneEl.camera.el});\n      return;\n    }\n\n    // Search for initial user-defined camera.\n    cameraEls = sceneEl.querySelectorAll('a-camera, [camera]');\n\n    // No user cameras, create default one.\n    if (!cameraEls.length) {\n      this.createDefaultCamera();\n      return;\n    }\n\n    this.numUserCameras = cameraEls.length;\n    for (i = 0; i < cameraEls.length; i++) {\n      cameraEls[i].addEventListener('object3dset', function (evt) {\n        if (evt.detail.type !== 'camera') { return; }\n        self.checkUserCamera(this);\n      });\n\n      // Load camera and wait for camera to initialize.\n      if (cameraEls[i].isNode) {\n        cameraEls[i].load();\n      } else {\n        cameraEls[i].addEventListener('nodeready', function () {\n          this.load();\n        });\n      }\n    }\n  },\n\n  /**\n   * Check if a user-defined camera entity is appropriate to be initial camera.\n   * (active + non-spectator).\n   *\n   * Keep track of the number of cameras we checked and whether we found one.\n   */\n  checkUserCamera: function (cameraEl) {\n    var cameraData;\n    var sceneEl = this.el.sceneEl;\n    this.numUserCamerasChecked++;\n\n    // Already found one.\n    if (this.initialCameraFound) { return; }\n\n    // Check if camera is appropriate for being the initial camera.\n    cameraData = cameraEl.getAttribute('camera');\n    if (!cameraData.active || cameraData.spectator) {\n      // No user cameras eligible, create default camera.\n      if (this.numUserCamerasChecked === this.numUserCameras) {\n        this.createDefaultCamera();\n      }\n      return;\n    }\n\n    this.initialCameraFound = true;\n    sceneEl.camera = cameraEl.getObject3D('camera');\n    sceneEl.emit('cameraready', {cameraEl: cameraEl});\n  },\n\n  createDefaultCamera: function () {\n    var defaultCameraEl;\n    var sceneEl = this.sceneEl;\n\n    // Set up default camera.\n    defaultCameraEl = document.createElement('a-entity');\n    defaultCameraEl.setAttribute('camera', {active: true});\n    defaultCameraEl.setAttribute('position', {\n      x: 0,\n      y: constants.DEFAULT_CAMERA_HEIGHT,\n      z: 0\n    });\n    defaultCameraEl.setAttribute('wasd-controls', '');\n    defaultCameraEl.setAttribute('look-controls', '');\n    defaultCameraEl.setAttribute(constants.AFRAME_INJECTED, '');\n\n    defaultCameraEl.addEventListener('object3dset', function (evt) {\n      if (evt.detail.type !== 'camera') { return; }\n      sceneEl.camera = evt.detail.object;\n      sceneEl.emit('cameraready', {cameraEl: defaultCameraEl});\n    });\n\n    sceneEl.appendChild(defaultCameraEl);\n  },\n\n  /**\n   * Set a different active camera.\n   * When we choose a (sort of) random scene camera as the replacement, set its `active` to\n   * true. The camera component will call `setActiveCamera` and handle passing the torch to\n   * the new camera.\n   */\n  disableActiveCamera: function () {\n    var cameraEls;\n    var newActiveCameraEl;\n    cameraEls = this.sceneEl.querySelectorAll('[camera]');\n    newActiveCameraEl = cameraEls[cameraEls.length - 1];\n    newActiveCameraEl.setAttribute('camera', 'active', true);\n  },\n\n  /**\n   * Set active camera to be used by renderer.\n   * Removes the default camera (if present).\n   * Disables all other cameras in the scene.\n   *\n   * @param {Element} newCameraEl - Entity with camera component.\n   */\n  setActiveCamera: function (newCameraEl) {\n    var cameraEl;\n    var cameraEls;\n    var i;\n    var newCamera;\n    var previousCamera = this.activeCameraEl;\n    var sceneEl = this.sceneEl;\n\n    // Same camera.\n    newCamera = newCameraEl.getObject3D('camera');\n    if (!newCamera || newCameraEl === this.activeCameraEl) { return; }\n\n    // Grab the default camera.\n    var defaultCameraWrapper = sceneEl.querySelector('[' + DEFAULT_CAMERA_ATTR + ']');\n    var defaultCameraEl = defaultCameraWrapper &&\n                          defaultCameraWrapper.querySelector('[camera]');\n\n    // Remove default camera if new camera is not the default camera.\n    if (newCameraEl !== defaultCameraEl) { removeDefaultCamera(sceneEl); }\n\n    // Make new camera active.\n    this.activeCameraEl = newCameraEl;\n    this.activeCameraEl.play();\n    sceneEl.camera = newCamera;\n\n    // Disable current camera\n    if (previousCamera) {\n      previousCamera.setAttribute('camera', 'active', false);\n    }\n\n    // Disable other cameras in the scene\n    cameraEls = sceneEl.querySelectorAll('[camera]');\n    for (i = 0; i < cameraEls.length; i++) {\n      cameraEl = cameraEls[i];\n      if (!cameraEl.isEntity || newCameraEl === cameraEl) { continue; }\n      cameraEl.setAttribute('camera', 'active', false);\n      cameraEl.pause();\n    }\n    sceneEl.emit('camera-set-active', {cameraEl: newCameraEl});\n  },\n\n  /**\n   * Set spectator camera to render the scene on a 2D display.\n   *\n   * @param {Element} newCameraEl - Entity with camera component.\n   */\n  setSpectatorCamera: function (newCameraEl) {\n    var newCamera;\n    var previousCamera = this.spectatorCameraEl;\n    var sceneEl = this.sceneEl;\n    var spectatorCameraEl;\n\n    // Same camera.\n    newCamera = newCameraEl.getObject3D('camera');\n    if (!newCamera || newCameraEl === this.spectatorCameraEl) { return; }\n\n    // Disable current camera\n    if (previousCamera) {\n      previousCamera.setAttribute('camera', 'spectator', false);\n    }\n\n    spectatorCameraEl = this.spectatorCameraEl = newCameraEl;\n\n    sceneEl.addEventListener('enter-vr', this.wrapRender);\n    sceneEl.addEventListener('exit-vr', this.unwrapRender);\n\n    spectatorCameraEl.setAttribute('camera', 'active', false);\n    spectatorCameraEl.play();\n\n    sceneEl.emit('camera-set-spectator', {cameraEl: newCameraEl});\n  },\n\n  /**\n   * Disables current spectator camera.\n   */\n  disableSpectatorCamera: function () {\n    this.spectatorCameraEl = undefined;\n  },\n\n  /**\n   * Wrap the render method of the renderer to render\n   * the spectator camera after vrDisplay.submitFrame.\n   */\n  wrapRender: function () {\n    if (!this.spectatorCameraEl) { return; }\n    this.originalRender = this.sceneEl.renderer.render;\n    this.sceneEl.renderer.render = this.render;\n  },\n\n  unwrapRender: function () {\n    if (!this.originalRender) { return; }\n    this.sceneEl.renderer.render = this.originalRender;\n    this.originalRender = undefined;\n  },\n\n  render: function (scene, camera) {\n    var isVREnabled;\n    var sceneEl = this.sceneEl;\n    var spectatorCamera;\n\n    isVREnabled = sceneEl.renderer.vr.enabled;\n    this.originalRender.call(sceneEl.renderer, scene, camera);\n    if (!this.spectatorCameraEl || sceneEl.isMobile || !isVREnabled) { return; }\n    spectatorCamera = this.spectatorCameraEl.components.camera.camera;\n    sceneEl.renderer.vr.enabled = false;\n    this.originalRender.call(sceneEl.renderer, scene, spectatorCamera);\n    sceneEl.renderer.vr.enabled = isVREnabled;\n  }\n});\n\n/**\n * Remove injected default camera from scene, if present.\n *\n * @param {Element} sceneEl\n */\nfunction removeDefaultCamera (sceneEl) {\n  var defaultCamera;\n  var camera = sceneEl.camera;\n  if (!camera) { return; }\n\n  // Remove default camera if present.\n  defaultCamera = sceneEl.querySelector('[' + DEFAULT_CAMERA_ATTR + ']');\n  if (!defaultCamera) { return; }\n  sceneEl.removeChild(defaultCamera);\n}\n","var geometries = require('../core/geometry').geometries;\nvar registerSystem = require('../core/system').registerSystem;\nvar THREE = require('../lib/three');\n\n/**\n * System for geometry component.\n * Handle geometry caching.\n *\n * @member {object} cache - Mapping of stringified component data to THREE.Geometry objects.\n * @member {object} cacheCount - Keep track of number of entities using a geometry to\n *         know whether to dispose on removal.\n */\nmodule.exports.System = registerSystem('geometry', {\n  init: function () {\n    this.cache = {};\n    this.cacheCount = {};\n  },\n\n  /**\n   * Reset cache. Mainly for testing.\n   */\n  clearCache: function () {\n    this.cache = {};\n    this.cacheCount = {};\n  },\n\n  /**\n   * Attempt to retrieve from cache.\n   *\n   * @returns {Object|null} A geometry if it exists, else null.\n   */\n  getOrCreateGeometry: function (data) {\n    var cache = this.cache;\n    var cachedGeometry;\n    var hash;\n\n    // Skip all caching logic.\n    if (data.skipCache) { return createGeometry(data); }\n\n    // Try to retrieve from cache first.\n    hash = this.hash(data);\n    cachedGeometry = cache[hash];\n    incrementCacheCount(this.cacheCount, hash);\n\n    if (cachedGeometry) { return cachedGeometry; }\n\n    // Create geometry.\n    cachedGeometry = createGeometry(data);\n\n    // Cache and return geometry.\n    cache[hash] = cachedGeometry;\n    return cachedGeometry;\n  },\n\n  /**\n   * Let system know that an entity is no longer using a geometry.\n   */\n  unuseGeometry: function (data) {\n    var cache = this.cache;\n    var cacheCount = this.cacheCount;\n    var geometry;\n    var hash;\n\n    if (data.skipCache) { return; }\n\n    hash = this.hash(data);\n\n    if (!cache[hash]) { return; }\n\n    decrementCacheCount(cacheCount, hash);\n\n    // Another entity is still using this geometry. No need to do anything.\n    if (cacheCount[hash] > 0) { return; }\n\n    // No more entities are using this geometry. Dispose.\n    geometry = cache[hash];\n    geometry.dispose();\n    delete cache[hash];\n    delete cacheCount[hash];\n  },\n\n  /**\n   * Use JSON.stringify to turn component data into hash.\n   * Should be deterministic within a single browser engine.\n   * If not, then look into json-stable-stringify.\n   */\n  hash: function (data) {\n    return JSON.stringify(data);\n  }\n});\n\n/**\n * Create geometry using component data.\n *\n * @param {object} data - Component data.\n * @returns {object} Geometry.\n */\nfunction createGeometry (data) {\n  var geometryType = data.primitive;\n  var GeometryClass = geometries[geometryType] && geometries[geometryType].Geometry;\n  var geometryInstance = new GeometryClass();\n\n  if (!GeometryClass) { throw new Error('Unknown geometry `' + geometryType + '`'); }\n\n  geometryInstance.init(data);\n  return toBufferGeometry(geometryInstance.geometry, data.buffer);\n}\n\n/**\n * Decreate count of entity using a geometry.\n */\nfunction decrementCacheCount (cacheCount, hash) {\n  cacheCount[hash]--;\n}\n\n/**\n * Increase count of entity using a geometry.\n */\nfunction incrementCacheCount (cacheCount, hash) {\n  cacheCount[hash] = cacheCount[hash] === undefined ? 1 : cacheCount[hash] + 1;\n}\n\n/**\n * Transform geometry to BufferGeometry if `doBuffer`.\n *\n * @param {object} geometry\n * @param {boolean} doBuffer\n * @returns {object} Geometry.\n */\nfunction toBufferGeometry (geometry, doBuffer) {\n  var bufferGeometry;\n  if (!doBuffer) { return geometry; }\n\n  bufferGeometry = new THREE.BufferGeometry().fromGeometry(geometry);\n  bufferGeometry.metadata = {type: geometry.type, parameters: geometry.parameters || {}};\n  geometry.dispose();  // Dispose no longer needed non-buffer geometry.\n  return bufferGeometry;\n}\n","var registerSystem = require('../core/system').registerSystem;\nvar THREE = require('../lib/three');\n\n/**\n * glTF model system.\n *\n * Configures glTF loading options. Models using glTF compression require that a Draco decoder be\n * provided externally.\n *\n * @param {string} dracoDecoderPath - Base path from which to load Draco decoder library.\n */\nmodule.exports.System = registerSystem('gltf-model', {\n  schema: {\n    dracoDecoderPath: {default: ''}\n  },\n\n  init: function () {\n    var path = this.data.dracoDecoderPath;\n    THREE.DRACOLoader.setDecoderPath(path);\n    this.dracoLoader = path ? new THREE.DRACOLoader() : null;\n  },\n\n  getDRACOLoader: function () {\n    return this.dracoLoader;\n  }\n});\n","var registerSystem = require('../core/system').registerSystem;\nvar bind = require('../utils/bind');\nvar constants = require('../constants/');\n\nvar DEFAULT_LIGHT_ATTR = 'data-aframe-default-light';\n\n/**\n * Light system.\n *\n * Prescribes default lighting if not specified (one ambient, one directional).\n * Removes default lighting from the scene when a new light is added.\n *\n * @param {bool} defaultLights - Whether default lighting are defined.\n * @param {bool} userDefinedLights - Whether user lighting is defined.\n */\nmodule.exports.System = registerSystem('light', {\n  schema: {\n    defaultLightsEnabled: {default: true}\n  },\n\n  init: function () {\n    this.defaultLights = false;\n    this.userDefinedLights = false;\n    // Wait for all entities to fully load before checking for existence of lights.\n    // Since entities wait for <a-assets> to load, any lights attaching to the scene\n    // will do so asynchronously.\n    this.sceneEl.addEventListener('loaded', bind(this.setupDefaultLights, this));\n  },\n\n  /**\n   * Notify scene that light has been added and to remove the default.\n   *\n   * @param {object} el - element holding the light component.\n   */\n  registerLight: function (el) {\n    if (!el.hasAttribute(DEFAULT_LIGHT_ATTR)) {\n      // User added a light, remove default lights through DOM.\n      this.removeDefaultLights();\n      this.userDefinedLights = true;\n    }\n  },\n\n  removeDefaultLights: function () {\n    var defaultLights;\n    var sceneEl = this.sceneEl;\n\n    if (!this.defaultLights) { return; }\n    defaultLights = document.querySelectorAll('[' + DEFAULT_LIGHT_ATTR + ']');\n    for (var i = 0; i < defaultLights.length; i++) {\n      sceneEl.removeChild(defaultLights[i]);\n    }\n    this.defaultLights = false;\n  },\n\n  /**\n   * Prescibe default lights to the scene.\n   * Does so by injecting markup such that this state is not invisible.\n   * These lights are removed if the user adds any lights.\n   */\n  setupDefaultLights: function () {\n    var sceneEl = this.sceneEl;\n    var ambientLight;\n    var directionalLight;\n\n    if (this.userDefinedLights || this.defaultLights || !this.data.defaultLightsEnabled) {\n      return;\n    }\n\n    ambientLight = document.createElement('a-entity');\n    ambientLight.setAttribute('light', {color: '#BBB', type: 'ambient'});\n    ambientLight.setAttribute(DEFAULT_LIGHT_ATTR, '');\n    ambientLight.setAttribute(constants.AFRAME_INJECTED, '');\n    sceneEl.appendChild(ambientLight);\n\n    directionalLight = document.createElement('a-entity');\n    directionalLight.setAttribute('light', {color: '#FFF', intensity: 0.6, castShadow: true});\n    directionalLight.setAttribute('position', {x: -0.5, y: 1, z: 1});\n    directionalLight.setAttribute(DEFAULT_LIGHT_ATTR, '');\n    directionalLight.setAttribute(constants.AFRAME_INJECTED, '');\n    sceneEl.appendChild(directionalLight);\n\n    this.defaultLights = true;\n  }\n});\n","var registerSystem = require('../core/system').registerSystem;\nvar THREE = require('../lib/three');\nvar utils = require('../utils/');\nvar isHLS = require('../utils/material').isHLS;\n\nvar bind = utils.bind;\nvar debug = utils.debug;\nvar error = debug('components:texture:error');\nvar TextureLoader = new THREE.TextureLoader();\nvar warn = debug('components:texture:warn');\n\nTextureLoader.setCrossOrigin('anonymous');\n\n/**\n * System for material component.\n * Handle material registration, updates (for fog), and texture caching.\n *\n * @member {object} materials - Registered materials.\n * @member {object} textureCounts - Number of times each texture is used. Tracked\n *         separately from textureCache, because the cache (1) is populated in\n *         multiple places, and (2) may be cleared at any time.\n * @member {object} textureCache - Texture cache for:\n *   - Images: textureCache has mapping of src -> repeat -> cached three.js texture.\n *   - Videos: textureCache has mapping of videoElement -> cached three.js texture.\n */\nmodule.exports.System = registerSystem('material', {\n  init: function () {\n    this.materials = {};\n    this.textureCounts = {};\n    this.textureCache = {};\n\n    this.sceneEl.addEventListener(\n      'materialtextureloaded',\n      bind(this.onMaterialTextureLoaded, this)\n    );\n  },\n\n  clearTextureCache: function () {\n    this.textureCache = {};\n  },\n\n  /**\n   * Determine whether `src` is a image or video. Then try to load the asset, then call back.\n   *\n   * @param {string, or element} src - Texture URL or element.\n   * @param {string} data - Relevant texture data used for caching.\n   * @param {function} cb - Callback to pass texture to.\n   */\n  loadTexture: function (src, data, cb) {\n    var self = this;\n\n    // Canvas.\n    if (src.tagName === 'CANVAS') {\n      this.loadCanvas(src, data, cb);\n      return;\n    }\n\n    // Video element.\n    if (src.tagName === 'VIDEO') {\n      if (!src.src && !src.srcObject && !src.childElementCount) {\n        warn('Video element was defined with neither `source` elements nor `src` / `srcObject` attributes.');\n      }\n      this.loadVideo(src, data, cb);\n      return;\n    }\n\n    utils.srcLoader.validateSrc(src, loadImageCb, loadVideoCb);\n    function loadImageCb (src) { self.loadImage(src, data, cb); }\n    function loadVideoCb (src) { self.loadVideo(src, data, cb); }\n  },\n\n  /**\n   * High-level function for loading image textures (THREE.Texture).\n   *\n   * @param {Element|string} src - Texture source.\n   * @param {object} data - Texture data.\n   * @param {function} cb - Callback to pass texture to.\n   */\n  loadImage: function (src, data, handleImageTextureLoaded) {\n    var hash = this.hash(data);\n    var textureCache = this.textureCache;\n\n    // Texture already being loaded or already loaded. Wait on promise.\n    if (textureCache[hash]) {\n      textureCache[hash].then(handleImageTextureLoaded);\n      return;\n    }\n\n    // Texture not yet being loaded. Start loading it.\n    textureCache[hash] = loadImageTexture(src, data);\n    textureCache[hash].then(handleImageTextureLoaded);\n  },\n\n  /**\n   * High-level function for loading canvas textures (THREE.Texture).\n   *\n   * @param {Element|string} src - Texture source.\n   * @param {object} data - Texture data.\n   * @param {function} cb - Callback to pass texture to.\n   */\n  loadCanvas: function (src, data, cb) {\n    var texture;\n    texture = new THREE.CanvasTexture(src);\n    setTextureProperties(texture, data);\n    cb(texture);\n  },\n\n    /**\n   * Load video texture (THREE.VideoTexture).\n   * Which is just an image texture that RAFs + needsUpdate.\n   * Note that creating a video texture is synchronous unlike loading an image texture.\n   * Made asynchronous to be consistent with image textures.\n   *\n   * @param {Element|string} src - Texture source.\n   * @param {object} data - Texture data.\n   * @param {function} cb - Callback to pass texture to.\n   */\n  loadVideo: function (src, data, cb) {\n    var hash;\n    var texture;\n    var textureCache = this.textureCache;\n    var videoEl;\n    var videoTextureResult;\n\n    function handleVideoTextureLoaded (result) {\n      result.texture.needsUpdate = true;\n      cb(result.texture, result.videoEl);\n    }\n\n    // Video element provided.\n    if (typeof src !== 'string') {\n      // Check cache before creating texture.\n      videoEl = src;\n      hash = this.hashVideo(data, videoEl);\n      if (textureCache[hash]) {\n        textureCache[hash].then(handleVideoTextureLoaded);\n        return;\n      }\n      // If not in cache, fix up the attributes then start to create the texture.\n      fixVideoAttributes(videoEl);\n    }\n\n    // Only URL provided. Use video element to create texture.\n    videoEl = videoEl || createVideoEl(src, data.width, data.height);\n\n    // Generated video element already cached. Use that.\n    hash = this.hashVideo(data, videoEl);\n    if (textureCache[hash]) {\n      textureCache[hash].then(handleVideoTextureLoaded);\n      return;\n    }\n\n    // Create new video texture.\n    texture = new THREE.VideoTexture(videoEl);\n    texture.minFilter = THREE.LinearFilter;\n    setTextureProperties(texture, data);\n\n    // If iOS and video is HLS, do some hacks.\n    if (this.sceneEl.isIOS &&\n        isHLS(videoEl.src || videoEl.getAttribute('src'),\n              videoEl.type || videoEl.getAttribute('type'))) {\n      // Actually BGRA. Tell shader to correct later.\n      texture.format = THREE.RGBAFormat;\n      texture.needsCorrectionBGRA = true;\n      // Apparently needed for HLS. Tell shader to correct later.\n      texture.flipY = false;\n      texture.needsCorrectionFlipY = true;\n    }\n\n    // Cache as promise to be consistent with image texture caching.\n    videoTextureResult = {texture: texture, videoEl: videoEl};\n    textureCache[hash] = Promise.resolve(videoTextureResult);\n    handleVideoTextureLoaded(videoTextureResult);\n  },\n\n  /**\n   * Create a hash of the material properties for texture cache key.\n   */\n  hash: function (data) {\n    if (data.src.tagName) {\n      // Since `data.src` can be an element, parse out the string if necessary for the hash.\n      data = utils.extendDeep({}, data);\n      data.src = data.src.src;\n    }\n    return JSON.stringify(data);\n  },\n\n  hashVideo: function (data, videoEl) {\n    return calculateVideoCacheHash(data, videoEl);\n  },\n\n  /**\n   * Keep track of material in case an update trigger is needed (e.g., fog).\n   *\n   * @param {object} material\n   */\n  registerMaterial: function (material) {\n    this.materials[material.uuid] = material;\n  },\n\n  /**\n   * Stop tracking material, and dispose of any textures not being used by\n   * another material component.\n   *\n   * @param {object} material\n   */\n  unregisterMaterial: function (material) {\n    delete this.materials[material.uuid];\n\n    // If any textures on this material are no longer in use, dispose of them.\n    var textureCounts = this.textureCounts;\n    Object.keys(material)\n      .filter(function (propName) {\n        return material[propName] && material[propName].isTexture;\n      })\n      .forEach(function (mapName) {\n        textureCounts[material[mapName].uuid]--;\n        if (textureCounts[material[mapName].uuid] <= 0) {\n          material[mapName].dispose();\n        }\n      });\n  },\n\n  /**\n   * Trigger update to all registered materials.\n   */\n  updateMaterials: function (material) {\n    var materials = this.materials;\n    Object.keys(materials).forEach(function (uuid) {\n      materials[uuid].needsUpdate = true;\n    });\n  },\n\n  /**\n   * Track textures used by material components, so that they can be safely\n   * disposed when no longer in use. Textures must be registered here, and not\n   * through registerMaterial(), because textures may not be attached at the\n   * time the material is registered.\n   *\n   * @param {Event} e\n   */\n  onMaterialTextureLoaded: function (e) {\n    if (!this.textureCounts[e.detail.texture.uuid]) {\n      this.textureCounts[e.detail.texture.uuid] = 0;\n    }\n    this.textureCounts[e.detail.texture.uuid]++;\n  }\n});\n\n/**\n * Calculates consistent hash from a video element using its attributes.\n * If the video element has an ID, use that.\n * Else build a hash that looks like `src:myvideo.mp4;height:200;width:400;`.\n *\n * @param data {object} - Texture data such as repeat.\n * @param videoEl {Element} - Video element.\n * @returns {string}\n */\nfunction calculateVideoCacheHash (data, videoEl) {\n  var i;\n  var id = videoEl.getAttribute('id');\n  var hash;\n  var videoAttributes;\n\n  if (id) { return id; }\n\n  // Calculate hash using sorted video attributes.\n  hash = '';\n  videoAttributes = data || {};\n  for (i = 0; i < videoEl.attributes.length; i++) {\n    videoAttributes[videoEl.attributes[i].name] = videoEl.attributes[i].value;\n  }\n  Object.keys(videoAttributes).sort().forEach(function (name) {\n    hash += name + ':' + videoAttributes[name] + ';';\n  });\n\n  return hash;\n}\n\n/**\n * Load image texture.\n *\n * @private\n * @param {string|object} src - An <img> element or url to an image file.\n * @param {object} data - Data to set texture properties like `repeat`.\n * @returns {Promise} Resolves once texture is loaded.\n */\nfunction loadImageTexture (src, data) {\n  return new Promise(doLoadImageTexture);\n\n  function doLoadImageTexture (resolve, reject) {\n    var isEl = typeof src !== 'string';\n\n    function resolveTexture (texture) {\n      setTextureProperties(texture, data);\n      texture.needsUpdate = true;\n      resolve(texture);\n    }\n\n    // Create texture from an element.\n    if (isEl) {\n      resolveTexture(new THREE.Texture(src));\n      return;\n    }\n\n    // Request and load texture from src string. THREE will create underlying element.\n    // Use THREE.TextureLoader (src, onLoad, onProgress, onError) to load texture.\n    TextureLoader.load(\n      src,\n      resolveTexture,\n      function () { /* no-op */ },\n      function (xhr) {\n        error('`$s` could not be fetched (Error code: %s; Response: %s)', xhr.status,\n              xhr.statusText);\n      }\n    );\n  }\n}\n\n/**\n * Set texture properties such as repeat and offset.\n *\n * @param {object} data - With keys like `repeat`.\n */\nfunction setTextureProperties (texture, data) {\n  var offset = data.offset || {x: 0, y: 0};\n  var repeat = data.repeat || {x: 1, y: 1};\n  var npot = data.npot || false;\n\n  // To support NPOT textures, wrap must be ClampToEdge (not Repeat),\n  // and filters must not use mipmaps (i.e. Nearest or Linear).\n  if (npot) {\n    texture.wrapS = THREE.ClampToEdgeWrapping;\n    texture.wrapT = THREE.ClampToEdgeWrapping;\n    texture.magFilter = THREE.LinearFilter;\n    texture.minFilter = THREE.LinearFilter;\n  }\n\n  // Don't bother setting repeat if it is 1/1. Power-of-two is required to repeat.\n  if (repeat.x !== 1 || repeat.y !== 1) {\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat.set(repeat.x, repeat.y);\n  }\n  // Don't bother setting offset if it is 0/0.\n  if (offset.x !== 0 || offset.y !== 0) {\n    texture.offset.set(offset.x, offset.y);\n  }\n}\n\n/**\n * Create video element to be used as a texture.\n *\n * @param {string} src - Url to a video file.\n * @param {number} width - Width of the video.\n * @param {number} height - Height of the video.\n * @returns {Element} Video element.\n */\nfunction createVideoEl (src, width, height) {\n  var videoEl = document.createElement('video');\n  videoEl.width = width;\n  videoEl.height = height;\n  // Support inline videos for iOS webviews.\n  videoEl.setAttribute('playsinline', '');\n  videoEl.setAttribute('webkit-playsinline', '');\n  videoEl.autoplay = true;\n  videoEl.loop = true;\n  videoEl.crossOrigin = 'anonymous';\n  videoEl.addEventListener('error', function () {\n    warn('`$s` is not a valid video', src);\n  }, true);\n  videoEl.src = src;\n  return videoEl;\n}\n\n/**\n * Fixes a video element's attributes to prevent developers from accidentally passing the\n * wrong attribute values to commonly misused video attributes.\n *\n * <video> does not treat `autoplay`, `controls`, `crossorigin`, `loop`, and `preload` as\n * as booleans. Existence of those attributes will mean truthy.\n *\n * For example, translates <video loop=\"false\"> to <video>.\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/video#Attributes\n * @param {Element} videoEl - Video element.\n * @returns {Element} Video element with the correct properties updated.\n */\nfunction fixVideoAttributes (videoEl) {\n  videoEl.autoplay = videoEl.hasAttribute('autoplay') && videoEl.getAttribute('autoplay') !== 'false';\n  videoEl.controls = videoEl.hasAttribute('controls') && videoEl.getAttribute('controls') !== 'false';\n  if (videoEl.getAttribute('loop') === 'false') {\n    videoEl.removeAttribute('loop');\n  }\n  if (videoEl.getAttribute('preload') === 'false') {\n    videoEl.preload = 'none';\n  }\n  videoEl.crossOrigin = videoEl.crossOrigin || 'anonymous';\n  // To support inline videos in iOS webviews.\n  videoEl.setAttribute('playsinline', '');\n  videoEl.setAttribute('webkit-playsinline', '');\n  return videoEl;\n}\n","var registerSystem = require('../core/system').registerSystem;\nvar utils = require('../utils/');\nvar THREE = require('../lib/three');\n\nvar debug = utils.debug;\nvar warn = debug('components:renderer:warn');\n\n/**\n * Determines state of various renderer properties.\n */\nmodule.exports.System = registerSystem('renderer', {\n  schema: {\n    antialias: {default: 'auto', oneOf: ['true', 'false', 'auto']},\n    highRefreshRate: {default: false},\n    logarithmicDepthBuffer: {default: 'auto', oneOf: ['true', 'false', 'auto']},\n    maxCanvasWidth: {default: 1920},\n    maxCanvasHeight: {default: 1920},\n    physicallyCorrectLights: {default: false},\n    precision: {default: 'high', oneOf: ['high', 'medium', 'low']},\n    sortObjects: {default: false},\n    colorManagement: {default: false},\n    gammaOutput: {default: false},\n    alpha: { default: true },\n    webgl2: {default: false},\n    multiview: {default: false},\n    forceWebVR: {default: false}\n  },\n\n  init: function () {\n    var data = this.data;\n    var sceneEl = this.el;\n    var renderer = sceneEl.renderer;\n\n    renderer.sortObjects = data.sortObjects;\n    renderer.physicallyCorrectLights = data.physicallyCorrectLights;\n    sceneEl.highRefreshRate = data.highRefreshRate;\n\n    if (data.colorManagement || data.gammaOutput) {\n      renderer.gammaOutput = true;\n      renderer.gammaFactor = 2.2;\n      if (data.gammaOutput) {\n        warn('Property `gammaOutput` is deprecated. Use `renderer=\"colorManagement: true;\"` instead.');\n      }\n    }\n\n    if (sceneEl.hasAttribute('antialias')) {\n      warn('Component `antialias` is deprecated. Use `renderer=\"antialias: true\"` instead.');\n    }\n\n    if (sceneEl.hasAttribute('logarithmicDepthBuffer')) {\n      warn('Component `logarithmicDepthBuffer` is deprecated. Use `renderer=\"logarithmicDepthBuffer: true\"` instead.');\n    }\n  },\n\n  applyColorCorrection: function (colorOrTexture) {\n    if (!this.data.colorManagement || !colorOrTexture) {\n      return;\n    } else if (colorOrTexture.isColor) {\n      colorOrTexture.convertSRGBToLinear();\n    } else if (colorOrTexture.isTexture) {\n      colorOrTexture.encoding = THREE.sRGBEncoding;\n    }\n  }\n});\n","var registerSystem = require('../core/system').registerSystem;\nvar THREE = require('../lib/three');\n\nvar SHADOW_MAP_TYPE_MAP = {\n  basic: THREE.BasicShadowMap,\n  pcf: THREE.PCFShadowMap,\n  pcfsoft: THREE.PCFSoftShadowMap\n};\n\n/**\n * Shadow system.\n *\n * Enabled automatically when one or more shadow components are added to the scene, the system sets\n * options on the WebGLRenderer for configuring shadow appearance.\n */\nmodule.exports.System = registerSystem('shadow', {\n  schema: {\n    enabled: {default: true},\n    autoUpdate: {default: true},\n    type: {default: 'pcf', oneOf: ['basic', 'pcf', 'pcfsoft']}\n  },\n\n  init: function () {\n    var sceneEl = this.sceneEl;\n    var data = this.data;\n\n    this.shadowMapEnabled = false;\n\n    if (!sceneEl.renderer) { return; }  // For tests.\n\n    sceneEl.renderer.shadowMap.type = SHADOW_MAP_TYPE_MAP[data.type];\n    sceneEl.renderer.shadowMap.autoUpdate = data.autoUpdate;\n    this.setShadowMapEnabled(this.shadowMapEnabled);\n  },\n\n  update: function (prevData) {\n    if (prevData.enabled !== this.data.enabled) {\n      this.setShadowMapEnabled(this.data.enabled);\n    }\n  },\n\n  /**\n   * Enables/disables the renderer shadow map.\n   * @param {boolean} enabled\n   */\n  setShadowMapEnabled: function (enabled) {\n    var renderer = this.sceneEl.renderer;\n    this.shadowMapEnabled = this.data.enabled && enabled;\n    if (renderer) {\n      renderer.shadowMap.enabled = this.shadowMapEnabled;\n    }\n  }\n});\n","var ANode = require('./a-node');\nvar bind = require('../utils/bind');\nvar debug = require('../utils/debug');\nvar registerElement = require('./a-register-element').registerElement;\nvar THREE = require('../lib/three');\n\nvar fileLoader = new THREE.FileLoader();\nvar warn = debug('core:a-assets:warn');\n\n/**\n * Asset management system. Handles blocking on asset loading.\n */\nmodule.exports = registerElement('a-assets', {\n  prototype: Object.create(ANode.prototype, {\n    createdCallback: {\n      value: function () {\n        this.isAssets = true;\n        this.fileLoader = fileLoader;\n        this.timeout = null;\n      }\n    },\n\n    attachedCallback: {\n      value: function () {\n        var self = this;\n        var i;\n        var loaded = [];\n        var mediaEl;\n        var mediaEls;\n        var imgEl;\n        var imgEls;\n        var timeout;\n\n        if (!this.parentNode.isScene) {\n          throw new Error('<a-assets> must be a child of a <a-scene>.');\n        }\n\n        // Wait for <img>s.\n        imgEls = this.querySelectorAll('img');\n        for (i = 0; i < imgEls.length; i++) {\n          imgEl = fixUpMediaElement(imgEls[i]);\n          loaded.push(new Promise(function (resolve, reject) {\n            // Set in cache because we won't be needing to call three.js loader if we have.\n            // a loaded media element.\n            THREE.Cache.files[imgEls[i].getAttribute('src')] = imgEl;\n            imgEl.onload = resolve;\n            imgEl.onerror = reject;\n          }));\n        }\n\n        // Wait for <audio>s and <video>s.\n        mediaEls = this.querySelectorAll('audio, video');\n        for (i = 0; i < mediaEls.length; i++) {\n          mediaEl = fixUpMediaElement(mediaEls[i]);\n          if (!mediaEl.src && !mediaEl.srcObject) {\n            warn('Audio/video asset has neither `src` nor `srcObject` attributes.');\n          }\n          loaded.push(mediaElementLoaded(mediaEl));\n        }\n\n        // Trigger loaded for scene to start rendering.\n        Promise.all(loaded).then(bind(this.load, this));\n\n        // Timeout to start loading anyways.\n        timeout = parseInt(this.getAttribute('timeout'), 10) || 3000;\n        this.timeout = setTimeout(function () {\n          if (self.hasLoaded) { return; }\n          warn('Asset loading timed out in ', timeout, 'ms');\n          self.emit('timeout');\n          self.load();\n        }, timeout);\n      }\n    },\n\n    detachedCallback: {\n      value: function () {\n        if (this.timeout) { clearTimeout(this.timeout); }\n      }\n    },\n\n    load: {\n      value: function () {\n        ANode.prototype.load.call(this, null, function waitOnFilter (el) {\n          return el.isAssetItem && el.hasAttribute('src');\n        });\n      }\n    }\n  })\n});\n\n/**\n * Preload using XHRLoader for any type of asset.\n */\nregisterElement('a-asset-item', {\n  prototype: Object.create(ANode.prototype, {\n    createdCallback: {\n      value: function () {\n        this.data = null;\n        this.isAssetItem = true;\n      }\n    },\n\n    attachedCallback: {\n      value: function () {\n        var self = this;\n        var src = this.getAttribute('src');\n        fileLoader.setResponseType(\n          this.getAttribute('response-type') || inferResponseType(src));\n        fileLoader.load(src, function handleOnLoad (response) {\n          self.data = response;\n          /*\n            Workaround for a Chrome bug. If another XHR is sent to the same url before the\n            previous one closes, the second request never finishes.\n            setTimeout finishes the first request and lets the logic triggered by load open\n            subsequent requests.\n            setTimeout can be removed once the fix for the bug below ships:\n            https://bugs.chromium.org/p/chromium/issues/detail?id=633696&q=component%3ABlink%3ENetwork%3EXHR%20&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified\n          */\n          setTimeout(function load () { ANode.prototype.load.call(self); });\n        }, function handleOnProgress (xhr) {\n          self.emit('progress', {\n            loadedBytes: xhr.loaded,\n            totalBytes: xhr.total,\n            xhr: xhr\n          });\n        }, function handleOnError (xhr) {\n          self.emit('error', {xhr: xhr});\n        });\n      }\n    }\n  })\n});\n\n/**\n * Create a Promise that resolves once the media element has finished buffering.\n *\n * @param {Element} el - HTMLMediaElement.\n * @returns {Promise}\n */\nfunction mediaElementLoaded (el) {\n  if (!el.hasAttribute('autoplay') && el.getAttribute('preload') !== 'auto') {\n    return;\n  }\n\n  // If media specifies autoplay or preload, wait until media is completely buffered.\n  return new Promise(function (resolve, reject) {\n    if (el.readyState === 4) { return resolve(); }  // Already loaded.\n    if (el.error) { return reject(); }  // Error.\n\n    el.addEventListener('loadeddata', checkProgress, false);\n    el.addEventListener('progress', checkProgress, false);\n    el.addEventListener('error', reject, false);\n\n    function checkProgress () {\n      // Add up the seconds buffered.\n      var secondsBuffered = 0;\n      for (var i = 0; i < el.buffered.length; i++) {\n        secondsBuffered += el.buffered.end(i) - el.buffered.start(i);\n      }\n\n      // Compare seconds buffered to media duration.\n      if (secondsBuffered >= el.duration) {\n        // Set in cache because we won't be needing to call three.js loader if we have.\n        // a loaded media element.\n        // Store video elements only. three.js loader is used for audio elements.\n        // See assetParse too.\n        if (el.tagName === 'VIDEO') {\n          THREE.Cache.files[el.getAttribute('src')] = el;\n        }\n        resolve();\n      }\n    }\n  });\n}\n\n/**\n * Automatically add attributes to media elements where convenient.\n * crossorigin, playsinline.\n */\nfunction fixUpMediaElement (mediaEl) {\n  // Cross-origin.\n  var newMediaEl = setCrossOrigin(mediaEl);\n\n  // Plays inline for mobile.\n  if (newMediaEl.tagName && newMediaEl.tagName.toLowerCase() === 'video') {\n    newMediaEl.setAttribute('playsinline', '');\n    newMediaEl.setAttribute('webkit-playsinline', '');\n  }\n\n  if (newMediaEl !== mediaEl) {\n    mediaEl.parentNode.appendChild(newMediaEl);\n    mediaEl.parentNode.removeChild(mediaEl);\n  }\n  return newMediaEl;\n}\n\n/**\n * Automatically set `crossorigin` if not defined on the media element.\n * If it is not defined, we must create and re-append a new media element <img> and\n * have the browser re-request it with `crossorigin` set.\n *\n * @param {Element} Media element (e.g., <img>, <audio>, <video>).\n * @returns {Element} Media element to be used to listen to for loaded events.\n */\nfunction setCrossOrigin (mediaEl) {\n  var newMediaEl;\n  var src;\n\n  // Already has crossorigin set.\n  if (mediaEl.hasAttribute('crossorigin')) { return mediaEl; }\n\n  src = mediaEl.getAttribute('src');\n\n  if (src !== null) {\n    // Does not have protocol.\n    if (src.indexOf('://') === -1) { return mediaEl; }\n\n    // Determine if cross origin is actually needed.\n    if (extractDomain(src) === window.location.host) { return mediaEl; }\n  }\n\n  warn('Cross-origin element (e.g., <img>) was requested without `crossorigin` set. ' +\n       'A-Frame will re-request the asset with `crossorigin` attribute set. ' +\n       'Please set `crossorigin` on the element (e.g., <img crossorigin=\"anonymous\">)', src);\n  mediaEl.crossOrigin = 'anonymous';\n  newMediaEl = mediaEl.cloneNode(true);\n  return newMediaEl;\n}\n\n/**\n * Extract domain out of URL.\n *\n * @param {string} url\n * @returns {string}\n */\nfunction extractDomain (url) {\n  // Find and remove protocol (e.g., http, ftp, etc.) to get domain.\n  var domain = url.indexOf('://') > -1 ? url.split('/')[2] : url.split('/')[0];\n\n  // Find and remove port number.\n  return domain.substring(0, domain.indexOf(':'));\n}\n\n/**\n * Infer response-type attribute from src.\n * Default is text(default XMLHttpRequest.responseType)\n * but we use arraybuffer for .gltf and .glb files\n * because of THREE.GLTFLoader specification.\n *\n * @param {string} src\n * @returns {string}\n */\nfunction inferResponseType (src) {\n  var dotLastIndex = src.lastIndexOf('.');\n  if (dotLastIndex >= 0) {\n    var extension = src.slice(dotLastIndex, src.length);\n    if (extension === '.gltf' || extension === '.glb') {\n      return 'arraybuffer';\n    }\n  }\n  return 'text';\n}\nmodule.exports.inferResponseType = inferResponseType;\n","var debug = require('../utils/debug');\nvar registerElement = require('./a-register-element').registerElement;\n\nvar warn = debug('core:cubemap:warn');\n\n/**\n * Cubemap element that handles validation and exposes list of URLs.\n * Does not listen to updates.\n */\nmodule.exports = registerElement('a-cubemap', {\n  prototype: Object.create(window.HTMLElement.prototype, {\n    /**\n     * Calculates this.srcs.\n     */\n    attachedCallback: {\n      value: function () {\n        this.srcs = this.validate();\n      },\n      writable: window.debug\n    },\n\n    /**\n     * Checks for exactly six elements with [src].\n     * Does not check explicitly for <img>s in case user does not want\n     * prefetching.\n     *\n     * @returns {Array|null} - six URLs if valid, else null.\n     */\n    validate: {\n      value: function () {\n        var elements = this.querySelectorAll('[src]');\n        var i;\n        var srcs = [];\n        if (elements.length === 6) {\n          for (i = 0; i < elements.length; i++) {\n            srcs.push(elements[i].getAttribute('src'));\n          }\n          return srcs;\n        }\n        // Else if there are not six elements, throw a warning.\n        warn(\n          '<a-cubemap> did not contain exactly six elements each with a ' +\n          '`src` attribute.');\n      },\n      writable: window.debug\n    }\n  })\n});\n","var ANode = require('./a-node');\nvar registerElement = require('./a-register-element').registerElement;\nvar components = require('./component').components;\nvar utils = require('../utils');\n\nvar MULTIPLE_COMPONENT_DELIMITER = '__';\n\n/**\n * @member {object} componentCache - Cache of pre-parsed values. An object where the keys\n *         are component names and the values are already parsed by the component.\n */\nmodule.exports = registerElement('a-mixin', {\n  prototype: Object.create(ANode.prototype, {\n    createdCallback: {\n      value: function () {\n        this.componentCache = {};\n        this.id = this.getAttribute('id');\n        this.isMixin = true;\n      }\n    },\n\n    attributeChangedCallback: {\n      value: function (attr, oldVal, newVal) {\n        this.cacheAttribute(attr, newVal);\n        this.updateEntities();\n      }\n    },\n\n    attachedCallback: {\n      value: function () {\n        this.sceneEl = this.closestScene();\n        this.cacheAttributes();\n        this.updateEntities();\n        this.load();\n      }\n    },\n\n    /**\n     * setAttribute that parses and caches component values.\n     */\n    setAttribute: {\n      value: function (attr, value) {\n        window.HTMLElement.prototype.setAttribute.call(this, attr, value);\n        this.cacheAttribute(attr, value);\n      }\n    },\n\n    /**\n     * If `attr` is a component, then parse the value using the schema and store it.\n     */\n    cacheAttribute: {\n      value: function (attr, value) {\n        var component;\n        var componentName;\n\n        // Get component data.\n        componentName = utils.split(attr, MULTIPLE_COMPONENT_DELIMITER)[0];\n        component = components[componentName];\n        if (!component) { return; }\n        if (value === undefined) {\n          value = window.HTMLElement.prototype.getAttribute.call(this, attr);\n        }\n        this.componentCache[attr] = component.parseAttrValueForCache(value);\n      }\n    },\n\n    /**\n     * If `attr` is a component, then grab pre-parsed value from the cache.\n     * Else do a normal getAttribute.\n     */\n    getAttribute: {\n      value: function (attr) {\n        return this.componentCache[attr] ||\n               window.HTMLElement.prototype.getAttribute.call(this, attr);\n      }\n    },\n\n    /**\n     * Parse and cache every component defined on the mixin.\n     */\n    cacheAttributes: {\n      value: function () {\n        var attributes = this.attributes;\n        var attrName;\n        var i;\n        for (i = 0; i < attributes.length; i++) {\n          attrName = attributes[i].name;\n          this.cacheAttribute(attrName);\n        }\n      }\n    },\n\n    /**\n     * For entities that already have been loaded by the time the mixin was attached, tell\n     * those entities to register the mixin and refresh their component data.\n     */\n    updateEntities: {\n      value: function () {\n        var entity;\n        var entities;\n        var i;\n\n        if (!this.sceneEl) { return; }\n\n        entities = this.sceneEl.querySelectorAll('[mixin~=' + this.id + ']');\n        for (i = 0; i < entities.length; i++) {\n          entity = entities[i];\n          if (!entity.hasLoaded || entity.isMixin) { continue; }\n          entity.mixinUpdate(this.id);\n        }\n      }\n    }\n  })\n});\n","require('./pivot');\n","var registerComponent = require('../../core/component').registerComponent;\nvar THREE = require('../../lib/three');\n\nvar originalPosition = new THREE.Vector3();\nvar originalRotation = new THREE.Vector3();\n\n/**\n * Wrap el.object3D within an outer group. Apply pivot to el.object3D as position.\n */\nregisterComponent('pivot', {\n  dependencies: ['position'],\n\n  schema: {type: 'vec3'},\n\n  init: function () {\n    var data = this.data;\n    var el = this.el;\n    var originalParent = el.object3D.parent;\n    var originalGroup = el.object3D;\n    var outerGroup = new THREE.Group();\n\n    originalPosition.copy(originalGroup.position);\n    originalRotation.copy(originalGroup.rotation);\n\n    // Detach current group from parent.\n    originalParent.remove(originalGroup);\n    outerGroup.add(originalGroup);\n\n    // Set new group as the outer group.\n    originalParent.add(outerGroup);\n\n    // Set outer group as new object3D.\n    el.object3D = outerGroup;\n\n    // Apply pivot to original group.\n    originalGroup.position.set(-1 * data.x, -1 * data.y, -1 * data.z);\n\n    // Offset the pivot so that world position not affected.\n    // And restore position onto outer group.\n    outerGroup.position.set(data.x + originalPosition.x, data.y + originalPosition.y,\n                            data.z + originalPosition.z);\n\n    // Transfer rotation to outer group.\n    outerGroup.rotation.copy(originalGroup.rotation);\n    originalGroup.rotation.set(0, 0, 0);\n  }\n});\n","require('./primitives/a-camera');\nrequire('./primitives/a-cursor');\nrequire('./primitives/a-curvedimage');\nrequire('./primitives/a-gltf-model');\nrequire('./primitives/a-image');\nrequire('./primitives/a-light');\nrequire('./primitives/a-link');\nrequire('./primitives/a-obj-model');\nrequire('./primitives/a-sky');\nrequire('./primitives/a-sound');\nrequire('./primitives/a-video');\nrequire('./primitives/a-videosphere');\nrequire('./primitives/meshPrimitives');\n","var registerPrimitive = require('../primitives').registerPrimitive;\n\nregisterPrimitive('a-camera', {\n  defaultComponents: {\n    'camera': {},\n    'look-controls': {},\n    'wasd-controls': {},\n    'position': {x: 0, y: 1.6, z: 0}\n  },\n\n  mappings: {\n    active: 'camera.active',\n    far: 'camera.far',\n    fov: 'camera.fov',\n    'look-controls-enabled': 'look-controls.enabled',\n    near: 'camera.near',\n    'pointer-lock-enabled': 'look-controls.pointerLockEnabled',\n    'wasd-controls-enabled': 'wasd-controls.enabled',\n    'reverse-mouse-drag': 'look-controls.reverseMouseDrag',\n    zoom: 'camera.zoom'\n  }\n});\n","var getMeshMixin = require('../getMeshMixin');\nvar registerPrimitive = require('../primitives').registerPrimitive;\nvar utils = require('../../../utils/');\n\nregisterPrimitive('a-cursor', utils.extendDeep({}, getMeshMixin(), {\n  defaultComponents: {\n    cursor: {},\n    geometry: {\n      primitive: 'ring',\n      radiusOuter: 0.016,\n      radiusInner: 0.01,\n      segmentsTheta: 32\n    },\n    material: {\n      color: '#000',\n      shader: 'flat',\n      opacity: 0.8\n    },\n    position: {\n      x: 0,\n      y: 0,\n      z: -1\n    }\n  },\n\n  mappings: {\n    far: 'raycaster.far',\n    fuse: 'cursor.fuse',\n    'fuse-timeout': 'cursor.fuseTimeout',\n    interval: 'raycaster.interval',\n    objects: 'raycaster.objects'\n  }\n}));\n","var getMeshMixin = require('../getMeshMixin');\nvar registerPrimitive = require('../primitives').registerPrimitive;\nvar utils = require('../../../utils/');\n\nregisterPrimitive('a-curvedimage', utils.extendDeep({}, getMeshMixin(), {\n  defaultComponents: {\n    geometry: {\n      height: 1,\n      primitive: 'cylinder',\n      radius: 2,\n      segmentsRadial: 48,\n      thetaLength: 270,\n      openEnded: true,\n      thetaStart: 0\n    },\n    material: {\n      color: '#FFF',\n      shader: 'flat',\n      side: 'double',\n      transparent: true,\n      repeat: '-1 1'\n    }\n  },\n\n  mappings: {\n    height: 'geometry.height',\n    'open-ended': 'geometry.openEnded',\n    radius: 'geometry.radius',\n    segments: 'geometry.segmentsRadial',\n    start: 'geometry.thetaStart',\n    'theta-length': 'geometry.thetaLength',\n    'theta-start': 'geometry.thetaStart',\n    'width': 'geometry.thetaLength'\n  }\n}));\n","var registerPrimitive = require('../primitives').registerPrimitive;\n\nregisterPrimitive('a-gltf-model', {\n  mappings: {\n    src: 'gltf-model'\n  }\n});\n","var getMeshMixin = require('../getMeshMixin');\nvar registerPrimitive = require('../primitives').registerPrimitive;\nvar utils = require('../../../utils/');\n\nregisterPrimitive('a-image', utils.extendDeep({}, getMeshMixin(), {\n  defaultComponents: {\n    geometry: {\n      primitive: 'plane'\n    },\n    material: {\n      color: '#FFF',\n      shader: 'flat',\n      side: 'double',\n      transparent: true\n    }\n  },\n\n  mappings: {\n    height: 'geometry.height',\n    width: 'geometry.width'\n  }\n}));\n","var registerPrimitive = require('../primitives').registerPrimitive;\n\nregisterPrimitive('a-light', {\n  defaultComponents: {\n    light: {}\n  },\n\n  mappings: {\n    angle: 'light.angle',\n    color: 'light.color',\n    'ground-color': 'light.groundColor',\n    decay: 'light.decay',\n    distance: 'light.distance',\n    intensity: 'light.intensity',\n    penumbra: 'light.penumbra',\n    type: 'light.type',\n    target: 'light.target'\n  }\n});\n","var registerPrimitive = require('../primitives').registerPrimitive;\n\nregisterPrimitive('a-link', {\n  defaultComponents: {\n    link: {\n      visualAspectEnabled: true\n    }\n  },\n\n  mappings: {\n    href: 'link.href',\n    image: 'link.image',\n    title: 'link.title'\n  }\n});\n","var meshMixin = require('../getMeshMixin')();\nvar registerPrimitive = require('../primitives').registerPrimitive;\nvar utils = require('../../../utils/');\n\nregisterPrimitive('a-obj-model', utils.extendDeep({}, meshMixin, {\n  defaultComponents: {\n    'obj-model': {}\n  },\n\n  mappings: {\n    src: 'obj-model.obj',\n    mtl: 'obj-model.mtl'\n  }\n}));\n","var getMeshMixin = require('../getMeshMixin');\nvar registerPrimitive = require('../primitives').registerPrimitive;\nvar utils = require('../../../utils/');\nvar meshPrimitives = require('./meshPrimitives');\n\nregisterPrimitive('a-sky', utils.extendDeep({}, getMeshMixin(), {\n  defaultComponents: {\n    geometry: {\n      primitive: 'sphere',\n      radius: 5000,\n      segmentsWidth: 64,\n      segmentsHeight: 32\n    },\n    material: {\n      color: '#FFF',\n      side: 'back',\n      shader: 'flat',\n      npot: true\n    },\n    scale: '-1 1 1'\n  },\n\n  mappings: utils.extendDeep({}, meshPrimitives['a-sphere'].prototype.mappings)\n}));\n","var registerPrimitive = require('../primitives').registerPrimitive;\n\nregisterPrimitive('a-sound', {\n  defaultComponents: {\n    sound: {}\n  },\n\n  mappings: {\n    src: 'sound.src',\n    on: 'sound.on',\n    autoplay: 'sound.autoplay',\n    loop: 'sound.loop',\n    volume: 'sound.volume'\n  }\n});\n","var getMeshMixin = require('../getMeshMixin');\nvar registerPrimitive = require('../primitives').registerPrimitive;\nvar utils = require('../../../utils/');\n\nregisterPrimitive('a-video', utils.extendDeep({}, getMeshMixin(), {\n  defaultComponents: {\n    geometry: {\n      primitive: 'plane'\n    },\n    material: {\n      color: '#FFF',\n      shader: 'flat',\n      side: 'double',\n      transparent: true\n    }\n  },\n\n  mappings: {\n    height: 'geometry.height',\n    width: 'geometry.width'\n  }\n}));\n","var getMeshMixin = require('../getMeshMixin');\nvar registerPrimitive = require('../primitives').registerPrimitive;\nvar utils = require('../../../utils/');\n\nregisterPrimitive('a-videosphere', utils.extendDeep({}, getMeshMixin(), {\n  defaultComponents: {\n    geometry: {\n      primitive: 'sphere',\n      radius: 5000,\n      segmentsWidth: 64,\n      segmentsHeight: 32\n    },\n    material: {\n      color: '#FFF',\n      shader: 'flat',\n      side: 'back',\n      npot: true\n    },\n    scale: '-1 1 1'\n  },\n\n  mappings: {\n    radius: 'geometry.radius',\n    'segments-height': 'geometry.segmentsHeight',\n    'segments-width': 'geometry.segmentsWidth'\n  }\n}));\n","AFRAME.registerComponent('rounded', {\n  schema: {\n    enabled: {default: true},\n    width: {type: 'number', default: 1},\n    height: {type: 'number', default: 1},\n    radius: {type: 'number', default: 0.3},\n    topLeftRadius: {type: 'number', default: -1},\n    topRightRadius: {type: 'number', default: -1},\n    bottomLeftRadius: {type: 'number', default: -1},\n    bottomRightRadius: {type: 'number', default: -1},\n    color: {type: 'color', default: \"#F0F0F0\"},\n    opacity: {type: 'number', default: 1}\n  },\n  init: function () {\n    this.rounded = new THREE.Mesh( this.draw(), new THREE.MeshPhongMaterial( { color: new THREE.Color(this.data.color), side: THREE.DoubleSide } ) );\n    this.updateOpacity();\n    this.el.setObject3D('mesh', this.rounded)\n  },\n  update: function () {\n    if (this.data.enabled) {\n      if (this.rounded) {\n        this.rounded.visible = true;\n        this.rounded.geometry = this.draw();\n        this.rounded.material.color = new THREE.Color(this.data.color);\n        this.updateOpacity();\n      }\n    } else {\n      this.rounded.visible = false;\n    }\n  },\n  updateOpacity: function() {\n    if (this.data.opacity < 0) { this.data.opacity = 0; }\n    if (this.data.opacity > 1) { this.data.opacity = 1; }\n    if (this.data.opacity < 1) {\n      this.rounded.material.transparent = true;\n    } else {\n      this.rounded.material.transparent = false;\n    }\n    this.rounded.material.opacity = this.data.opacity;\n  },\n  tick: function () {},\n  remove: function () {\n    if (!this.rounded) { return; }\n    this.el.object3D.remove( this.rounded );\n    this.rounded = null;\n  },\n  draw: function() {\n    var roundedRectShape = new THREE.Shape();\n    function roundedRect( ctx, x, y, width, height, topLeftRadius, topRightRadius, bottomLeftRadius, bottomRightRadius ) {\n      if (!topLeftRadius) { topLeftRadius = 0.00001; }\n      if (!topRightRadius) { topRightRadius = 0.00001; }\n      if (!bottomLeftRadius) { bottomLeftRadius = 0.00001; }\n      if (!bottomRightRadius) { bottomRightRadius = 0.00001; }\n      ctx.moveTo( x, y + topLeftRadius );\n      ctx.lineTo( x, y + height - topLeftRadius );\n      ctx.quadraticCurveTo( x, y + height, x + topLeftRadius, y + height );\n      ctx.lineTo( x + width - topRightRadius, y + height );\n      ctx.quadraticCurveTo( x + width, y + height, x + width, y + height - topRightRadius );\n      ctx.lineTo( x + width, y + bottomRightRadius );\n      ctx.quadraticCurveTo( x + width, y, x + width - bottomRightRadius, y );\n      ctx.lineTo( x + bottomLeftRadius, y );\n      ctx.quadraticCurveTo( x, y, x, y + bottomLeftRadius );\n    }\n\n    var corners = [this.data.radius, this.data.radius, this.data.radius, this.data.radius];\n    if (this.data.topLeftRadius != -1) { corners[0] = this.data.topLeftRadius; }\n    if (this.data.topRightRadius != -1) { corners[1] = this.data.topRightRadius; }\n    if (this.data.bottomLeftRadius != -1) { corners[2] = this.data.bottomLeftRadius; }\n    if (this.data.bottomRightRadius != -1) { corners[3] = this.data.bottomRightRadius; }\n\n    roundedRect( roundedRectShape, 0, 0, this.data.width, this.data.height, corners[0], corners[1], corners[2], corners[3] );\n    return new THREE.ShapeBufferGeometry( roundedRectShape );\n  },\n  pause: function () {},\n  play: function () {}\n});\n\nAFRAME.registerPrimitive('a-rounded', {\n  defaultComponents: {\n    rounded: {}\n  },\n  mappings: {\n    enabled: 'rounded.enabled',\n    width: 'rounded.width',\n    height: 'rounded.height',\n    radius: 'rounded.radius',\n    'top-left-radius': 'rounded.topLeftRadius',\n    'top-right-radius': 'rounded.topRightRadius',\n    'bottom-left-radius': 'rounded.bottomLeftRadius',\n    'bottom-right-radius': 'rounded.bottomRightRadius',\n    color: 'rounded.color',\n    opacity: 'rounded.opacity'\n  }\n});\n","/* global AFRAME */\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n * Slice9 component for A-Frame.\n */\nAFRAME.registerComponent('slice9', {\n  schema: {\n    width: {default: 1, min: 0},\n    height: {default: 1, min: 0},\n    left: {default: 0, min: 0},\n    right: {default: 0, min: 0},\n    bottom: {default: 0, min: 0},\n    top: {default: 0, min: 0},\n    side: {default: 'front', oneOf: ['front', 'back', 'double']},\n    padding: {default: 0.1, min: 0.01},\n    color: {type: 'color', default: '#fff'},\n    opacity: {default: 1.0, min: 0, max: 1},\n    transparent: {default: true},\n    debug: {default: false},\n    src: {type: 'map'}\n  },\n\n  /**\n   * Set if component needs multiple instancing.\n   */\n  multiple: false,\n\n  /**\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function () {\n    var data = this.data;\n    var material = this.material = new THREE.MeshBasicMaterial({color: data.color, opacity: data.opacity, transparent: data.transparent, wireframe: data.debug});\n    var geometry = this.geometry = new THREE.PlaneBufferGeometry(data.width, data.height, 3, 3);\n\n    var textureLoader = new THREE.TextureLoader();\n    this.plane = new THREE.Mesh(geometry, material);\n    this.el.setObject3D('mesh', this.plane);\n    this.textureSrc = null;\n  },\n\n  updateMap: function () {\n    var src = this.data.src;\n\n    if (src) {\n      if (src === this.textureSrc) { return; }\n      // Texture added or changed.\n      this.textureSrc = src;\n      this.el.sceneEl.systems.material.loadTexture(src, {src: src}, setMap.bind(this));\n      return;\n    }\n\n    // Texture removed.\n    if (!this.material.map) { return; }\n    setMap(null);\n\n\n    function setMap (texture) {\n      this.material.map = texture;\n      this.material.needsUpdate = true;\n      this.regenerateMesh();\n    }\n  },\n\n  regenerateMesh: function () {\n    var data = this.data;\n    var pos = this.geometry.attributes.position.array;\n    var uvs = this.geometry.attributes.uv.array;\n    var image = this.material.map.image;\n\n    if (!image) {return;}\n\n    /*\n      0--1------------------------------2--3\n      |  |                              |  |\n      4--5------------------------------6--7\n      |  |                              |  |\n      |  |                              |  |\n      |  |                              |  |\n      8--9-----------------------------10--11\n      |  |                              |  |\n      12-13----------------------------14--15\n    */\n    function setPos(id, x, y) {\n      pos[3 * id] = x;\n      pos[3 * id + 1] = y;\n    }\n\n    function setUV(id, u, v) {\n      uvs[2 * id] = u;\n      uvs[2 * id + 1] = v;\n    }\n\n    // Update UVS\n    var uv = {\n      left: data.left / image.width,\n      right: data.right / image.width,\n      top: data.top / image.height,\n      bottom: data.bottom / image.height\n    };\n\n    setUV(1,  uv.left,  1);\n    setUV(2,  uv.right, 1);\n\n    setUV(4,  0,        uv.bottom);\n    setUV(5,  uv.left,  uv.bottom);\n    setUV(6,  uv.right, uv.bottom);\n    setUV(7,  1,        uv.bottom);\n\n    setUV(8,  0,        uv.top);\n    setUV(9,  uv.left,  uv.top);\n    setUV(10, uv.right, uv.top);\n    setUV(11, 1,        uv.top);\n\n    setUV(13, uv.left,  0);\n    setUV(14, uv.right, 0);\n\n    // Update vertex positions\n    var w2 = data.width / 2;\n    var h2 = data.height / 2;\n    var left = -w2 + data.padding;\n    var right = w2 - data.padding;\n    var top = h2 - data.padding;\n    var bottom = -h2 + data.padding;\n\n    setPos(0, -w2,    h2);\n    setPos(1, left,   h2);\n    setPos(2, right,  h2);\n    setPos(3, w2,     h2);\n\n    setPos(4, -w2,    top);\n    setPos(5, left,   top);\n    setPos(6, right,  top);\n    setPos(7, w2,     top);\n\n    setPos(8, -w2,    bottom);\n    setPos(9, left,   bottom);\n    setPos(10, right, bottom);\n    setPos(11, w2,    bottom);\n\n    setPos(13, left,  -h2);\n    setPos(14, right, -h2);\n    setPos(12, -w2,   -h2);\n    setPos(15, w2,    -h2);\n\n    this.geometry.attributes.position.needsUpdate = true;\n    this.geometry.attributes.uv.needsUpdate = true;\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n   update: function (oldData) {\n     var data = this.data;\n\n     this.material.color.setStyle(data.color);\n     this.material.opacity = data.opacity;\n     this.material.transparent = data.transparent;\n     this.material.wireframe = data.debug;\n     this.material.side = parseSide(data.side);\n\n     var diff = AFRAME.utils.diff(data, oldData);\n     if ('src' in diff) {\n       this.updateMap();\n     }\n     else if ('width' in diff || 'height' in diff || 'padding' in diff || 'left' in diff || 'top' in diff || 'bottom' in diff || 'right' in diff) {\n       this.regenerateMesh();\n     }\n   },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () { },\n\n  /**\n   * Called on each scene tick.\n   */\n  // tick: function (t) { },\n\n  /**\n   * Called when entity pauses.\n   * Use to stop or remove any dynamic or background behavior such as events.\n   */\n  pause: function () { },\n\n  /**\n   * Called when entity resumes.\n   * Use to continue or add any dynamic or background behavior such as events.\n   */\n  play: function () { }\n});\n\nfunction parseSide (side) {\n  switch (side) {\n    case 'back': {\n      return THREE.BackSide;\n    }\n    case 'double': {\n      return THREE.DoubleSide;\n    }\n    default: {\n      // Including case `front`.\n      return THREE.FrontSide;\n    }\n  }\n}\n","var flatten = require('flatten-vertex-data')\nvar warned = false;\n\nmodule.exports.attr = setAttribute\nmodule.exports.index = setIndex\n\nfunction setIndex (geometry, data, itemSize, dtype) {\n  if (typeof itemSize !== 'number') itemSize = 1\n  if (typeof dtype !== 'string') dtype = 'uint16'\n\n  var isR69 = !geometry.index && typeof geometry.setIndex !== 'function'\n  var attrib = isR69 ? geometry.getAttribute('index') : geometry.index\n  var newAttrib = updateAttribute(attrib, data, itemSize, dtype)\n  if (newAttrib) {\n    if (isR69) geometry.addAttribute('index', newAttrib)\n    else geometry.index = newAttrib\n  }\n}\n\nfunction setAttribute (geometry, key, data, itemSize, dtype) {\n  if (typeof itemSize !== 'number') itemSize = 3\n  if (typeof dtype !== 'string') dtype = 'float32'\n  if (Array.isArray(data) &&\n    Array.isArray(data[0]) &&\n    data[0].length !== itemSize) {\n    throw new Error('Nested vertex array has unexpected size; expected ' +\n      itemSize + ' but found ' + data[0].length)\n  }\n\n  var attrib = geometry.getAttribute(key)\n  var newAttrib = updateAttribute(attrib, data, itemSize, dtype)\n  if (newAttrib) {\n    geometry.addAttribute(key, newAttrib)\n  }\n}\n\nfunction updateAttribute (attrib, data, itemSize, dtype) {\n  data = data || []\n  if (!attrib || rebuildAttribute(attrib, data, itemSize)) {\n    // create a new array with desired type\n    data = flatten(data, dtype)\n\n    var needsNewBuffer = attrib && typeof attrib.setArray !== 'function'\n    if (!attrib || needsNewBuffer) {\n      // We are on an old version of ThreeJS which can't\n      // support growing / shrinking buffers, so we need\n      // to build a new buffer\n      if (needsNewBuffer && !warned) {\n        warned = true\n        console.warn([\n          'A WebGL buffer is being updated with a new size or itemSize, ',\n          'however this version of ThreeJS only supports fixed-size buffers.',\n          '\\nThe old buffer may still be kept in memory.\\n',\n          'To avoid memory leaks, it is recommended that you dispose ',\n          'your geometries and create new ones, or update to ThreeJS r82 or newer.\\n',\n          'See here for discussion:\\n',\n          'https://github.com/mrdoob/three.js/pull/9631'\n        ].join(''))\n      }\n\n      // Build a new attribute\n      attrib = new THREE.BufferAttribute(data, itemSize);\n    }\n\n    attrib.itemSize = itemSize\n    attrib.needsUpdate = true\n\n    // New versions of ThreeJS suggest using setArray\n    // to change the data. It will use bufferData internally,\n    // so you can change the array size without any issues\n    if (typeof attrib.setArray === 'function') {\n      attrib.setArray(data)\n    }\n\n    return attrib\n  } else {\n    // copy data into the existing array\n    flatten(data, attrib.array)\n    attrib.needsUpdate = true\n    return null\n  }\n}\n\n// Test whether the attribute needs to be re-created,\n// returns false if we can re-use it as-is.\nfunction rebuildAttribute (attrib, data, itemSize) {\n  if (attrib.itemSize !== itemSize) return true\n  if (!attrib.array) return true\n  var attribLength = attrib.array.length\n  if (Array.isArray(data) && Array.isArray(data[0])) {\n    // [ [ x, y, z ] ]\n    return attribLength !== data.length * itemSize\n  } else {\n    // [ x, y, z ]\n    return attribLength !== data.length\n  }\n  return false\n}\n","module.exports.pages = function pages (glyphs) {\n  var pages = new Float32Array(glyphs.length * 4 * 1)\n  var i = 0\n  glyphs.forEach(function (glyph) {\n    var id = glyph.data.page || 0\n    pages[i++] = id\n    pages[i++] = id\n    pages[i++] = id\n    pages[i++] = id\n  })\n  return pages\n}\n\nmodule.exports.uvs = function uvs (glyphs, texWidth, texHeight, flipY) {\n  var uvs = new Float32Array(glyphs.length * 4 * 2)\n  var i = 0\n  glyphs.forEach(function (glyph) {\n    var bitmap = glyph.data\n    var bw = (bitmap.x + bitmap.width)\n    var bh = (bitmap.y + bitmap.height)\n\n    // top left position\n    var u0 = bitmap.x / texWidth\n    var v1 = bitmap.y / texHeight\n    var u1 = bw / texWidth\n    var v0 = bh / texHeight\n\n    if (flipY) {\n      v1 = (texHeight - bitmap.y) / texHeight\n      v0 = (texHeight - bh) / texHeight\n    }\n\n    // BL\n    uvs[i++] = u0\n    uvs[i++] = v1\n    // TL\n    uvs[i++] = u0\n    uvs[i++] = v0\n    // TR\n    uvs[i++] = u1\n    uvs[i++] = v0\n    // BR\n    uvs[i++] = u1\n    uvs[i++] = v1\n  })\n  return uvs\n}\n\nmodule.exports.positions = function positions (glyphs) {\n  var positions = new Float32Array(glyphs.length * 4 * 2)\n  var i = 0\n  glyphs.forEach(function (glyph) {\n    var bitmap = glyph.data\n\n    // bottom left position\n    var x = glyph.position[0] + bitmap.xoffset\n    var y = glyph.position[1] + bitmap.yoffset\n\n    // quad size\n    var w = bitmap.width\n    var h = bitmap.height\n\n    // BL\n    positions[i++] = x\n    positions[i++] = y\n    // TL\n    positions[i++] = x\n    positions[i++] = y + h\n    // TR\n    positions[i++] = x + w\n    positions[i++] = y + h\n    // BR\n    positions[i++] = x + w\n    positions[i++] = y\n  })\n  return positions\n}\n","var itemSize = 2\nvar box = { min: [0, 0], max: [0, 0] }\n\nfunction bounds (positions) {\n  var count = positions.length / itemSize\n  box.min[0] = positions[0]\n  box.min[1] = positions[1]\n  box.max[0] = positions[0]\n  box.max[1] = positions[1]\n\n  for (var i = 0; i < count; i++) {\n    var x = positions[i * itemSize + 0]\n    var y = positions[i * itemSize + 1]\n    box.min[0] = Math.min(x, box.min[0])\n    box.min[1] = Math.min(y, box.min[1])\n    box.max[0] = Math.max(x, box.max[0])\n    box.max[1] = Math.max(y, box.max[1])\n  }\n}\n\nmodule.exports.computeBox = function (positions, output) {\n  bounds(positions)\n  output.min.set(box.min[0], box.min[1], 0)\n  output.max.set(box.max[0], box.max[1], 0)\n}\n\nmodule.exports.computeSphere = function (positions, output) {\n  bounds(positions)\n  var minX = box.min[0]\n  var minY = box.min[1]\n  var maxX = box.max[0]\n  var maxY = box.max[1]\n  var width = maxX - minX\n  var height = maxY - minY\n  var length = Math.sqrt(width * width + height * height)\n  output.center.set(minX + width / 2, minY + height / 2, 0)\n  output.radius = length / 2\n}\n","var components = require('./component');\nvar schema = require('./schema');\nvar utils = require('../utils/');\n\nvar parseProperties = schema.parseProperties;\nvar parseProperty = schema.parseProperty;\nvar processSchema = schema.process;\nvar isSingleProp = schema.isSingleProperty;\nvar styleParser = utils.styleParser;\n\nvar systems = module.exports.systems = {};  // Keep track of registered systems.\n\n/**\n * System class definition.\n *\n * Systems provide global scope and services to a group of instantiated components of the\n * same class. They can also help abstract logic away from components such that components\n * only have to worry about data.\n *\n * For example, a physics component that creates a physics world that oversees\n * all entities with a physics or rigid body component.\n *\n * TODO: Have the System prototype reuse the Component prototype. Most code is copied\n * and some pieces are missing from the Component facilities (e.g., attribute caching,\n * setAttribute behavior).\n *\n * @member {string} name - Name that system is registered under.\n * @member {Element} sceneEl - Handle to the scene element where system applies to.\n */\nvar System = module.exports.System = function (sceneEl) {\n  var component = components && components.components[this.name];\n\n  // Set reference to scene.\n  this.el = sceneEl;\n  this.sceneEl = sceneEl;\n\n  // Set reference to matching component (if exists).\n  if (component) { component.Component.prototype.system = this; }\n\n  // Process system configuration.\n  this.buildData();\n  this.init();\n  this.update({});\n};\n\nSystem.prototype = {\n  /**\n   * Schema to configure system.\n   */\n  schema: {},\n\n  /**\n   * Init handler. Called during scene initialization and is only run once.\n   * Systems can use this to set initial state.\n   */\n  init: function () { /* no-op */ },\n\n  /**\n   * Update handler. Called during scene attribute updates.\n   * Systems can use this to dynamically update their state.\n   */\n  update: function (oldData) { /* no-op */ },\n\n  /**\n   * Build data and call update handler.\n   *\n   * @private\n   */\n  updateProperties: function (rawData) {\n    var oldData = this.data;\n    if (!Object.keys(schema).length) { return; }\n    this.buildData(rawData);\n    this.update(oldData);\n  },\n\n  /**\n   * Parse data.\n   */\n  buildData: function (rawData) {\n    var schema = this.schema;\n    if (!Object.keys(schema).length) { return; }\n    rawData = rawData || window.HTMLElement.prototype.getAttribute.call(this.sceneEl, this.name);\n    if (isSingleProp(schema)) {\n      this.data = parseProperty(rawData, schema);\n    } else {\n      this.data = parseProperties(styleParser.parse(rawData) || {}, schema);\n    }\n  },\n\n  /**\n   * Tick handler.\n   * Called on each tick of the scene render loop.\n   * Affected by play and pause.\n   *\n   * @param {number} time - Scene tick time.\n   * @param {number} timeDelta - Difference in current render time and previous render time.\n   */\n  tick: undefined,\n\n  /**\n   * Tock handler.\n   * Called on each tock of the scene render loop.\n   * Affected by play and pause.\n   *\n   * @param {number} time - Scene tick time.\n   * @param {number} timeDelta - Difference in current render time and previous render time.\n   */\n  tock: undefined,\n\n  /**\n   * Called to start any dynamic behavior (e.g., animation, AI, events, physics).\n   */\n  play: function () { /* no-op */ },\n\n  /**\n   * Called to stop any dynamic behavior (e.g., animation, AI, events, physics).\n   */\n  pause: function () { /* no-op */ }\n};\n\n/**\n * Registers a system to A-Frame.\n *\n * @param {string} name - Component name.\n * @param {object} definition - Component property and methods.\n * @returns {object} Component.\n */\nmodule.exports.registerSystem = function (name, definition) {\n  var i;\n  var NewSystem;\n  var proto = {};\n  var scenes = utils.findAllScenes(document);\n\n  // Format definition object to prototype object.\n  Object.keys(definition).forEach(function (key) {\n    proto[key] = {\n      value: definition[key],\n      writable: true\n    };\n  });\n\n  if (systems[name]) {\n    throw new Error('The system `' + name + '` has been already registered. ' +\n                    'Check that you are not loading two versions of the same system ' +\n                    'or two different systems of the same name.');\n  }\n  NewSystem = function (sceneEl) { System.call(this, sceneEl); };\n  NewSystem.prototype = Object.create(System.prototype, proto);\n  NewSystem.prototype.name = name;\n  NewSystem.prototype.constructor = NewSystem;\n  NewSystem.prototype.schema = utils.extend(processSchema(NewSystem.prototype.schema));\n  systems[name] = NewSystem;\n\n  // Initialize systems for existing scenes\n  for (i = 0; i < scenes.length; i++) { scenes[i].initSystem(name); }\n};\n","var schema = require('./schema');\n\nvar processSchema = schema.process;\nvar shaders = module.exports.shaders = {};  // Keep track of registered shaders.\nvar shaderNames = module.exports.shaderNames = [];  // Keep track of the names of registered shaders.\nvar THREE = require('../lib/three');\nvar utils = require('../utils');\n\n// A-Frame properties to three.js uniform types.\nvar propertyToThreeMapping = {\n  array: 'v3',\n  color: 'v3',\n  int: 'i',\n  number: 'f',\n  map: 't',\n  time: 'f',\n  vec2: 'v2',\n  vec3: 'v3',\n  vec4: 'v4'\n};\n\n/**\n * Shader class definition.\n *\n * Shaders extend the material component API so you can create your own library\n * of customized materials\n *\n */\nvar Shader = module.exports.Shader = function () {};\n\nShader.prototype = {\n  /**\n   * Contains the type schema and defaults for the data values.\n   * Data is coerced into the types of the values of the defaults.\n   */\n  schema: {},\n\n  vertexShader:\n    'void main() {' +\n      'gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);' +\n    '}',\n\n  fragmentShader:\n    'void main() {' +\n      'gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);' +\n    '}',\n\n  /**\n   * Init handler. Similar to attachedCallback.\n   * Called during shader initialization and is only run once.\n   */\n  init: function (data) {\n    this.attributes = this.initVariables(data, 'attribute');\n    this.uniforms = this.initVariables(data, 'uniform');\n    this.material = new (this.raw ? THREE.RawShaderMaterial : THREE.ShaderMaterial)({\n      // attributes: this.attributes,\n      uniforms: this.uniforms,\n      vertexShader: this.vertexShader,\n      fragmentShader: this.fragmentShader\n    });\n    return this.material;\n  },\n\n  initVariables: function (data, type) {\n    var key;\n    var schema = this.schema;\n    var variables = {};\n    var varType;\n\n    for (key in schema) {\n      if (schema[key].is !== type) { continue; }\n      varType = propertyToThreeMapping[schema[key].type];\n      variables[key] = {\n        type: varType,\n        value: undefined  // Let updateVariables handle setting these.\n      };\n    }\n    return variables;\n  },\n\n  /**\n   * Update handler. Similar to attributeChangedCallback.\n   * Called whenever the associated material data changes.\n   *\n   * @param {object} data - New material data.\n   */\n  update: function (data) {\n    this.updateVariables(data, 'attribute');\n    this.updateVariables(data, 'uniform');\n  },\n\n  updateVariables: function (data, type) {\n    var key;\n    var materialKey;\n    var schema = this.schema;\n    var variables;\n\n    variables = type === 'uniform' ? this.uniforms : this.attributes;\n    for (key in data) {\n      if (!schema[key] || schema[key].is !== type) { continue; }\n\n      if (schema[key].type === 'map') {\n        // If data unchanged, get out early.\n        if (!variables[key] || variables[key].value === data[key]) { continue; }\n\n        // Special handling is needed for textures.\n        materialKey = '_texture_' + key;\n\n        // We can't actually set the variable correctly until we've loaded the texture.\n        this.setMapOnTextureLoad(variables, key, materialKey);\n\n        // Kick off the texture update now that handler is added.\n        utils.material.updateMapMaterialFromData(materialKey, key, this, data);\n        continue;\n      }\n      variables[key].value = this.parseValue(schema[key].type, data[key]);\n      variables[key].needsUpdate = true;\n    }\n  },\n\n  parseValue: function (type, value) {\n    var color;\n    switch (type) {\n      case 'vec2': {\n        return new THREE.Vector2(value.x, value.y);\n      }\n      case 'vec3': {\n        return new THREE.Vector3(value.x, value.y, value.z);\n      }\n      case 'vec4': {\n        return new THREE.Vector4(value.x, value.y, value.z, value.w);\n      }\n      case 'color': {\n        color = new THREE.Color(value);\n        return new THREE.Vector3(color.r, color.g, color.b);\n      }\n      case 'map': {\n        return THREE.ImageUtils.loadTexture(value);\n      }\n      default: {\n        return value;\n      }\n    }\n  },\n\n  setMapOnTextureLoad: function (variables, key, materialKey) {\n    var self = this;\n    this.el.addEventListener('materialtextureloaded', function () {\n      variables[key].value = self.material[materialKey];\n      variables[key].needsUpdate = true;\n    });\n  }\n};\n\n/**\n * Registers a shader to A-Frame.\n *\n * @param {string} name - shader name.\n * @param {object} definition - shader property and methods.\n * @returns {object} Shader.\n */\nmodule.exports.registerShader = function (name, definition) {\n  var NewShader;\n  var proto = {};\n\n  // Format definition object to prototype object.\n  Object.keys(definition).forEach(function (key) {\n    proto[key] = {\n      value: definition[key],\n      writable: true\n    };\n  });\n\n  if (shaders[name]) {\n    throw new Error('The shader ' + name + ' has been already registered');\n  }\n  NewShader = function () { Shader.call(this); };\n  NewShader.prototype = Object.create(Shader.prototype, proto);\n  NewShader.prototype.name = name;\n  NewShader.prototype.constructor = NewShader;\n  shaders[name] = {\n    Shader: NewShader,\n    schema: processSchema(NewShader.prototype.schema)\n  };\n  shaderNames.push(name);\n  return NewShader;\n};\n","var debugLib = require('debug');\nvar extend = require('object-assign');\n\nvar settings = {\n  colors: {\n    debug: 'gray',\n    error: 'red',\n    info: 'gray',\n    warn: 'orange'\n  }\n};\n\n/**\n * Monkeypatches `debug` so we can colorize error/warning messages.\n *\n * (See issue: https://github.com/visionmedia/debug/issues/137)\n */\nvar debug = function (namespace) {\n  var d = debugLib(namespace);\n\n  d.color = getDebugNamespaceColor(namespace);\n\n  return d;\n};\nextend(debug, debugLib);\n\n/**\n * Returns the type of the namespace (e.g., `error`, `warn`).\n *\n * @param {String} namespace\n *   The debug logger's namespace (e.g., `components:geometry:warn`).\n * @returns {String} The type of the namespace (e.g., `warn`).\n * @api private\n */\nfunction getDebugNamespaceType (namespace) {\n  var chunks = namespace.split(':');\n\n  return chunks[chunks.length - 1];  // Return the last one\n}\n\n/**\n * Returns the color of the namespace (e.g., `orange`).\n *\n * @param {String} namespace\n *   The debug logger's namespace (e.g., `components:geometry:warn`).\n * @returns {String} The color of the namespace (e.g., `orange`).\n * @api private\n */\nfunction getDebugNamespaceColor (namespace) {\n  var type = getDebugNamespaceType(namespace);\n\n  var color = settings.colors && settings.colors[type];\n\n  return color || null;\n}\n\n/**\n * Returns `localStorage` if possible.\n *\n * This is necessary because Safari throws when a user disables\n * cookies or `localStorage` and you attempt to access it.\n *\n * @returns {localStorage}\n * @api private\n */\nfunction storage () {\n  try {\n    return window.localStorage;\n  } catch (e) {\n  }\n}\n\n/**\n * To enable console logging, type this in the Console of your Dev Tools:\n *\n *   localStorage.logs = 1\n *\n * To disable console logging:\n *\n *   localStorage.logs = 0\n *\n */\nvar ls = storage();\nif (ls && (parseInt(ls.logs, 10) || ls.logs === 'true')) {\n  debug.enable('*');\n} else {\n  debug.enable('*:error,*:info,*:warn');\n}\n\nif (process.browser) { window.logs = debug; }\n\nmodule.exports = debug;\n","module.exports = {\n  GRAVITY: -9.8,\n  MAX_INTERVAL: 4 / 60,\n  ITERATIONS: 10,\n  ACTIVATION_STATE: {\n    ACTIVE_TAG: \"active\",\n    ISLAND_SLEEPING: \"islandSleeping\",\n    WANTS_DEACTIVATION: \"wantsDeactivation\",\n    DISABLE_DEACTIVATION: \"disableDeactivation\",\n    DISABLE_SIMULATION: \"disableSimulation\"\n  },\n  COLLISION_FLAG: {\n    STATIC_OBJECT: 1,\n    KINEMATIC_OBJECT: 2,\n    NO_CONTACT_RESPONSE: 4,\n    CUSTOM_MATERIAL_CALLBACK: 8, //this allows per-triangle material (friction/restitution)\n    CHARACTER_OBJECT: 16,\n    DISABLE_VISUALIZE_OBJECT: 32, //disable debug drawing\n    DISABLE_SPU_COLLISION_PROCESSING: 64 //disable parallel/SPU processing\n  },\n  TYPE: {\n    STATIC: \"static\",\n    DYNAMIC: \"dynamic\",\n    KINEMATIC: \"kinematic\"\n  },\n  SHAPE: {\n    BOX: \"box\",\n    CYLINDER: \"cylinder\",\n    SPHERE: \"sphere\",\n    CAPSULE: \"capsule\",\n    CONE: \"cone\",\n    HULL: \"hull\",\n    HACD: \"hacd\",\n    VHACD: \"vhacd\",\n    MESH: \"mesh\",\n    HEIGHTFIELD: \"heightfield\"\n  },\n  FIT: {\n    ALL: \"all\",\n    MANUAL: \"manual\"\n  },\n  CONSTRAINT: {\n    LOCK: \"lock\",\n    FIXED: \"fixed\",\n    SPRING: \"spring\",\n    SLIDER: \"slider\",\n    HINGE: \"hinge\",\n    CONE_TWIST: \"coneTwist\",\n    POINT_TO_POINT: \"pointToPoint\"\n  }\n};\n","/*\n  ------------------------------------------------------------\n  ------------- WARNING WARNING WARNING WARNING --------------\n  ------------------------------------------------------------\n\n  This module wraps registerElement to deal with components that inherit from\n  `ANode` and `AEntity`.  It's a pass through in any other case.\n\n  It wraps some of the prototype methods of the created element to make sure\n  that the corresponding functions in the base prototypes (`AEntity` and `ANode`)\n  are also invoked. The method in the base prototype is always called before the one\n  in the derived prototype.\n*/\n\n// Polyfill `document.registerElement`.\nrequire('document-register-element');\n\nvar ANode;  // Must declare before AEntity. Initialized at the bottom.\nvar AEntity;\nvar knownTags = module.exports.knownTags = {};\n\nfunction addTagName (tagName) {\n  knownTags[tagName.toLowerCase()] = true;\n}\n\n/**\n * Return whether the element type is one of our known registered ones.\n *\n * @param {string} node - The name of the tag to register.\n * @returns {boolean} Whether the tag name matches that of our registered custom elements.\n */\nmodule.exports.isNode = function (node) {\n  return node.tagName.toLowerCase() in knownTags || node.isNode;\n};\n\n/**\n * @param {string} tagName - The name of the tag to register.\n * @param {object} obj - The prototype of the new element.\n * @returns {object} The prototype of the new element.\n */\nmodule.exports.registerElement = function (tagName, obj) {\n  var proto = Object.getPrototypeOf(obj.prototype);\n  var newObj = obj;\n  var isANode = ANode && proto === ANode.prototype;\n  var isAEntity = AEntity && proto === AEntity.prototype;\n\n  if (isANode || isAEntity) { addTagName(tagName); }\n\n  // Wrap if element inherits from `ANode`.\n  if (isANode) {\n    newObj = wrapANodeMethods(obj.prototype);\n    newObj = {prototype: Object.create(proto, newObj)};\n  }\n\n  // Wrap if element inherits from `AEntity`.\n  if (isAEntity) {\n    newObj = wrapAEntityMethods(obj.prototype);\n    newObj = {prototype: Object.create(proto, newObj)};\n  }\n\n  // Give all functions their proper name.\n  Object.getOwnPropertyNames(newObj.prototype).forEach(function (propName) {\n    var propVal = newObj.prototype[propName];\n    if (typeof propVal === 'function') {\n      propVal.displayName = propName;\n    }\n  });\n\n  return document.registerElement(tagName, newObj);\n};\n\n/**\n * Wrap some obj methods to call those on `ANode` base prototype.\n *\n * @param {object} obj - Object that contains the methods that will be wrapped.\n * @return {object} An object with the same properties as the input parameter but\n * with some of methods wrapped.\n */\nfunction wrapANodeMethods (obj) {\n  var newObj = {};\n  var ANodeMethods = [\n    'attachedCallback',\n    'attributeChangedCallback',\n    'createdCallback',\n    'detachedCallback'\n  ];\n  wrapMethods(newObj, ANodeMethods, obj, ANode.prototype);\n  copyProperties(obj, newObj);\n  return newObj;\n}\n\n/**\n * This wraps some of the obj methods to call those on `AEntity` base prototype.\n *\n * @param {object} obj - The objects that contains the methods that will be wrapped.\n * @return {object} - An object with the same properties as the input parameter but\n * with some of methods wrapped.\n */\nfunction wrapAEntityMethods (obj) {\n  var newObj = {};\n  var ANodeMethods = [\n    'attachedCallback',\n    'attributeChangedCallback',\n    'createdCallback',\n    'detachedCallback'\n  ];\n  var AEntityMethods = [\n    'attachedCallback',\n    'attributeChangedCallback',\n    'createdCallback',\n    'detachedCallback'\n  ];\n\n  wrapMethods(newObj, ANodeMethods, obj, ANode.prototype);\n  wrapMethods(newObj, AEntityMethods, obj, AEntity.prototype);\n  // Copies the remaining properties into the new object.\n  copyProperties(obj, newObj);\n  return newObj;\n}\n\n/**\n * Wrap a list a methods to ensure that those in the base prototype are called\n * before the derived one.\n *\n * @param {object} targetObj - Object that will contain the wrapped methods.\n * @param {array} methodList - List of methods from the derivedObj that will be wrapped.\n * @param {object} derivedObject - Object that inherits from the baseObj.\n * @param {object} baseObj - Object that derivedObj inherits from.\n */\nfunction wrapMethods (targetObj, methodList, derivedObj, baseObj) {\n  methodList.forEach(function (methodName) {\n    wrapMethod(targetObj, methodName, derivedObj, baseObj);\n  });\n}\nmodule.exports.wrapMethods = wrapMethods;\n\n/**\n * Wrap one method to ensure that the one in the base prototype is called before\n * the one in the derived one.\n *\n * @param {object} obj - Object that will contain the wrapped method.\n * @param {string} methodName - The name of the method that will be wrapped.\n * @param {object} derivedObject - Object that inherits from the baseObj.\n * @param {object} baseObj - Object that derivedObj inherits from.\n */\nfunction wrapMethod (obj, methodName, derivedObj, baseObj) {\n  var derivedMethod = derivedObj[methodName];\n  var baseMethod = baseObj[methodName];\n\n  // Derived prototype does not define method, no need to wrap.\n  if (!derivedMethod || !baseMethod) { return; }\n\n  // Derived prototype doesn't override the one in the base one, no need to wrap.\n  if (derivedMethod === baseMethod) { return; }\n\n  // Wrap to ensure the base method is called before the one in the derived prototype.\n  obj[methodName] = {\n    value: function wrappedMethod () {\n      baseMethod.apply(this, arguments);\n      return derivedMethod.apply(this, arguments);\n    },\n    writable: window.debug\n  };\n}\n\n/**\n * It copies the properties from source to destination object if they don't\n * exist already.\n *\n * @param {object} source - The object where properties are copied from.\n * @param {type} destination - The object where properties are copied to.\n */\nfunction copyProperties (source, destination) {\n  var props = Object.getOwnPropertyNames(source);\n  props.forEach(function (prop) {\n    var desc;\n    if (!destination[prop]) {\n      desc = Object.getOwnPropertyDescriptor(source, prop);\n      destination[prop] = {value: source[prop], writable: desc.writable};\n    }\n  });\n}\n\nANode = require('./a-node');\nAEntity = require('./a-entity');\n","/**\n * Common mesh defaults, mappings, and transforms.\n */\nvar components = require('../../core/component').components;\nvar shaders = require('../../core/shader').shaders;\nvar utils = require('../../utils/');\n\nvar materialMappings = {};\nObject.keys(components.material.schema).forEach(addMapping);\nObject.keys(shaders.standard.schema).forEach(addMapping);\n\nfunction addMapping (prop) {\n  // To hyphenated.\n  var htmlAttrName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  if (prop === 'fog') { htmlAttrName = 'material-fog'; }\n  if (prop === 'visible') { htmlAttrName = 'material-visible'; }\n  materialMappings[htmlAttrName] = 'material.' + prop;\n}\n\nmodule.exports = function getMeshMixin () {\n  return {\n    defaultComponents: {material: {}},\n    mappings: utils.extend({}, materialMappings)\n  };\n};\n","import { Vector3, Vector2, Triangle, DoubleSide, BackSide, Face3 } from 'three';\r\n\r\n// Ripped and modified From THREE.js Mesh raycast\r\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L115\r\nvar vA = new Vector3();\r\nvar vB = new Vector3();\r\nvar vC = new Vector3();\r\n\r\nvar uvA = new Vector2();\r\nvar uvB = new Vector2();\r\nvar uvC = new Vector2();\r\n\r\nvar intersectionPoint = new Vector3();\r\nvar intersectionPointWorld = new Vector3();\r\n\r\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\tvar intersect;\r\n\tif ( material.side === BackSide ) {\r\n\r\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t} else {\r\n\r\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\r\n\r\n\t}\r\n\r\n\tif ( intersect === null ) return null;\r\n\r\n\tintersectionPointWorld.copy( point );\r\n\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\treturn {\r\n\t\tdistance: distance,\r\n\t\tpoint: intersectionPointWorld.clone(),\r\n\t\tobject: object\r\n\t};\r\n\r\n}\r\n\r\nfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\r\n\r\n\tvA.fromBufferAttribute( position, a );\r\n\tvB.fromBufferAttribute( position, b );\r\n\tvC.fromBufferAttribute( position, c );\r\n\r\n\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n\tif ( intersection ) {\r\n\r\n\t\tif ( uv ) {\r\n\r\n\t\t\tuvA.fromBufferAttribute( uv, a );\r\n\t\t\tuvB.fromBufferAttribute( uv, b );\r\n\t\t\tuvC.fromBufferAttribute( uv, c );\r\n\r\n\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2( ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = new Vector3();\r\n\t\tintersection.face = new Face3( a, b, c, Triangle.getNormal( vA, vB, vC, normal ) );\r\n\t\tintersection.faceIndex = a;\r\n\r\n\t}\r\n\r\n\treturn intersection;\r\n\r\n}\r\n\r\n\r\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L258\r\nfunction intersectTri( mesh, geo, raycaster, ray, tri, intersections ) {\r\n\r\n\tconst triOffset = tri * 3;\r\n\tconst a = geo.index.getX( triOffset );\r\n\tconst b = geo.index.getX( triOffset + 1 );\r\n\tconst c = geo.index.getX( triOffset + 2 );\r\n\r\n\tconst intersection = checkBufferGeometryIntersection( mesh, raycaster, ray, geo.attributes.position, geo.attributes.uv, a, b, c );\r\n\r\n\tif ( intersection ) {\r\n\r\n\t\tintersection.faceIndex = tri;\r\n\t\tif ( intersections ) intersections.push( intersection );\r\n\t\treturn intersection;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n};\r\n\r\nexport { intersectTri };\r\n","// Returns a Float32Array representing the bounds data for box.\r\nexport function boxToArray( bx ) {\r\n\r\n\tconst arr = new Float32Array( 6 );\r\n\r\n\tarr[ 0 ] = bx.min.x;\r\n\tarr[ 1 ] = bx.min.y;\r\n\tarr[ 2 ] = bx.min.z;\r\n\r\n\tarr[ 3 ] = bx.max.x;\r\n\tarr[ 4 ] = bx.max.y;\r\n\tarr[ 5 ] = bx.max.z;\r\n\r\n\treturn arr;\r\n\r\n}\r\n\r\nexport function arrayToBox( arr, target ) {\r\n\r\n\ttarget.min.x = arr[ 0 ];\r\n\ttarget.min.y = arr[ 1 ];\r\n\ttarget.min.z = arr[ 2 ];\r\n\r\n\ttarget.max.x = arr[ 3 ];\r\n\ttarget.max.y = arr[ 4 ];\r\n\ttarget.max.z = arr[ 5 ];\r\n\r\n\treturn target;\r\n\r\n}\r\n\r\nexport function getLongestEdgeIndex( bounds ) {\r\n\r\n\tlet splitDimIdx = - 1;\r\n\tlet splitDist = - Infinity;\r\n\r\n\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\tconst dist = bounds[ i + 3 ] - bounds[ i ];\r\n\t\tif ( dist > splitDist ) {\r\n\r\n\t\t\tsplitDist = dist;\r\n\t\t\tsplitDimIdx = i;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn splitDimIdx;\r\n\r\n}\r\n","import { Vector3 } from 'three';\r\n\r\nexport class SeparatingAxisBounds {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.min = Infinity;\r\n\t\tthis.max = - Infinity;\r\n\r\n\t}\r\n\r\n\tsetFromPointsField( points, field ) {\r\n\r\n\t\tlet min = Infinity;\r\n\t\tlet max = - Infinity;\r\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst p = points[ i ];\r\n\t\t\tconst val = p[ field ];\r\n\t\t\tmin = Math.min( val, min );\r\n\t\t\tmax = Math.max( val, max );\r\n\r\n\t\t}\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\r\n\t}\r\n\r\n\tsetFromPoints( axis, points ) {\r\n\r\n\t\tlet min = Infinity;\r\n\t\tlet max = - Infinity;\r\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst p = points[ i ];\r\n\t\t\tconst val = axis.dot( p );\r\n\t\t\tmin = Math.min( val, min );\r\n\t\t\tmax = Math.max( val, max );\r\n\r\n\t\t}\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tisSeparated( other ) {\r\n\r\n\t\treturn this.min > other.max || other.min > this.max;\r\n\r\n\t}\r\n\r\n}\r\n\r\nSeparatingAxisBounds.prototype.setFromBox = ( function () {\r\n\r\n\tconst p = new Vector3();\r\n\treturn function setFromBox( axis, box ) {\r\n\r\n\t\tconst boxMin = box.min;\r\n\t\tconst boxMax = box.max;\r\n\t\tlet min = Infinity;\r\n\t\tlet max = - Infinity;\r\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\r\n\r\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\r\n\r\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\r\n\r\n\t\t\t\t\tp.x = boxMin.x * x + boxMax.x * ( 1 - x );\r\n\t\t\t\t\tp.y = boxMin.y * y + boxMax.y * ( 1 - y );\r\n\t\t\t\t\tp.z = boxMin.z * z + boxMax.z * ( 1 - z );\r\n\r\n\t\t\t\t\tconst val = axis.dot( p );\r\n\t\t\t\t\tmin = Math.min( val, min );\r\n\t\t\t\t\tmax = Math.max( val, max );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nexport const areIntersecting = ( function () {\r\n\r\n\tconst cacheSatBounds = new SeparatingAxisBounds();\r\n\treturn function areIntersecting( shape1, shape2 ) {\r\n\r\n\t\tconst points1 = shape1.points;\r\n\t\tconst satAxes1 = shape1.satAxes;\r\n\t\tconst satBounds1 = shape1.satBounds;\r\n\r\n\t\tconst points2 = shape2.points;\r\n\t\tconst satAxes2 = shape2.satAxes;\r\n\t\tconst satBounds2 = shape2.satBounds;\r\n\r\n\t\t// check axes of the first shape\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sb = satBounds1[ i ];\r\n\t\t\tconst sa = satAxes1[ i ];\r\n\t\t\tcacheSatBounds.setFromPoints( sa, points2 );\r\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\t// check axes of the second shape\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sb = satBounds2[ i ];\r\n\t\t\tconst sa = satAxes2[ i ];\r\n\t\t\tcacheSatBounds.setFromPoints( sa, points1 );\r\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n","import { Vector3, Vector2, Plane, Line3 } from 'three';\nexport const closestPointLineToLine = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/Line.cpp#L56\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst v02 = new Vector3();\n\treturn function closestPointLineToLine( l1, l2, result ) {\n\n\t\tconst v0 = l1.start;\n\t\tconst v10 = dir1;\n\t\tconst v2 = l2.start;\n\t\tconst v32 = dir2;\n\n\t\tv02.subVectors( v0, v2 );\n\t\tdir1.subVectors( l1.end, l2.start );\n\t\tdir2.subVectors( l2.end, l2.start );\n\n\t\t// float d0232 = v02.Dot(v32);\n\t\tconst d0232 = v02.dot( v32 );\n\n\t\t// float d3210 = v32.Dot(v10);\n\t\tconst d3210 = v32.dot( v10 );\n\n\t\t// float d3232 = v32.Dot(v32);\n\t\tconst d3232 = v32.dot( v32 );\n\n\t\t// float d0210 = v02.Dot(v10);\n\t\tconst d0210 = v02.dot( v10 );\n\n\t\t// float d1010 = v10.Dot(v10);\n\t\tconst d1010 = v10.dot( v10 );\n\n\t\t// float denom = d1010*d3232 - d3210*d3210;\n\t\tconst denom = d1010 * d3232 - d3210 * d3210;\n\n\t\tlet d, d2;\n\t\tif ( denom !== 0 ) {\n\n\t\t\td = ( d0232 * d3210 - d0210 * d3232 ) / denom;\n\n\t\t} else {\n\n\t\t\td = 0;\n\n\t\t}\n\n\t\td2 = ( d0232 + d * d3210 ) / d3232;\n\n\t\tresult.x = d;\n\t\tresult.y = d2;\n\n\t};\n\n} )();\n\nexport const closestPointsSegmentToSegment = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/LineSegment.cpp#L187\n\tconst paramResult = new Vector2();\n\tconst temp1 = new Vector3();\n\tconst temp2 = new Vector3();\n\treturn function closestPointsSegmentToSegment( l1, l2, target1, target2 ) {\n\n\t\tclosestPointLineToLine( l1, l2, paramResult );\n\n\t\tlet d = paramResult.x;\n\t\tlet d2 = paramResult.y;\n\t\tif ( d >= 0 && d <= 1 && d2 >= 0 && d2 <= 1 ) {\n\n\t\t\tl1.at( d, target1 );\n\t\t\tl2.at( d2, target2 );\n\n\t\t\treturn;\n\n\t\t} else if ( d >= 0 && d <= 1 ) {\n\n\t\t\t// Only d2 is out of bounds.\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tl2.at( 0, target2 );\n\n\t\t\t} else {\n\n\t\t\t\tl2.at( 1, target2 );\n\n\t\t\t}\n\n\t\t\tl1.closestPointToPoint( target2, true, target1 );\n\t\t\treturn;\n\n\t\t} else if ( d2 >= 0 && d2 <= 1 ) {\n\n\t\t\t// Only d is out of bounds.\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tl1.at( 0, target1 );\n\n\t\t\t} else {\n\n\t\t\t\tl1.at( 1, target1 );\n\n\t\t\t}\n\n\t\t\tl2.closestPointToPoint( target1, true, target2 );\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// Both u and u2 are out of bounds.\n\t\t\tlet p;\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tp = l1.start;\n\n\t\t\t} else {\n\n\t\t\t\tp = l1.end;\n\n\t\t\t}\n\n\t\t\tlet p2;\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tp2 = l2.start;\n\n\t\t\t} else {\n\n\t\t\t\tp2 = l2.end;\n\n\t\t\t}\n\n\t\t\tconst closestPoint = temp1;\n\t\t\tconst closestPoint2 = temp2;\n\t\t\tl1.closestPointToPoint( p2, true, temp1 );\n\t\t\tl2.closestPointToPoint( p, true, temp2 );\n\n\t\t\tif ( closestPoint.distanceToSquared( p2 ) <= closestPoint2.distanceToSquared( p ) ) {\n\n\t\t\t\ttarget1.copy( closestPoint );\n\t\t\t\ttarget2.copy( p2 );\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\ttarget1.copy( p );\n\t\t\t\ttarget2.copy( closestPoint2 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n} )();\n\n\nexport const sphereIntersectTriangle = ( function () {\n\n\t// https://stackoverflow.com/questions/34043955/detect-collision-between-sphere-and-triangle-in-three-js\n\tconst closestPointTemp = new Vector3();\n\tconst projectedPointTemp = new Vector3();\n\tconst planeTemp = new Plane();\n\tconst lineTemp = new Line3();\n\treturn function sphereIntersectTriangle( sphere, triangle ) {\n\n\t\tconst { radius, center } = sphere;\n\t\tconst { a, b, c } = triangle;\n\n\t\t// phase 1\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = b;\n\t\tconst closestPoint1 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint1.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint2 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint2.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = b;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint3 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint3.distanceTo( center ) <= radius ) return true;\n\n\t\t// phase 2\n\t\tconst plane = triangle.getPlane( planeTemp );\n\t\tconst dp = Math.abs( plane.distanceToPoint( center ) );\n\t\tif ( dp <= radius ) {\n\n\t\t\tconst pp = plane.projectPoint( center, projectedPointTemp );\n\t\t\tconst cp = triangle.containsPoint( pp );\n\t\t\tif ( cp ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t};\n\n} )();\n","import { Triangle, Vector3, Line3, Sphere } from 'three';\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\nimport { closestPointsSegmentToSegment } from './MathUtilities.js';\n\nexport class SeparatingAxisTriangle extends Triangle {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tthis.isSeparatingAxisTriangle = true;\n\t\tthis.satAxes = new Array( 4 ).fill().map( () => new Vector3() );\n\t\tthis.satBounds = new Array( 4 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.points = [ this.a, this.b, this.c ];\n\t\tthis.sphere = new Sphere();\n\n\t}\n\n}\n\nSeparatingAxisTriangle.prototype.update = ( function () {\n\n\tconst arr = new Array( 3 );\n\treturn function update( ) {\n\n\t\tconst a = this.a;\n\t\tconst b = this.b;\n\t\tconst c = this.c;\n\n\t\tarr[ 0 ] = this.a;\n\t\tarr[ 1 ] = this.b;\n\t\tarr[ 2 ] = this.c;\n\n\t\tconst satAxes = this.satAxes;\n\t\tconst satBounds = this.satBounds;\n\n\t\tconst axis0 = satAxes[ 0 ];\n\t\tconst sab0 = satBounds[ 0 ];\n\t\tthis.getNormal( axis0 );\n\t\tsab0.setFromPoints( axis0, arr );\n\n\t\tconst axis1 = satAxes[ 1 ];\n\t\tconst sab1 = satBounds[ 1 ];\n\t\taxis1.subVectors( a, b );\n\t\tsab1.setFromPoints( axis1, arr );\n\n\t\tconst axis2 = satAxes[ 2 ];\n\t\tconst sab2 = satBounds[ 2 ];\n\t\taxis2.subVectors( b, c );\n\t\tsab2.setFromPoints( axis2, arr );\n\n\t\tconst axis3 = satAxes[ 3 ];\n\t\tconst sab3 = satBounds[ 3 ];\n\t\taxis3.subVectors( c, a );\n\t\tsab3.setFromPoints( axis3, arr );\n\n\t\tthis.sphere.setFromPoints( this.points );\n\n\t};\n\n} )();\n\nSeparatingAxisTriangle.prototype.intersectsTriangle = ( function () {\n\n\tconst saTri2 = new SeparatingAxisTriangle();\n\tconst arr1 = new Array( 3 );\n\tconst arr2 = new Array( 3 );\n\tconst cachedSatBounds = new SeparatingAxisBounds();\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\n\tconst cachedAxis = new Vector3();\n\treturn function intersectsTriangle( other ) {\n\n\t\tif ( ! other.isSeparatingAxisTriangle ) {\n\n\t\t\tsaTri2.copy( other );\n\t\t\tsaTri2.update();\n\t\t\tother = saTri2;\n\n\t\t}\n\n\t\tconst satBounds1 = this.satBounds;\n\t\tconst satAxes1 = this.satAxes;\n\t\tarr2[ 0 ] = other.a;\n\t\tarr2[ 1 ] = other.b;\n\t\tarr2[ 2 ] = other.c;\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst sb = satBounds1[ i ];\n\t\t\tconst sa = satAxes1[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, arr2 );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\tconst satBounds2 = other.satBounds;\n\t\tconst satAxes2 = other.satAxes;\n\t\tarr1[ 0 ] = this.a;\n\t\tarr1[ 1 ] = this.b;\n\t\tarr1[ 2 ] = this.c;\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst sb = satBounds2[ i ];\n\t\t\tconst sa = satAxes2[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, arr1 );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\t// check crossed axes\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst sa1 = satAxes1[ i ];\n\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\n\n\t\t\t\tconst sa2 = satAxes2[ i2 ];\n\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\n\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, arr1 );\n\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, arr2 );\n\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n} )();\n\n\nSeparatingAxisTriangle.prototype.distanceToPoint = ( function () {\n\n\tconst target = new Vector3();\n\treturn function distanceToPoint( point ) {\n\n\t\tthis.closestPointToPoint( point, target );\n\t\treturn point.distanceTo( target );\n\n\t};\n\n} )();\n\n\nSeparatingAxisTriangle.prototype.distanceToTriangle = ( function () {\n\n\tconst point = new Vector3();\n\tconst point2 = new Vector3();\n\tconst cornerFields = [ 'a', 'b', 'c' ];\n\tconst line1 = new Line3();\n\tconst line2 = new Line3();\n\n\treturn function distanceToTriangle( other, target1 = null, target2 = null ) {\n\n\t\tif ( this.intersectsTriangle( other ) ) {\n\n\t\t\t// TODO: This will not result in a point that lies on\n\t\t\t// the intersection line of the triangles\n\t\t\tif ( target1 || target2 ) {\n\n\t\t\t\tthis.getMidpoint( point );\n\t\t\t\tother.closestPointToPoint( point, point2 );\n\t\t\t\tthis.closestPointToPoint( point2, point );\n\n\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check all point distances\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tlet dist;\n\t\t\tconst field = cornerFields[ i ];\n\t\t\tconst otherVec = other[ field ];\n\t\t\tthis.closestPointToPoint( otherVec, point );\n\n\t\t\tdist = otherVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\tif ( target2 ) target2.copy( otherVec );\n\n\t\t\t}\n\n\n\t\t\tconst thisVec = this[ field ];\n\t\t\tother.closestPointToPoint( thisVec, point );\n\n\t\t\tdist = thisVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( thisVec );\n\t\t\t\tif ( target2 ) target2.copy( point );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst f11 = cornerFields[ i ];\n\t\t\tconst f12 = cornerFields[ ( i + 1 ) % 3 ];\n\t\t\tline1.set( this[ f11 ], this[ f12 ] );\n\t\t\tfor ( let i2 = 0; i2 < 3; i2 ++ ) {\n\n\t\t\t\tconst f21 = cornerFields[ i2 ];\n\t\t\t\tconst f22 = cornerFields[ ( i2 + 1 ) % 3 ];\n\t\t\t\tline2.set( other[ f21 ], other[ f22 ] );\n\n\t\t\t\tclosestPointsSegmentToSegment( line1, line2, point, point2 );\n\n\t\t\t\tconst dist = point.distanceToSquared( point2 );\n\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n\n","import { Box3, Vector3, Matrix4, Sphere, Line3 } from 'three';\r\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\r\nimport { SeparatingAxisTriangle } from './SeparatingAxisTriangle.js';\r\nimport { closestPointsSegmentToSegment } from './MathUtilities.js';\r\n\r\nexport class OrientedBox extends Box3 {\r\n\r\n\tconstructor( ...args ) {\r\n\r\n\t\tsuper( ...args );\r\n\r\n\t\tthis.isOrientedBox = true;\r\n\t\tthis.matrix = new Matrix4();\r\n\t\tthis.invMatrix = new Matrix4();\r\n\t\tthis.points = new Array( 8 ).fill().map( () => new Vector3() );\r\n\t\tthis.satAxes = new Array( 3 ).fill().map( () => new Vector3() );\r\n\t\tthis.satBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\r\n\t\tthis.alignedSatBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\r\n\t\tthis.sphere = new Sphere();\r\n\r\n\t}\r\n\r\n\tset( min, max, matrix ) {\r\n\r\n\t\tsuper.set( min, max );\r\n\t\tthis.matrix = matrix;\r\n\r\n\t}\r\n\r\n\tcopy( other ) {\r\n\r\n\t\tsuper.copy( other );\r\n\t\tthis.matrix.copy( other.matrix );\r\n\r\n\t}\r\n\r\n}\r\n\r\nOrientedBox.prototype.update = ( function () {\r\n\r\n\treturn function update() {\r\n\r\n\t\tconst matrix = this.matrix;\r\n\t\tconst min = this.min;\r\n\t\tconst max = this.max;\r\n\r\n\t\tconst points = this.points;\r\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\r\n\r\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\r\n\r\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\r\n\r\n\t\t\t\t\tconst i = ( ( 1 << 0 ) * x ) | ( ( 1 << 1 ) * y ) | ( ( 1 << 2 ) * z );\r\n\t\t\t\t\tconst v = points[ i ];\r\n\t\t\t\t\tv.x = x ? max.x : min.x;\r\n\t\t\t\t\tv.y = y ? max.y : min.y;\r\n\t\t\t\t\tv.z = z ? max.z : min.z;\r\n\r\n\t\t\t\t\tv.applyMatrix4( matrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.sphere.setFromPoints( this.points );\r\n\r\n\t\tconst satBounds = this.satBounds;\r\n\t\tconst satAxes = this.satAxes;\r\n\t\tconst minVec = points[ 0 ];\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst axis = satAxes[ i ];\r\n\t\t\tconst sb = satBounds[ i ];\r\n\t\t\tconst index = 1 << i;\r\n\t\t\tconst pi = points[ index ];\r\n\r\n\t\t\taxis.subVectors( minVec, pi );\r\n\t\t\tsb.setFromPoints( axis, points );\r\n\r\n\t\t}\r\n\r\n\t\tconst alignedSatBounds = this.alignedSatBounds;\r\n\t\talignedSatBounds[ 0 ].setFromPointsField( points, 'x' );\r\n\t\talignedSatBounds[ 1 ].setFromPointsField( points, 'y' );\r\n\t\talignedSatBounds[ 2 ].setFromPointsField( points, 'z' );\r\n\r\n\t\tthis.invMatrix.getInverse( this.matrix );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nOrientedBox.prototype.intersectsBox = ( function () {\r\n\r\n\tconst aabbBounds = new SeparatingAxisBounds();\r\n\treturn function intersectsBox( box ) {\r\n\r\n\t\tif ( ! box.intersectsSphere( this.sphere ) ) return false;\r\n\r\n\t\tconst min = box.min;\r\n\t\tconst max = box.max;\r\n\t\tconst satBounds = this.satBounds;\r\n\t\tconst satAxes = this.satAxes;\r\n\t\tconst alignedSatBounds = this.alignedSatBounds;\r\n\r\n\t\taabbBounds.min = min.x;\r\n\t\taabbBounds.max = max.x;\r\n\t\tif ( alignedSatBounds[ 0 ].isSeparated( aabbBounds ) ) return false;\r\n\r\n\t\taabbBounds.min = min.y;\r\n\t\taabbBounds.max = max.y;\r\n\t\tif ( alignedSatBounds[ 1 ].isSeparated( aabbBounds ) ) return false;\r\n\r\n\t\taabbBounds.min = min.z;\r\n\t\taabbBounds.max = max.z;\r\n\t\tif ( alignedSatBounds[ 2 ].isSeparated( aabbBounds ) ) return false;\r\n\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst axis = satAxes[ i ];\r\n\t\t\tconst sb = satBounds[ i ];\r\n\t\t\taabbBounds.setFromBox( axis, box );\r\n\t\t\tif ( sb.isSeparated( aabbBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nOrientedBox.prototype.intersectsTriangle = ( function () {\r\n\r\n\tconst saTri = new SeparatingAxisTriangle();\r\n\tconst pointsArr = new Array( 3 );\r\n\tconst cachedSatBounds = new SeparatingAxisBounds();\r\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\r\n\tconst cachedAxis = new Vector3();\r\n\treturn function intersectsTriangle( triangle ) {\r\n\r\n\t\tif ( ! triangle.isSeparatingAxisTriangle ) {\r\n\r\n\t\t\tsaTri.copy( triangle );\r\n\t\t\tsaTri.update();\r\n\t\t\ttriangle = saTri;\r\n\r\n\t\t}\r\n\r\n\t\tconst satBounds = this.satBounds;\r\n\t\tconst satAxes = this.satAxes;\r\n\r\n\t\tpointsArr[ 0 ] = triangle.a;\r\n\t\tpointsArr[ 1 ] = triangle.b;\r\n\t\tpointsArr[ 2 ] = triangle.c;\r\n\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sb = satBounds[ i ];\r\n\t\t\tconst sa = satAxes[ i ];\r\n\t\t\tcachedSatBounds.setFromPoints( sa, pointsArr );\r\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\tconst triSatBounds = triangle.satBounds;\r\n\t\tconst triSatAxes = triangle.satAxes;\r\n\t\tconst points = this.points;\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sb = triSatBounds[ i ];\r\n\t\t\tconst sa = triSatAxes[ i ];\r\n\t\t\tcachedSatBounds.setFromPoints( sa, points );\r\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\t// check crossed axes\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst sa1 = satAxes[ i ];\r\n\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\r\n\r\n\t\t\t\tconst sa2 = triSatAxes[ i2 ];\r\n\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\r\n\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, pointsArr );\r\n\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, points );\r\n\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nOrientedBox.prototype.closestPointToPoint = ( function () {\r\n\r\n\treturn function closestPointToPoint( point, target1 ) {\r\n\r\n\t\ttarget1\r\n\t\t\t.copy( point )\r\n\t\t\t.applyMatrix4( this.invMatrix )\r\n\t\t\t.clamp( this.min, this.max )\r\n\t\t\t.applyMatrix4( this.matrix );\r\n\r\n\t\treturn target1;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nOrientedBox.prototype.distanceToPoint = ( function () {\r\n\r\n\tconst target = new Vector3();\r\n\treturn function distanceToPoint( point ) {\r\n\r\n\t\tthis.closestPointToPoint( point, target );\r\n\t\treturn point.distanceTo( target );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n\r\nOrientedBox.prototype.distanceToBox = ( function () {\r\n\r\n\tconst xyzFields = [ 'x', 'y', 'z' ];\r\n\tconst segments1 = new Array( 12 ).fill().map( () => new Line3() );\r\n\tconst segments2 = new Array( 12 ).fill().map( () => new Line3() );\r\n\r\n\tconst point1 = new Vector3();\r\n\tconst point2 = new Vector3();\r\n\r\n\treturn function distanceToBox( box, threshold = 0, target1 = null, target2 = null ) {\r\n\r\n\t\tif ( this.intersectsBox( box ) ) {\r\n\r\n\t\t\tif ( target1 || target2 ) {\r\n\r\n\t\t\t\tbox.getCenter( point2 );\r\n\t\t\t\tthis.closestPointToPoint( point2, point1 );\r\n\t\t\t\tbox.closestPointToPoint( point1, point2 );\r\n\r\n\t\t\t\tif ( target1 ) target1.copy( point1 );\r\n\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t\tconst threshold2 = threshold * threshold;\r\n\t\tconst min = box.min;\r\n\t\tconst max = box.max;\r\n\t\tconst points = this.points;\r\n\r\n\r\n\t\t// iterate over every edge and compare distances\r\n\t\tlet closestDistanceSq = Infinity;\r\n\r\n\t\t// check over all these points\r\n\t\tfor ( let i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tconst p = points[ i ];\r\n\t\t\tpoint2.copy( p ).clamp( min, max );\r\n\r\n\t\t\tconst dist = p.distanceToSquared( point2 );\r\n\t\t\tif ( dist < closestDistanceSq ) {\r\n\r\n\t\t\t\tclosestDistanceSq = dist;\r\n\t\t\t\tif ( target1 ) target1.copy( p );\r\n\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate and check all line segment distances\r\n\t\tlet count = 0;\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tfor ( let i1 = 0; i1 <= 1; i1 ++ ) {\r\n\r\n\t\t\t\tfor ( let i2 = 0; i2 <= 1; i2 ++ ) {\r\n\r\n\t\t\t\t\tconst nextIndex = ( i + 1 ) % 3;\r\n\t\t\t\t\tconst nextIndex2 = ( i + 2 ) % 3;\r\n\r\n\t\t\t\t\t// get obb line segments\r\n\t\t\t\t\tconst index = i1 << nextIndex | i2 << nextIndex2;\r\n\t\t\t\t\tconst index2 = 1 << i | i1 << nextIndex | i2 << nextIndex2;\r\n\t\t\t\t\tconst p1 = points[ index ];\r\n\t\t\t\t\tconst p2 = points[ index2 ];\r\n\t\t\t\t\tconst line1 = segments1[ count ];\r\n\t\t\t\t\tline1.set( p1, p2 );\r\n\r\n\r\n\t\t\t\t\t// get aabb line segments\r\n\t\t\t\t\tconst f1 = xyzFields[ i ];\r\n\t\t\t\t\tconst f2 = xyzFields[ nextIndex ];\r\n\t\t\t\t\tconst f3 = xyzFields[ nextIndex2 ];\r\n\t\t\t\t\tconst line2 = segments2[ count ];\r\n\t\t\t\t\tconst start = line2.start;\r\n\t\t\t\t\tconst end = line2.end;\r\n\r\n\t\t\t\t\tstart[ f1 ] = min[ f1 ];\r\n\t\t\t\t\tstart[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\r\n\t\t\t\t\tstart[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\r\n\r\n\t\t\t\t\tend[ f1 ] = max[ f1 ];\r\n\t\t\t\t\tend[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\r\n\t\t\t\t\tend[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\r\n\r\n\t\t\t\t\tcount ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// check all the other boxes point\r\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\r\n\r\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\r\n\r\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\r\n\r\n\t\t\t\t\tpoint2.x = x ? max.x : min.x;\r\n\t\t\t\t\tpoint2.y = y ? max.y : min.y;\r\n\t\t\t\t\tpoint2.z = z ? max.z : min.z;\r\n\r\n\t\t\t\t\tthis.closestPointToPoint( point2, point1 );\r\n\t\t\t\t\tconst dist = point2.distanceToSquared( point1 );\r\n\t\t\t\t\tif ( dist < closestDistanceSq ) {\r\n\r\n\t\t\t\t\t\tclosestDistanceSq = dist;\r\n\t\t\t\t\t\tif ( target1 ) target1.copy( point1 );\r\n\t\t\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < 12; i ++ ) {\r\n\r\n\t\t\tconst l1 = segments1[ i ];\r\n\t\t\tfor ( let i2 = 0; i2 < 12; i2 ++ ) {\r\n\r\n\t\t\t\tconst l2 = segments2[ i2 ];\r\n\t\t\t\tclosestPointsSegmentToSegment( l1, l2, point1, point2 );\r\n\t\t\t\tconst dist = point1.distanceToSquared( point2 );\r\n\t\t\t\tif ( dist < closestDistanceSq ) {\r\n\r\n\t\t\t\t\tclosestDistanceSq = dist;\r\n\t\t\t\t\tif ( target1 ) target1.copy( point1 );\r\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\r\n\r\n\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.sqrt( closestDistanceSq );\r\n\r\n\t};\r\n\r\n} )();\r\n","\r\nimport * as THREE from 'three';\r\nimport { intersectTris, intersectClosestTri } from './Utils/RayIntersectTriUtlities.js';\r\nimport { arrayToBox } from './Utils/ArrayBoxUtilities.js';\r\nimport { OrientedBox } from './Utils/OrientedBox.js';\r\nimport { SeparatingAxisTriangle } from './Utils/SeparatingAxisTriangle.js';\r\nimport { sphereIntersectTriangle } from './Utils/MathUtilities.js';\r\n\r\nconst boundingBox = new THREE.Box3();\r\nconst boxIntersection = new THREE.Vector3();\r\nconst xyzFields = [ 'x', 'y', 'z' ];\r\n\r\nfunction setTriangle( tri, i, index, pos ) {\r\n\r\n\tconst ta = tri.a;\r\n\tconst tb = tri.b;\r\n\tconst tc = tri.c;\r\n\r\n\tlet i3 = index.getX( i );\r\n\tta.x = pos.getX( i3 );\r\n\tta.y = pos.getY( i3 );\r\n\tta.z = pos.getZ( i3 );\r\n\r\n\ti3 = index.getX( i + 1 );\r\n\ttb.x = pos.getX( i3 );\r\n\ttb.y = pos.getY( i3 );\r\n\ttb.z = pos.getZ( i3 );\r\n\r\n\ti3 = index.getX( i + 2 );\r\n\ttc.x = pos.getX( i3 );\r\n\ttc.y = pos.getY( i3 );\r\n\ttc.z = pos.getZ( i3 );\r\n\r\n}\r\n\r\nexport default\r\nclass MeshBVHNode {\r\n\r\n\tconstructor() {\r\n\r\n\t\t// internal nodes have boundingData, left, right, and splitAxis\r\n\t\t// leaf nodes have offset and count (referring to primitives in the mesh geometry)\r\n\r\n\t}\r\n\r\n\tintersectRay( ray, target ) {\r\n\r\n\t\tarrayToBox( this.boundingData, boundingBox );\r\n\r\n\t\treturn ray.intersectBox( boundingBox, target );\r\n\r\n\t}\r\n\r\n\traycast( mesh, raycaster, ray, intersects ) {\r\n\r\n\t\tif ( this.count ) intersectTris( mesh, mesh.geometry, raycaster, ray, this.offset, this.count, intersects );\r\n\t\telse {\r\n\r\n\t\t\tif ( this.left.intersectRay( ray, boxIntersection ) )\r\n\t\t\t\tthis.left.raycast( mesh, raycaster, ray, intersects );\r\n\t\t\tif ( this.right.intersectRay( ray, boxIntersection ) )\r\n\t\t\t\tthis.right.raycast( mesh, raycaster, ray, intersects );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\traycastFirst( mesh, raycaster, ray ) {\r\n\r\n\t\tif ( this.count ) {\r\n\r\n\t\t\treturn intersectClosestTri( mesh, mesh.geometry, raycaster, ray, this.offset, this.count );\r\n\r\n\t\t} else {\r\n\r\n\r\n\t\t\t// consider the position of the split plane with respect to the oncoming ray; whichever direction\r\n\t\t\t// the ray is coming from, look for an intersection among that side of the tree first\r\n\t\t\tconst splitAxis = this.splitAxis;\r\n\t\t\tconst xyzAxis = xyzFields[ splitAxis ];\r\n\t\t\tconst rayDir = ray.direction[ xyzAxis ];\r\n\t\t\tconst leftToRight = rayDir >= 0;\r\n\r\n\t\t\t// c1 is the child to check first\r\n\t\t\tlet c1, c2;\r\n\t\t\tif ( leftToRight ) {\r\n\r\n\t\t\t\tc1 = this.left;\r\n\t\t\t\tc2 = this.right;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tc1 = this.right;\r\n\t\t\t\tc2 = this.left;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst c1Intersection = c1.intersectRay( ray, boxIntersection );\r\n\t\t\tconst c1Result = c1Intersection ? c1.raycastFirst( mesh, raycaster, ray ) : null;\r\n\r\n\t\t\t// if we got an intersection in the first node and it's closer than the second node's bounding\r\n\t\t\t// box, we don't need to consider the second node because it couldn't possibly be a better result\r\n\t\t\tif ( c1Result ) {\r\n\r\n\t\t\t\t// check only along the split axis\r\n\t\t\t\tconst rayOrig = ray.origin[ xyzAxis ];\r\n\t\t\t\tconst toPoint = rayOrig - c1Result.point[ xyzAxis ];\r\n\t\t\t\tconst toChild1 = rayOrig - c2.boundingData[ splitAxis ];\r\n\t\t\t\tconst toChild2 = rayOrig - c2.boundingData[ splitAxis + 3 ];\r\n\r\n\t\t\t\tconst toPointSq = toPoint * toPoint;\r\n\t\t\t\tif ( toPointSq <= toChild1 * toChild1 && toPointSq <= toChild2 * toChild2 ) {\r\n\r\n\t\t\t\t\treturn c1Result;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// either there was no intersection in the first node, or there could still be a closer\r\n\t\t\t// intersection in the second, so check the second node and then take the better of the two\r\n\t\t\tconst c2Intersection = c2.intersectRay( ray, boxIntersection );\r\n\t\t\tconst c2Result = c2Intersection ? c2.raycastFirst( mesh, raycaster, ray ) : null;\r\n\r\n\t\t\tif ( c1Result && c2Result ) {\r\n\r\n\t\t\t\treturn c1Result.distance <= c2Result.distance ? c1Result : c2Result;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn c1Result || c2Result || null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nMeshBVHNode.prototype.shapecast = ( function () {\r\n\r\n\tconst triangle = new SeparatingAxisTriangle();\r\n\tconst cachedBox1 = new THREE.Box3();\r\n\tconst cachedBox2 = new THREE.Box3();\r\n\treturn function shapecast( mesh, intersectsBoundsFunc, intersectsTriangleFunc = null, nodeScoreFunc = null ) {\r\n\r\n\t\tif ( this.count && intersectsTriangleFunc ) {\r\n\r\n\t\t\tconst geometry = mesh.geometry;\r\n\t\t\tconst index = geometry.index;\r\n\t\t\tconst pos = geometry.attributes.position;\r\n\t\t\tconst offset = this.offset;\r\n\t\t\tconst count = this.count;\r\n\r\n\t\t\tfor ( let i = offset * 3, l = ( count + offset ) * 3; i < l; i += 3 ) {\r\n\r\n\t\t\t\tsetTriangle( triangle, i, index, pos );\r\n\t\t\t\ttriangle.update();\r\n\r\n\t\t\t\tif ( intersectsTriangleFunc( triangle, i, i + 1, i + 2 ) ) {\r\n\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst left = this.left;\r\n\t\t\tconst right = this.right;\r\n\t\t\tlet c1 = left;\r\n\t\t\tlet c2 = right;\r\n\r\n\t\t\tlet score1, score2;\r\n\t\t\tlet box1, box2;\r\n\t\t\tif ( nodeScoreFunc ) {\r\n\r\n\t\t\t\tbox1 = cachedBox1;\r\n\t\t\t\tbox2 = cachedBox2;\r\n\r\n\t\t\t\tarrayToBox( c1.boundingData, box1 );\r\n\t\t\t\tarrayToBox( c2.boundingData, box2 );\r\n\r\n\t\t\t\tscore1 = nodeScoreFunc( box1 );\r\n\t\t\t\tscore2 = nodeScoreFunc( box2 );\r\n\r\n\t\t\t\tif ( score2 < score1 ) {\r\n\r\n\t\t\t\t\tc1 = right;\r\n\t\t\t\t\tc2 = left;\r\n\r\n\t\t\t\t\tconst temp = score1;\r\n\t\t\t\t\tscore1 = score2;\r\n\t\t\t\t\tscore2 = temp;\r\n\r\n\t\t\t\t\tconst tempBox = box1;\r\n\t\t\t\t\tbox1 = box2;\r\n\t\t\t\t\tbox2 = tempBox;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! box1 ) {\r\n\r\n\t\t\t\tbox1 = cachedBox1;\r\n\t\t\t\tarrayToBox( c1.boundingData, box1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst c1Intersection =\r\n\t\t\t\tintersectsBoundsFunc( box1, ! ! c1.count, score1 ) &&\r\n\t\t\t\tc1.shapecast( mesh, intersectsBoundsFunc, intersectsTriangleFunc, nodeScoreFunc );\r\n\r\n\t\t\tif ( c1Intersection ) return true;\r\n\r\n\r\n\t\t\tif ( ! box2 ) {\r\n\r\n\t\t\t\tbox2 = cachedBox2;\r\n\t\t\t\tarrayToBox( c2.boundingData, box2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst c2Intersection =\r\n\t\t\t\tintersectsBoundsFunc( box2, ! ! c2.count, score2 ) &&\r\n\t\t\t\tc2.shapecast( mesh, intersectsBoundsFunc, intersectsTriangleFunc, nodeScoreFunc );\r\n\r\n\t\t\tif ( c2Intersection ) return true;\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nMeshBVHNode.prototype.intersectsGeometry = ( function () {\r\n\r\n\tconst triangle = new SeparatingAxisTriangle();\r\n\tconst triangle2 = new SeparatingAxisTriangle();\r\n\tconst cachedMesh = new THREE.Mesh();\r\n\tconst invertedMat = new THREE.Matrix4();\r\n\r\n\tconst obb = new OrientedBox();\r\n\tconst obb2 = new OrientedBox();\r\n\r\n\treturn function intersectsGeometry( mesh, geometry, geometryToBvh, cachedObb = null ) {\r\n\r\n\t\tif ( cachedObb === null ) {\r\n\r\n\t\t\tif ( ! geometry.boundingBox ) {\r\n\r\n\t\t\t\tgeometry.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobb.set( geometry.boundingBox.min, geometry.boundingBox.max, geometryToBvh );\r\n\t\t\tobb.update();\r\n\t\t\tcachedObb = obb;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.count ) {\r\n\r\n\t\t\tconst thisGeometry = mesh.geometry;\r\n\t\t\tconst thisIndex = thisGeometry.index;\r\n\t\t\tconst thisPos = thisGeometry.attributes.position;\r\n\r\n\t\t\tconst index = geometry.index;\r\n\t\t\tconst pos = geometry.attributes.position;\r\n\r\n\t\t\tconst offset = this.offset;\r\n\t\t\tconst count = this.count;\r\n\r\n\t\t\t// get the inverse of the geometry matrix so we can transform our triangles into the\r\n\t\t\t// geometry space we're trying to test. We assume there are fewer triangles being checked\r\n\t\t\t// here.\r\n\t\t\tinvertedMat.getInverse( geometryToBvh );\r\n\r\n\t\t\tif ( geometry.boundsTree ) {\r\n\r\n\t\t\t\tfunction triangleCallback( tri ) {\r\n\r\n\t\t\t\t\ttri.a.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\ttri.b.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\ttri.c.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\ttri.update();\r\n\r\n\t\t\t\t\tfor ( let i = offset * 3, l = ( count + offset ) * 3; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\r\n\t\t\t\t\t\tsetTriangle( triangle2, i, thisIndex, thisPos );\r\n\t\t\t\t\t\ttriangle2.update();\r\n\t\t\t\t\t\tif ( tri.intersectsTriangle( triangle2 ) ) {\r\n\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarrayToBox( this.boundingData, obb2 );\r\n\t\t\t\tobb2.matrix.copy( invertedMat );\r\n\t\t\t\tobb2.update();\r\n\r\n\t\t\t\tcachedMesh.geometry = geometry;\r\n\t\t\t\tconst res = geometry.boundsTree.shapecast( cachedMesh, box => obb2.intersectsBox( box ), triangleCallback );\r\n\t\t\t\tcachedMesh.geometry = null;\r\n\r\n\t\t\t\treturn res;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( let i = offset * 3, l = ( count + offset * 3 ); i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\r\n\t\t\t\t\tsetTriangle( triangle, i, thisIndex, thisPos );\r\n\t\t\t\t\ttriangle.a.applyMatrix4( invertedMat );\r\n\t\t\t\t\ttriangle.b.applyMatrix4( invertedMat );\r\n\t\t\t\t\ttriangle.c.applyMatrix4( invertedMat );\r\n\t\t\t\t\ttriangle.update();\r\n\r\n\t\t\t\t\tfor ( let i2 = 0, l2 = index.count; i2 < l2; i2 += 3 ) {\r\n\r\n\t\t\t\t\t\tsetTriangle( triangle2, i2, index, pos );\r\n\t\t\t\t\t\ttriangle2.update();\r\n\r\n\t\t\t\t\t\tif ( triangle.intersectsTriangle( triangle2 ) ) {\r\n\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst left = this.left;\r\n\t\t\tconst right = this.right;\r\n\r\n\t\t\tarrayToBox( left.boundingData, boundingBox );\r\n\t\t\tconst leftIntersection =\r\n\t\t\t\tcachedObb.intersectsBox( boundingBox ) &&\r\n\t\t\t\tleft.intersectsGeometry( mesh, geometry, geometryToBvh, cachedObb );\r\n\r\n\t\t\tif ( leftIntersection ) return true;\r\n\r\n\r\n\t\t\tarrayToBox( right.boundingData, boundingBox );\r\n\t\t\tconst rightIntersection =\r\n\t\t\t\tcachedObb.intersectsBox( boundingBox ) &&\r\n\t\t\t\tright.intersectsGeometry( mesh, geometry, geometryToBvh, cachedObb );\r\n\r\n\t\t\tif ( rightIntersection ) return true;\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nMeshBVHNode.prototype.intersectsBox = ( function () {\r\n\r\n\tconst obb = new OrientedBox();\r\n\r\n\treturn function intersectsBox( mesh, box, boxToBvh ) {\r\n\r\n\t\tobb.set( box.min, box.max, boxToBvh );\r\n\t\tobb.update();\r\n\r\n\t\treturn this.shapecast(\r\n\t\t\tmesh,\r\n\t\t\tbox => obb.intersectsBox( box ),\r\n\t\t\ttri => obb.intersectsTriangle( tri )\r\n\t\t);\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nMeshBVHNode.prototype.intersectsSphere = ( function () {\r\n\r\n\treturn function intersectsSphere( mesh, sphere ) {\r\n\r\n\t\treturn this.shapecast(\r\n\t\t\tmesh,\r\n\t\t\tbox => sphere.intersectsBox( box ),\r\n\t\t\ttri => sphereIntersectTriangle( sphere, tri )\r\n\t\t);\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nMeshBVHNode.prototype.closestPointToPoint = ( function () {\r\n\r\n\t// early out if under minThreshold\r\n\t// skip checking if over maxThreshold\r\n\t// set minThreshold = maxThreshold to quickly check if a point is within a threshold\r\n\t// returns Infinity if no value found\r\n\r\n\tconst temp = new THREE.Vector3();\r\n\treturn function closestPointToPoint( mesh, point, target = null, minThreshold = 0, maxThreshold = Infinity ) {\r\n\r\n\t\tlet closestDistance = Infinity;\r\n\t\tthis.shapecast(\r\n\r\n\t\t\tmesh,\r\n\t\t\t( box, isLeaf, score ) => score < closestDistance && score < maxThreshold,\r\n\t\t\ttri => {\r\n\r\n\t\t\t\ttri.closestPointToPoint( point, temp );\r\n\t\t\t\tconst dist = point.distanceTo( temp );\r\n\t\t\t\tif ( dist < closestDistance ) {\r\n\r\n\t\t\t\t\tif ( target ) target.copy( temp );\r\n\t\t\t\t\tclosestDistance = dist;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( dist < minThreshold ) return true;\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t},\r\n\t\t\tbox => box.distanceToPoint( point )\r\n\r\n\t\t);\r\n\r\n\t\treturn closestDistance;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nMeshBVHNode.prototype.closestPointToGeometry = ( function () {\r\n\r\n\t// early out if under minThreshold\r\n\t// skip checking if over maxThreshold\r\n\t// set minThreshold = maxThreshold to quickly check if a point is within a threshold\r\n\t// returns Infinity if no value found\r\n\r\n\tconst tri2 = new SeparatingAxisTriangle();\r\n\tconst obb = new OrientedBox();\r\n\r\n\tconst temp1 = new THREE.Vector3();\r\n\tconst temp2 = new THREE.Vector3();\r\n\treturn function closestPointToGeometry( mesh, geometry, geometryToBvh, target1 = null, target2 = null, minThreshold = 0, maxThreshold = Infinity ) {\r\n\r\n\t\tif ( ! geometry.boundingBox ) geometry.computeBoundingBox();\r\n\t\tobb.set( geometry.boundingBox.min, geometry.boundingBox.max, geometryToBvh );\r\n\t\tobb.update();\r\n\r\n\t\tconst pos = geometry.attributes.position;\r\n\t\tconst index = geometry.index;\r\n\r\n\t\tlet tempTarget1, tempTarget2;\r\n\t\tif ( target1 ) tempTarget1 = temp1;\r\n\t\tif ( target2 ) tempTarget2 = temp2;\r\n\r\n\t\tlet closestDistance = Infinity;\r\n\t\tthis.shapecast(\r\n\t\t\tmesh,\r\n\t\t\t( box, isLeaf, score ) => score < closestDistance && score < maxThreshold,\r\n\t\t\ttri => {\r\n\r\n\t\t\t\tconst sphere1 = tri.sphere;\r\n\t\t\t\tfor ( let i2 = 0, l2 = index.count; i2 < l2; i2 += 3 ) {\r\n\r\n\t\t\t\t\tsetTriangle( tri2, i2, index, pos );\r\n\t\t\t\t\ttri2.a.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\ttri2.b.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\ttri2.c.applyMatrix4( geometryToBvh );\r\n\t\t\t\t\ttri2.sphere.setFromPoints( tri2.points );\r\n\r\n\t\t\t\t\tconst sphere2 = tri2.sphere;\r\n\t\t\t\t\tconst sphereDist = sphere2.center.distanceTo( sphere1.center ) - sphere2.radius - sphere1.radius;\r\n\t\t\t\t\tif ( sphereDist > closestDistance ) continue;\r\n\r\n\t\t\t\t\ttri2.update();\r\n\r\n\t\t\t\t\tconst dist = tri.distanceToTriangle( tri2, tempTarget1, tempTarget2 );\r\n\t\t\t\t\tif ( dist < closestDistance ) {\r\n\r\n\t\t\t\t\t\tif ( target1 ) target1.copy( tempTarget1 );\r\n\t\t\t\t\t\tif ( target2 ) target2.copy( tempTarget2 );\r\n\t\t\t\t\t\tclosestDistance = dist;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( dist < minThreshold ) return true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t},\r\n\t\t\tbox => obb.distanceToBox( box, Math.min( closestDistance, maxThreshold ) )\r\n\r\n\t\t);\r\n\r\n\t\treturn closestDistance;\r\n\r\n\t};\r\n\r\n} )();\r\n","import { intersectTri } from './ThreeIntersectionUtilities.js';\r\n\r\nexport function intersectTris( mesh, geo, raycaster, ray, offset, count, intersections ) {\r\n\r\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\tintersectTri( mesh, geo, raycaster, ray, i, intersections );\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport function intersectClosestTri( mesh, geo, raycaster, ray, offset, count ) {\r\n\r\n\tlet dist = Infinity;\r\n\tlet res = null;\r\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\tconst intersection = intersectTri( mesh, geo, raycaster, ray, i );\r\n\t\tif ( intersection && intersection.distance < dist ) {\r\n\r\n\t\t\tres = intersection;\r\n\t\t\tdist = intersection.distance;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn res;\r\n\r\n};\r\n","// Split strategy constants\r\nexport const CENTER = 0;\r\nexport const AVERAGE = 1;\r\nexport const SAH = 2;\r\n","import * as THREE from 'three';\r\nimport { arrayToBox, getLongestEdgeIndex } from './Utils/ArrayBoxUtilities.js';\r\nimport { CENTER, AVERAGE, SAH } from './Constants.js';\r\n\r\nconst xyzFields = [ 'x', 'y', 'z' ];\r\n\r\n// precomputes data about each triangle required for quickly calculating tree splits:\r\n//\r\n// - bounds: an array of size tris.length * 6 where triangle i maps to a\r\n//   [x_min, x_max, y_min, y_max, z_min, z_max] tuple starting at index i * 6,\r\n//   representing the minimum and maximum extent in each dimension of triangle i\r\n//\r\n// - centroids: an array of size tris.length * 3 where triangle i maps to an [x, y, z] triplet\r\n//   starting at index i * 3, representing the centroid of triangle i\r\n//\r\nfunction computeTriangleData( geo ) {\r\n\r\n\tconst verts = geo.attributes.position.array;\r\n\tconst index = geo.index.array;\r\n\tconst triCount = index.length / 3;\r\n\tconst bounds = new Float32Array( triCount * 6 );\r\n\tconst centroids = new Float32Array( triCount * 3 );\r\n\r\n\tfor ( let tri = 0; tri < triCount; tri ++ ) {\r\n\r\n\t\tconst ai = index[ 3 * tri + 0 ] * 3;\r\n\t\tconst bi = index[ 3 * tri + 1 ] * 3;\r\n\t\tconst ci = index[ 3 * tri + 2 ] * 3;\r\n\r\n\t\tfor ( let el = 0; el < 3; el ++ ) {\r\n\r\n\t\t\tconst a = verts[ ai + el ];\r\n\t\t\tconst b = verts[ bi + el ];\r\n\t\t\tconst c = verts[ ci + el ];\r\n\t\t\tbounds[ tri * 6 + el * 2 + 0 ] = Math.min( a, b, c );\r\n\t\t\tbounds[ tri * 6 + el * 2 + 1 ] = Math.max( a, b, c );\r\n\t\t\tcentroids[ tri * 3 + el ] = ( a + b + c ) / 3;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn { bounds, centroids };\r\n\r\n}\r\n\r\nconst boxtemp = new THREE.Box3();\r\n\r\nexport default class BVHConstructionContext {\r\n\r\n\tconstructor( geo, options ) {\r\n\r\n\t\tthis.geo = geo;\r\n\t\tthis.options = options;\r\n\r\n\t\tconst data = computeTriangleData( geo );\r\n\t\tthis.centroids = data.centroids;\r\n\t\tthis.bounds = data.bounds;\r\n\r\n\t\t// SAH Initialization\r\n\t\tthis.sahplanes = null;\r\n\t\tif ( options.strategy === SAH ) {\r\n\r\n\t\t\tconst triCount = geo.index.count / 3;\r\n\t\t\tthis.sahplanes = [ new Array( triCount ), new Array( triCount ), new Array( triCount ) ];\r\n\t\t\tfor ( let tri = 0; tri < triCount; tri ++ ) {\r\n\r\n\t\t\t\tfor ( let el = 0; el < 3; el ++ ) {\r\n\r\n\t\t\t\t\tthis.sahplanes[ el ][ tri ] = { p: this.centroids[ tri * 3 + el ], tri };\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// returns the average coordinate on the specified axis of the all the provided triangles\r\n\tgetAverage( offset, count, axis ) {\r\n\r\n\t\tlet avg = 0;\r\n\t\tconst centroids = this.centroids;\r\n\r\n\t\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\t\tavg += centroids[ i * 3 + axis ];\r\n\r\n\t\t}\r\n\r\n\t\treturn avg / count;\r\n\r\n\t}\r\n\r\n\t// computes the union of the bounds of all of the given triangles and puts the resulting box in target\r\n\tgetBounds( offset, count, target ) {\r\n\r\n\t\tlet minx = Infinity;\r\n\t\tlet miny = Infinity;\r\n\t\tlet minz = Infinity;\r\n\t\tlet maxx = - Infinity;\r\n\t\tlet maxy = - Infinity;\r\n\t\tlet maxz = - Infinity;\r\n\t\tconst bounds = this.bounds;\r\n\r\n\t\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\t\tminx = Math.min( minx, bounds[ i * 6 + 0 ] );\r\n\t\t\tmaxx = Math.max( maxx, bounds[ i * 6 + 1 ] );\r\n\t\t\tminy = Math.min( miny, bounds[ i * 6 + 2 ] );\r\n\t\t\tmaxy = Math.max( maxy, bounds[ i * 6 + 3 ] );\r\n\t\t\tminz = Math.min( minz, bounds[ i * 6 + 4 ] );\r\n\t\t\tmaxz = Math.max( maxz, bounds[ i * 6 + 5 ] );\r\n\r\n\t\t}\r\n\r\n\t\ttarget[ 0 ] = minx;\r\n\t\ttarget[ 1 ] = miny;\r\n\t\ttarget[ 2 ] = minz;\r\n\r\n\t\ttarget[ 3 ] = maxx;\r\n\t\ttarget[ 4 ] = maxy;\r\n\t\ttarget[ 5 ] = maxz;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t// reorders `tris` such that for `count` elements after `offset`, elements on the left side of the split\r\n\t// will be on the left and elements on the right side of the split will be on the right. returns the index\r\n\t// of the first element on the right side, or offset + count if there are no elements on the right side.\r\n\tpartition( offset, count, split ) {\r\n\r\n\t\tlet left = offset;\r\n\t\tlet right = offset + count - 1;\r\n\t\tconst pos = split.pos;\r\n\t\tconst axis = split.axis;\r\n\t\tconst index = this.geo.index.array;\r\n\t\tconst centroids = this.centroids;\r\n\t\tconst bounds = this.bounds;\r\n\t\tconst sahplanes = this.sahplanes;\r\n\r\n\t\t// hoare partitioning, see e.g. https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\r\n\t\twhile ( true ) {\r\n\r\n\t\t\twhile ( left <= right && centroids[ left * 3 + axis ] < pos ) {\r\n\r\n\t\t\t\tleft ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhile ( left <= right && centroids[ right * 3 + axis ] >= pos ) {\r\n\r\n\t\t\t\tright --;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( left < right ) {\r\n\r\n\t\t\t\t// we need to swap all of the information associated with the triangles at index\r\n\t\t\t\t// left and right; that's the verts in the geometry index, the centroids, the bounds,\r\n\t\t\t\t// and perhaps the SAH planes\r\n\r\n\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tlet t0 = index[ left * 3 + i ];\r\n\t\t\t\t\tindex[ left * 3 + i ] = index[ right * 3 + i ];\r\n\t\t\t\t\tindex[ right * 3 + i ] = t0;\r\n\r\n\t\t\t\t\tlet t1 = centroids[ left * 3 + i ];\r\n\t\t\t\t\tcentroids[ left * 3 + i ] = centroids[ right * 3 + i ];\r\n\t\t\t\t\tcentroids[ right * 3 + i ] = t1;\r\n\r\n\t\t\t\t\tlet t2 = bounds[ left * 6 + i * 2 + 0 ];\r\n\t\t\t\t\tbounds[ left * 6 + i * 2 + 0 ] = bounds[ right * 6 + i * 2 + 0 ];\r\n\t\t\t\t\tbounds[ right * 6 + i * 2 + 0 ] = t2;\r\n\t\t\t\t\tlet t3 = bounds[ left * 6 + i * 2 + 1 ];\r\n\t\t\t\t\tbounds[ left * 6 + i * 2 + 1 ] = bounds[ right * 6 + i * 2 + 1 ];\r\n\t\t\t\t\tbounds[ right * 6 + i * 2 + 1 ] = t3;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( sahplanes ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tlet t = sahplanes[ i ][ left ];\r\n\t\t\t\t\t\tsahplanes[ i ][ left ] = sahplanes[ i ][ right ];\r\n\t\t\t\t\t\tsahplanes[ i ][ right ] = t;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tleft ++;\r\n\t\t\t\tright --;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn left;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetOptimalSplit( bounds, offset, count, strategy ) {\r\n\r\n\t\tlet axis = - 1;\r\n\t\tlet pos = 0;\r\n\r\n\t\t// Center\r\n\t\tif ( strategy === CENTER ) {\r\n\r\n\t\t\taxis = getLongestEdgeIndex( bounds );\r\n\t\t\tif ( axis !== - 1 ) {\r\n\r\n\t\t\t\tpos = ( bounds[ axis + 3 ] + bounds[ axis ] ) / 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( strategy === AVERAGE ) {\r\n\r\n\t\t\taxis = getLongestEdgeIndex( bounds );\r\n\t\t\tif ( axis !== - 1 ) {\r\n\r\n\t\t\t\tpos = this.getAverage( offset, count, axis );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( strategy === SAH ) {\r\n\r\n\t\t\t// Surface Area Heuristic\r\n\t\t\t// In order to make this code more terse, the x, y, and z\r\n\t\t\t// variables of various structures have been stuffed into\r\n\t\t\t// 0, 1, and 2 array indices so they can be easily computed\r\n\t\t\t// and accessed within array iteration\r\n\r\n\t\t\t// Cost values defineed for operations. We're using bounds for traversal, so\r\n\t\t\t// the cost of traversing one more layer is more than intersecting a triangle.\r\n\t\t\tconst TRAVERSAL_COST = 3;\r\n\t\t\tconst INTERSECTION_COST = 1;\r\n\t\t\tconst bb = arrayToBox( bounds, boxtemp );\r\n\r\n\t\t\t// Define the width, height, and depth of the bounds as a box\r\n\t\t\tconst dim = [\r\n\t\t\t\tbb.max.x - bb.min.x,\r\n\t\t\t\tbb.max.y - bb.min.y,\r\n\t\t\t\tbb.max.z - bb.min.z\r\n\t\t\t];\r\n\t\t\tconst sa = 2 * ( dim[ 0 ] * dim[ 1 ] + dim[ 0 ] * dim[ 2 ] + dim[ 1 ] * dim[ 2 ] );\r\n\r\n\t\t\t// Get the precalculated planes based for the triangles we're\r\n\t\t\t// testing here\r\n\t\t\tconst filteredLists = [[], [], []];\r\n\t\t\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\r\n\r\n\t\t\t\tfor ( let v = 0; v < 3; v ++ ) {\r\n\r\n\t\t\t\t\tfilteredLists[ v ].push( this.sahplanes[ v ][ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tfilteredLists.forEach( planes => planes.sort( ( a, b ) => a.p - b.p ) );\r\n\r\n\t\t\t// this bounds surface area, left bound SA, left triangles, right bound SA, right triangles\r\n\t\t\tconst getCost = ( sa, sal, nl, sar, nr ) =>\r\n\t\t\t\t  TRAVERSAL_COST + INTERSECTION_COST * ( ( sal / sa ) * nl + ( sar / sa ) * nr );\r\n\r\n\t\t\t// the cost of _not_ splitting into smaller bounds\r\n\t\t\tconst noSplitCost = INTERSECTION_COST * count;\r\n\r\n\t\t\taxis = - 1;\r\n\t\t\tlet bestCost = noSplitCost;\r\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t// o1 and o2 represent the _other_ two axes in the\r\n\t\t\t\t// the space. So if we're checking the x (0) dimension,\r\n\t\t\t\t// then o1 and o2 would be y and z (1 and 2)\r\n\t\t\t\tconst o1 = ( i + 1 ) % 3;\r\n\t\t\t\tconst o2 = ( i + 2 ) % 3;\r\n\r\n\t\t\t\tconst bmin = bb.min[ xyzFields[ i ] ];\r\n\t\t\t\tconst bmax = bb.max[ xyzFields[ i ] ];\r\n\t\t\t\tconst planes = filteredLists[ i ];\r\n\r\n\t\t\t\t// The number of left and right triangles on either side\r\n\t\t\t\t// given the current split\r\n\t\t\t\tlet nl = 0;\r\n\t\t\t\tlet nr = count;\r\n\t\t\t\tfor ( let p = 0; p < planes.length; p ++ ) {\r\n\r\n\t\t\t\t\tconst pinfo = planes[ p ];\r\n\r\n\t\t\t\t\t// As the plane moves, we have to increment or decrement the\r\n\t\t\t\t\t// number of triangles on either side of the plane\r\n\t\t\t\t\tnl ++;\r\n\t\t\t\t\tnr --;\r\n\r\n\t\t\t\t\t// the distance from the plane to the edge of the broader bounds\r\n\t\t\t\t\tconst ldim = pinfo.p - bmin;\r\n\t\t\t\t\tconst rdim = bmax - pinfo.p;\r\n\r\n\t\t\t\t\t// same for the other two dimensions\r\n\t\t\t\t\tlet ldimo1 = dim[ o1 ], rdimo1 = dim[ o1 ];\r\n\t\t\t\t\tlet ldimo2 = dim[ o2 ], rdimo2 = dim[ o2 ];\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t// compute the other bounding planes for the box\r\n\t\t\t\t\t// if only the current triangles are considered to\r\n\t\t\t\t\t// be in the box\r\n\t\t\t\t\t// This is really slow and probably not really worth it\r\n\t\t\t\t\tconst o1planes = this.sahplanes[o1];\r\n\t\t\t\t\tconst o2planes = this.sahplanes[o2];\r\n\t\t\t\t\tlet lmin = Infinity, lmax = -Infinity;\r\n\t\t\t\t\tlet rmin = Infinity, rmax = -Infinity;\r\n\t\t\t\t\tplanes.forEach((p, i) => {\r\n\t\t\t\t\tconst tri2 = p.tri * 2;\r\n\t\t\t\t\tconst inf1 = o1planes[tri2 + 0];\r\n\t\t\t\t\tconst inf2 = o1planes[tri2 + 1];\r\n\t\t\t\t\tif (i <= nl) {\r\n\t\t\t\t\tlmin = Math.min(inf1.p, inf2.p, lmin);\r\n\t\t\t\t\tlmax = Math.max(inf1.p, inf2.p, lmax);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (i >= nr) {\r\n\t\t\t\t\trmin = Math.min(inf1.p, inf2.p, rmin);\r\n\t\t\t\t\trmax = Math.max(inf1.p, inf2.p, rmax);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tldimo1 = Math.min(lmax - lmin, ldimo1);\r\n\t\t\t\t\trdimo1 = Math.min(rmax - rmin, rdimo1);\r\n\r\n\t\t\t\t\tplanes.forEach((p, i) => {\r\n\t\t\t\t\tconst tri2 = p.tri * 2;\r\n\t\t\t\t\tconst inf1 = o2planes[tri2 + 0];\r\n\t\t\t\t\tconst inf2 = o2planes[tri2 + 1];\r\n\t\t\t\t\tif (i <= nl) {\r\n\t\t\t\t\tlmin = Math.min(inf1.p, inf2.p, lmin);\r\n\t\t\t\t\tlmax = Math.max(inf1.p, inf2.p, lmax);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (i >= nr) {\r\n\t\t\t\t\trmin = Math.min(inf1.p, inf2.p, rmin);\r\n\t\t\t\t\trmax = Math.max(inf1.p, inf2.p, rmax);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tldimo2 = Math.min(lmax - lmin, ldimo2);\r\n\t\t\t\t\trdimo2 = Math.min(rmax - rmin, rdimo2);\r\n\t\t\t\t\t*/\r\n\r\n\t\t\t\t\t// surface areas and cost\r\n\t\t\t\t\tconst sal = 2 * ( ldimo1 * ldimo2 + ldimo1 * ldim + ldimo2 * ldim );\r\n\t\t\t\t\tconst sar = 2 * ( rdimo1 * rdimo2 + rdimo1 * rdim + rdimo2 * rdim );\r\n\t\t\t\t\tconst cost = getCost( sa, sal, nl, sar, nr );\r\n\r\n\t\t\t\t\tif ( cost < bestCost ) {\r\n\r\n\t\t\t\t\t\taxis = i;\r\n\t\t\t\t\t\tpos = pinfo.p;\r\n\t\t\t\t\t\tbestCost = cost;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn { axis, pos };\r\n\r\n\t}\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport MeshBVHNode from './MeshBVHNode.js';\r\nimport BVHConstructionContext from './BVHConstructionContext.js';\r\nimport { CENTER } from './Constants.js';\r\n\r\nexport default class MeshBVH {\r\n\r\n\tconstructor( geo, options = {} ) {\r\n\r\n\t\tif ( ! geo.isBufferGeometry ) {\r\n\r\n\t\t\tthrow new Error( 'MeshBVH: Only BufferGeometries are supported.' );\r\n\r\n\t\t} else if ( geo.attributes.position.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\tthrow new Error( 'MeshBVH: InterleavedBufferAttribute is not supported for the position attribute.' );\r\n\r\n\t\t} else if ( geo.index && geo.index.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\tthrow new Error( 'MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.' );\r\n\r\n\t\t}\r\n\r\n\t\t// default options\r\n\t\toptions = Object.assign( {\r\n\r\n\t\t\tstrategy: CENTER,\r\n\t\t\tmaxDepth: 40,\r\n\t\t\tmaxLeafTris: 10,\r\n\t\t\tverbose: true\r\n\r\n\t\t}, options );\r\n\t\toptions.strategy = Math.max( 0, Math.min( 2, options.strategy ) );\r\n\r\n\t\tthis._roots = this._buildTree( geo, options );\r\n\r\n\r\n\t}\r\n\r\n\t/* Private Functions */\r\n\r\n\t_ensureIndex( geo ) {\r\n\r\n\t\tif ( ! geo.index ) {\r\n\r\n\t\t\tconst vertexCount = geo.attributes.position.count;\r\n\t\t\tconst index = new ( vertexCount > 65535 ? Uint32Array : Uint16Array )( vertexCount );\r\n\t\t\tgeo.setIndex( new THREE.BufferAttribute( index, 1 ) );\r\n\r\n\t\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\r\n\r\n\t\t\t\tindex[ i ] = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Computes the set of { offset, count } ranges which need independent BVH roots. Each\r\n\t// region in the geometry index that belongs to a different set of material groups requires\r\n\t// a separate BVH root, so that triangles indices belonging to one group never get swapped\r\n\t// with triangle indices belongs to another group. For example, if the groups were like this:\r\n\t//\r\n\t// [-------------------------------------------------------------]\r\n\t// |__________________|\r\n\t//   g0 = [0, 20]  |______________________||_____________________|\r\n\t//                      g1 = [16, 40]           g2 = [41, 60]\r\n\t//\r\n\t// we would need four BVH roots: [0, 15], [16, 20], [21, 40], [41, 60].\r\n\t//\r\n\t_getRootIndexRanges( geo ) {\r\n\r\n\t\tif ( ! geo.groups || ! geo.groups.length ) {\r\n\r\n\t\t\treturn [ { offset: 0, count: geo.index.count / 3 } ];\r\n\r\n\t\t}\r\n\r\n\t\tconst ranges = [];\r\n\t\tconst rangeBoundaries = new Set();\r\n\t\tfor ( const group of geo.groups ) {\r\n\r\n\t\t\trangeBoundaries.add( group.start );\r\n\t\t\trangeBoundaries.add( group.start + group.count );\r\n\r\n\t\t}\r\n\r\n\t\t// note that if you don't pass in a comparator, it sorts them lexicographically as strings :-(\r\n\t\tconst sortedBoundaries = Array.from( rangeBoundaries.values() ).sort( ( a, b ) => a - b );\r\n\t\tfor ( let i = 0; i < sortedBoundaries.length - 1; i ++ ) {\r\n\r\n\t\t\tconst start = sortedBoundaries[ i ], end = sortedBoundaries[ i + 1 ];\r\n\t\t\tranges.push( { offset: ( start / 3 ), count: ( end - start ) / 3 } );\r\n\r\n\t\t}\r\n\t\treturn ranges;\r\n\r\n\t}\r\n\r\n\t_buildTree( geo, options ) {\r\n\r\n\t\tthis._ensureIndex( geo );\r\n\r\n\t\tconst ctx = new BVHConstructionContext( geo, options );\r\n\t\tlet reachedMaxDepth = false;\r\n\r\n\t\t// either recursively splits the given node, creating left and right subtrees for it, or makes it a leaf node,\r\n\t\t// recording the offset and count of its triangles and writing them into the reordered geometry index.\r\n\t\tconst splitNode = ( node, offset, count, depth = 0 ) => {\r\n\r\n\t\t\tif ( depth >= options.maxDepth ) {\r\n\r\n\t\t\t\treachedMaxDepth = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// early out if we've met our capacity\r\n\t\t\tif ( count <= options.maxLeafTris || depth >= options.maxDepth ) {\r\n\r\n\t\t\t\tnode.offset = offset;\r\n\t\t\t\tnode.count = count;\r\n\t\t\t\treturn node;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Find where to split the volume\r\n\t\t\tconst split = ctx.getOptimalSplit( node.boundingData, offset, count, options.strategy );\r\n\t\t\tif ( split.axis === - 1 ) {\r\n\r\n\t\t\t\tnode.offset = offset;\r\n\t\t\t\tnode.count = count;\r\n\t\t\t\treturn node;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst splitOffset = ctx.partition( offset, count, split );\r\n\r\n\t\t\t// create the two new child nodes\r\n\t\t\tif ( splitOffset === offset || splitOffset === offset + count ) {\r\n\r\n\t\t\t\tnode.offset = offset;\r\n\t\t\t\tnode.count = count;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode.splitAxis = split.axis;\r\n\r\n\t\t\t\t// create the left child and compute its bounding box\r\n\t\t\t\tconst left = node.left = new MeshBVHNode();\r\n\t\t\t\tconst lstart = offset, lcount = splitOffset - offset;\r\n\t\t\t\tleft.boundingData = ctx.getBounds( lstart, lcount, new Float32Array( 6 ) );\r\n\t\t\t\tsplitNode( left, lstart, lcount, depth + 1 );\r\n\r\n\t\t\t\t// repeat for right\r\n\t\t\t\tconst right = node.right = new MeshBVHNode();\r\n\t\t\t\tconst rstart = splitOffset, rcount = count - lcount;\r\n\t\t\t\tright.boundingData = ctx.getBounds( rstart, rcount, new Float32Array( 6 ) );\r\n\t\t\t\tsplitNode( right, rstart, rcount, depth + 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\r\n\t\t};\r\n\r\n\t\tconst roots = [];\r\n\t\tconst ranges = this._getRootIndexRanges( geo );\r\n\r\n\t\tfor ( let range of ranges ) {\r\n\r\n\t\t\tconst root = new MeshBVHNode();\r\n\t\t\troot.boundingData = ctx.getBounds( range.offset, range.count, new Float32Array( 6 ) );\r\n\t\t\tsplitNode( root, range.offset, range.count );\r\n\t\t\troots.push( root );\r\n\r\n\t\t\tif ( reachedMaxDepth && options.verbose ) {\r\n\r\n\t\t\t\tconsole.warn( `MeshBVH: Max depth of ${ options.maxDepth } reached when generating BVH. Consider increasing maxDepth.` );\r\n\t\t\t\tconsole.warn( this, geo );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn roots;\r\n\r\n\t}\r\n\r\n\traycast( mesh, raycaster, ray, intersects ) {\r\n\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\troot.raycast( mesh, raycaster, ray, intersects );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\traycastFirst( mesh, raycaster, ray ) {\r\n\r\n\t\tlet closestResult = null;\r\n\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\tconst result = root.raycastFirst( mesh, raycaster, ray );\r\n\t\t\tif ( result != null && ( closestResult == null || result.distance < closestResult.distance ) ) {\r\n\r\n\t\t\t\tclosestResult = result;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn closestResult;\r\n\r\n\t}\r\n\r\n\tintersectsGeometry( mesh, geometry, geomToMesh ) {\r\n\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\tif ( root.intersectsGeometry( mesh, geometry, geomToMesh ) ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tshapecast( mesh, intersectsBoundsFunc, intersectsTriangleFunc = null, orderNodesFunc = null ) {\r\n\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\tif ( root.shapecast( mesh, intersectsBoundsFunc, intersectsTriangleFunc, orderNodesFunc ) ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tintersectsBox( mesh, box, boxToMesh ) {\r\n\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\tif ( root.intersectsBox( mesh, box, boxToMesh ) ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tintersectsSphere( mesh, sphere ) {\r\n\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\tif ( root.intersectsSphere( mesh, sphere ) ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tclosestPointToGeometry( mesh, geom, matrix, target1, target2, minThreshold, maxThreshold ) {\r\n\r\n\t\tlet closestDistance = Infinity;\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\tconst dist = root.closestPointToGeometry( mesh, geom, matrix, target1, target2, minThreshold, maxThreshold );\r\n\t\t\tif ( dist < closestDistance ) closestDistance = dist;\r\n\t\t\tif ( dist < minThreshold ) return dist;\r\n\r\n\t\t}\r\n\r\n\t\treturn closestDistance;\r\n\r\n\t}\r\n\r\n\tdistanceToGeometry( mesh, geom, matrix, minThreshold, maxThreshold ) {\r\n\r\n\t\treturn this.closestPointToGeometry( mesh, geom, matrix, null, null, minThreshold, maxThreshold );\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( mesh, point, target, minThreshold, maxThreshold ) {\r\n\r\n\t\tlet closestDistance = Infinity;\r\n\t\tfor ( const root of this._roots ) {\r\n\r\n\t\t\tconst dist = root.closestPointToPoint( mesh, point, target, minThreshold, maxThreshold );\r\n\t\t\tif ( dist < closestDistance ) closestDistance = dist;\r\n\t\t\tif ( dist < minThreshold ) return dist;\r\n\r\n\t\t}\r\n\r\n\t\treturn closestDistance;\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( mesh, point, minThreshold, maxThreshold ) {\r\n\r\n\t\treturn this.closestPointToPoint( mesh, point, null, minThreshold, maxThreshold );\r\n\r\n\t}\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport { arrayToBox } from './Utils/ArrayBoxUtilities.js';\r\n\r\nconst wiremat = new THREE.LineBasicMaterial( { color: 0x00FF88, transparent: true, opacity: 0.3 } );\r\nconst boxGeom = new THREE.Box3Helper().geometry;\r\nlet boundingBox = new THREE.Box3();\r\n\r\nclass MeshBVHRootVisualizer extends THREE.Object3D {\r\n\r\n\tconstructor( mesh, depth = 10, group = 0 ) {\r\n\r\n\t\tsuper( 'MeshBVHRootVisualizer' );\r\n\r\n\t\tthis.depth = depth;\r\n\t\tthis._oldDepth = - 1;\r\n\t\tthis._mesh = mesh;\r\n\t\tthis._boundsTree = null;\r\n\t\tthis._group = group;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tif ( this._mesh.geometry.boundsTree !== this._boundsTree || this._oldDepth !== this.depth ) {\r\n\r\n\t\t\tthis._oldDepth = this.depth;\r\n\t\t\tthis._boundsTree = this._mesh.geometry.boundsTree;\r\n\r\n\t\t\tlet requiredChildren = 0;\r\n\t\t\tif ( this._boundsTree ) {\r\n\r\n\t\t\t\tconst recurse = ( n, d ) => {\r\n\r\n\t\t\t\t\tlet isLeaf = 'count' in n;\r\n\r\n\t\t\t\t\tif ( d === this.depth ) return;\r\n\r\n\t\t\t\t\tif ( d === this.depth - 1 || isLeaf ) {\r\n\r\n\t\t\t\t\t\tlet m = requiredChildren < this.children.length ? this.children[ requiredChildren ] : null;\r\n\t\t\t\t\t\tif ( ! m ) {\r\n\r\n\t\t\t\t\t\t\tm = new THREE.LineSegments( boxGeom, wiremat );\r\n\t\t\t\t\t\t\tm.raycast = () => [];\r\n\t\t\t\t\t\t\tthis.add( m );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trequiredChildren ++;\r\n\t\t\t\t\t\tarrayToBox( n.boundingData, boundingBox );\r\n\t\t\t\t\t\tboundingBox.getCenter( m.position );\r\n\t\t\t\t\t\tm.scale.subVectors( boundingBox.max, boundingBox.min ).multiplyScalar( 0.5 );\r\n\r\n\t\t\t\t\t\tif ( m.scale.x === 0 ) m.scale.x = Number.EPSILON;\r\n\t\t\t\t\t\tif ( m.scale.y === 0 ) m.scale.y = Number.EPSILON;\r\n\t\t\t\t\t\tif ( m.scale.z === 0 ) m.scale.z = Number.EPSILON;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! isLeaf ) {\r\n\r\n\t\t\t\t\t\trecurse( n.left, d + 1 );\r\n\t\t\t\t\t\trecurse( n.right, d + 1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\trecurse( this._boundsTree._roots[ this._group ], 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhile ( this.children.length > requiredChildren ) this.remove( this.children.pop() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshBVHVisualizer extends THREE.Object3D {\r\n\r\n\tconstructor( mesh, depth = 10 ) {\r\n\r\n\t\tsuper( 'MeshBVHVisualizer' );\r\n\r\n\t\tthis.depth = depth;\r\n\t\tthis._mesh = mesh;\r\n\t\tthis._roots = [];\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst bvh = this._mesh.geometry.boundsTree;\r\n\t\tconst totalRoots = bvh ? bvh._roots.length : 0;\r\n\t\twhile ( this._roots.length > totalRoots ) {\r\n\r\n\t\t\tthis._roots.pop();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < totalRoots; i ++ ) {\r\n\r\n\t\t\tif ( i >= this._roots.length ) {\r\n\r\n\t\t\t\tconst root = new MeshBVHRootVisualizer( this._mesh, this.depth, i );\r\n\t\t\t\tthis.add( root );\r\n\t\t\t\tthis._roots.push( root );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlet root = this._roots[ i ];\r\n\t\t\t\troot.depth = this.depth;\r\n\t\t\t\troot.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.position.copy( this._mesh.position );\r\n\t\tthis.rotation.copy( this._mesh.rotation );\r\n\t\tthis.scale.copy( this._mesh.scale );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport default MeshBVHVisualizer;\r\n","import * as THREE from 'three';\r\nimport MeshBVH from './MeshBVH.js';\r\nimport Visualizer from './MeshBVHVisualizer.js';\r\nimport { CENTER, AVERAGE, SAH } from './Constants.js';\r\n\r\nconst ray = new THREE.Ray();\r\nconst tmpInverseMatrix = new THREE.Matrix4();\r\nconst origMeshRaycastFunc = THREE.Mesh.prototype.raycast;\r\n\r\nfunction acceleratedRaycast( raycaster, intersects ) {\r\n\r\n\tif ( this.geometry.boundsTree ) {\r\n\r\n\t\tif ( this.material === undefined ) return;\r\n\r\n\t\ttmpInverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( tmpInverseMatrix );\r\n\r\n\t\tif ( raycaster.firstHitOnly === true ) {\r\n\r\n\t\t\tconst res = this.geometry.boundsTree.raycastFirst( this, raycaster, ray );\r\n\t\t\tif ( res ) intersects.push( res );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.geometry.boundsTree.raycast( this, raycaster, ray, intersects );\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\torigMeshRaycastFunc.call( this, raycaster, intersects );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction computeBoundsTree( options ) {\r\n\r\n\tthis.boundsTree = new MeshBVH( this, options );\r\n\treturn this.boundsTree;\r\n\r\n}\r\n\r\nfunction disposeBoundsTree() {\r\n\r\n\tthis.boundsTree = null;\r\n\r\n}\r\n\r\nexport {\r\n\tMeshBVH, Visualizer,\r\n\tacceleratedRaycast, computeBoundsTree, disposeBoundsTree,\r\n\tCENTER, AVERAGE, SAH\r\n};\r\n","module.exports = {\n  AFRAME_INJECTED: 'aframe-injected',\n  DEFAULT_CAMERA_HEIGHT: 1.6,\n  DEFAULT_HANDEDNESS: 'right',\n  keyboardevent: require('./keyboardevent')\n};\n","import AmmoDebugDrawer from \"ammo-debug-drawer\";\nimport world from \"./src/world\";\nimport body from \"./src/body\";\nimport constraint from \"./src/constraint\";\n\nexport const World = world;\nexport const Body = body;\nexport const Constraint = constraint;\n","/**\n * Faster version of Function.prototype.bind\n * @param {Function} fn - Function to wrap.\n * @param {Object} ctx - What to bind as context.\n * @param {...*} arguments - Arguments to pass through.\n */\nmodule.exports = function bind (fn, ctx) {\n  // Disable optimization in favor of not allocating memory every frame.\n  return Function.bind.apply(fn, [ctx].concat(Array.prototype.slice.call(arguments, 2)));\n  /*\n    return (function (prependedArgs) {\n    return function bound () {\n      // Concat the bound function arguments with those passed to original bind\n      var args = prependedArgs.concat(Array.prototype.slice.call(arguments, 0));\n      return fn.apply(ctx, args);\n    };\n  })(Array.prototype.slice.call(arguments, 2));\n  */\n};\n","/* global CustomEvent */\nvar registerElement = require('./a-register-element').registerElement;\nvar isNode = require('./a-register-element').isNode;\nvar utils = require('../utils/');\n\nvar warn = utils.debug('core:a-node:warn');\nvar error = utils.debug('core:a-node:error');\n\n/**\n * Base class for A-Frame that manages loading of objects.\n *\n * Nodes can be modified using mixins.\n * Nodes emit a `loaded` event when they and their children have initialized.\n */\nmodule.exports = registerElement('a-node', {\n  prototype: Object.create(window.HTMLElement.prototype, {\n    createdCallback: {\n      value: function () {\n        this.computedMixinStr = '';\n        this.hasLoaded = false;\n        this.isNode = true;\n        this.mixinEls = [];\n      },\n      writable: window.debug\n    },\n\n    attachedCallback: {\n      value: function () {\n        var mixins;\n        this.sceneEl = this.closestScene();\n\n        if (!this.sceneEl) {\n          warn('You are attempting to attach <' + this.tagName + '> outside of an A-Frame ' +\n               'scene. Append this element to `<a-scene>` instead.');\n        }\n\n        this.hasLoaded = false;\n        this.emit('nodeready', undefined, false);\n\n        if (!this.isMixin) {\n          mixins = this.getAttribute('mixin');\n          if (mixins) { this.updateMixins(mixins); }\n        }\n      },\n      writable: window.debug\n    },\n\n    /**\n     * Handle mixin.\n     */\n    attributeChangedCallback: {\n      value: function (attr, oldVal, newVal) {\n        // Ignore if `<a-node>` code is just updating computed mixin in the DOM.\n        if (newVal === this.computedMixinStr) { return; }\n\n        if (attr === 'mixin' && !this.isMixin) {\n          this.updateMixins(newVal, oldVal);\n        }\n      }\n    },\n\n   /**\n    * Returns the first scene by traversing up the tree starting from and\n    * including receiver element.\n    */\n    closestScene: {\n      value: function closest () {\n        var element = this;\n        while (element) {\n          if (element.isScene) { break; }\n          element = element.parentElement;\n        }\n        return element;\n      }\n    },\n\n    /**\n     * Returns first element matching a selector by traversing up the tree starting\n     * from and including receiver element.\n     *\n     * @param {string} selector - Selector of element to find.\n     */\n    closest: {\n      value: function closest (selector) {\n        var matches = this.matches || this.mozMatchesSelector ||\n          this.msMatchesSelector || this.oMatchesSelector || this.webkitMatchesSelector;\n        var element = this;\n        while (element) {\n          if (matches.call(element, selector)) { break; }\n          element = element.parentElement;\n        }\n        return element;\n      }\n    },\n\n    detachedCallback: {\n      value: function () {\n        this.hasLoaded = false;\n      }\n    },\n\n    /**\n     * Wait for children to load, if any.\n     * Then emit `loaded` event and set `hasLoaded`.\n     */\n    load: {\n      value: function (cb, childFilter) {\n        var children;\n        var childrenLoaded;\n        var self = this;\n\n        if (this.hasLoaded) { return; }\n\n        // Default to waiting for all nodes.\n        childFilter = childFilter || isNode;\n        // Wait for children to load (if any), then load.\n        children = this.getChildren();\n        childrenLoaded = children.filter(childFilter).map(function (child) {\n          return new Promise(function waitForLoaded (resolve) {\n            if (child.hasLoaded) { return resolve(); }\n            child.addEventListener('loaded', resolve);\n          });\n        });\n\n        Promise.all(childrenLoaded).then(function emitLoaded () {\n          self.hasLoaded = true;\n          if (cb) { cb(); }\n          self.emit('loaded', undefined, false);\n        }).catch(function (err) {\n          error('Failure loading node: ', err);\n        });\n      },\n      writable: true\n    },\n\n    getChildren: {\n      value: function () {\n        return Array.prototype.slice.call(this.children, 0);\n      }\n    },\n\n    /**\n     * Unregister old mixins and listeners.\n     * Register new mixins and listeners.\n     * Registering means to update `this.mixinEls` with listeners.\n     */\n    updateMixins: {\n      value: (function () {\n        var newMixinIdArray = [];\n        var oldMixinIdArray = [];\n        var mixinIds = {};\n\n        return function (newMixins, oldMixins) {\n          var i;\n          var newMixinIds;\n          var oldMixinIds;\n\n          newMixinIdArray.length = 0;\n          oldMixinIdArray.length = 0;\n          newMixinIds = newMixins ? utils.split(newMixins.trim(), /\\s+/) : newMixinIdArray;\n          oldMixinIds = oldMixins ? utils.split(oldMixins.trim(), /\\s+/) : oldMixinIdArray;\n\n          mixinIds.newMixinIds = newMixinIds;\n          mixinIds.oldMixinIds = oldMixinIds;\n\n          // Unregister old mixins.\n          for (i = 0; i < oldMixinIds.length; i++) {\n            if (newMixinIds.indexOf(oldMixinIds[i]) === -1) {\n              this.unregisterMixin(oldMixinIds[i]);\n            }\n          }\n\n          // Register new mixins.\n          this.computedMixinStr = '';\n          this.mixinEls.length = 0;\n          for (i = 0; i < newMixinIds.length; i++) {\n            this.registerMixin(document.getElementById(newMixinIds[i]));\n          }\n\n          // Update DOM. Keep track of `computedMixinStr` to not recurse back here after\n          // update.\n          if (this.computedMixinStr) {\n            this.computedMixinStr = this.computedMixinStr.trim();\n            window.HTMLElement.prototype.setAttribute.call(this, 'mixin',\n                                                           this.computedMixinStr);\n          }\n\n          return mixinIds;\n        };\n      })()\n    },\n\n    /**\n     * From mixin ID, add mixin element to `mixinEls`.\n     *\n     * @param {Element} mixinEl\n     */\n    registerMixin: {\n      value: function (mixinEl) {\n        var compositedMixinIds;\n        var i;\n        var mixin;\n\n        if (!mixinEl) { return; }\n\n        // Register composited mixins (if mixin has mixins).\n        mixin = mixinEl.getAttribute('mixin');\n        if (mixin) {\n          compositedMixinIds = utils.split(mixin.trim(), /\\s+/);\n          for (i = 0; i < compositedMixinIds.length; i++) {\n            this.registerMixin(document.getElementById(compositedMixinIds[i]));\n          }\n        }\n\n        // Register mixin.\n        this.computedMixinStr = this.computedMixinStr + ' ' + mixinEl.id;\n        this.mixinEls.push(mixinEl);\n      }\n    },\n\n    setAttribute: {\n      value: function (attr, newValue) {\n        if (attr === 'mixin') { this.updateMixins(newValue); }\n        window.HTMLElement.prototype.setAttribute.call(this, attr, newValue);\n      }\n    },\n\n    unregisterMixin: {\n      value: function (mixinId) {\n        var i;\n        var mixinEls = this.mixinEls;\n        var mixinEl;\n        for (i = 0; i < mixinEls.length; ++i) {\n          mixinEl = mixinEls[i];\n          if (mixinId === mixinEl.id) {\n            mixinEls.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n\n    /**\n     * Emit a DOM event.\n     *\n     * @param {string} name - Name of event.\n     * @param {object} [detail={}] - Custom data to pass as `detail` to the event.\n     * @param {boolean} [bubbles=true] - Whether the event should bubble.\n     * @param {object} [extraData] - Extra data to pass to the event, if any.\n     */\n    emit: {\n      value: (function () {\n        var data = {};\n\n        return function (name, detail, bubbles, extraData) {\n          if (bubbles === undefined) { bubbles = true; }\n          data.bubbles = !!bubbles;\n          data.detail = detail;\n\n          // If extra data is present, we need to create a new object.\n          if (extraData) { data = utils.extend({}, extraData, data); }\n\n          this.dispatchEvent(new CustomEvent(name, data));\n        };\n      })(),\n      writable: window.debug\n    }\n  })\n});\n","module.exports = function() {\n  return require(\"!!/Users/gheric/GitHub/custom-hubs-template/hubs/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\\\"object\\\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\\\"default\\\",{enumerable:!0,value:e}),2&t&&\\\"string\\\"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\\\"a\\\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\\\"/custom-hubs-template/\\\",n(n.s=0)}([function(e,t,n){\\\"use strict\\\";n.r(t);var i=\\n/*!\\n * ZipLoader\\n * (c) 2017 @yomotsu\\n * Released under the MIT License.\\n * \\n * ZipLoader uses the library pako released under the MIT license :\\n * https://github.com/nodeca/pako/blob/master/LICENSE\\n */\\nfunction(e,t){return e(t={exports:{}},t.exports),t.exports}(function(e,t){var n=\\\"undefined\\\"!=typeof Uint8Array&&\\\"undefined\\\"!=typeof Uint16Array&&\\\"undefined\\\"!=typeof Int32Array;function i(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var n=t.shift();if(n){if(\\\"object\\\"!=typeof n)throw new TypeError(n+\\\"must be non-object\\\");for(var r in n)i(n,r)&&(e[r]=n[r])}}return e},t.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var r={arraySet:function(e,t,n,i,r){if(t.subarray&&e.subarray)e.set(t.subarray(n,n+i),r);else for(var a=0;a<i;a++)e[r+a]=t[n+a]},flattenChunks:function(e){var t,n,i,r,a,o;for(i=0,t=0,n=e.length;t<n;t++)i+=e[t].length;for(o=new Uint8Array(i),r=0,t=0,n=e.length;t<n;t++)a=e[t],o.set(a,r),r+=a.length;return o}},a={arraySet:function(e,t,n,i,r){for(var a=0;a<i;a++)e[r+a]=t[n+a]},flattenChunks:function(e){return[].concat.apply([],e)}};t.setTyped=function(e){e?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,r)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,a))},t.setTyped(n)});i.assign,i.shrinkBuf,i.setTyped,i.Buf8,i.Buf16,i.Buf32;var r=function(e,t,n,i){for(var r=65535&e|0,a=e>>>16&65535|0,o=0;0!==n;){n-=o=n>2e3?2e3:n;do{a=a+(r=r+t[i++]|0)|0}while(--o);r%=65521,a%=65521}return r|a<<16|0};var a=function(){for(var e,t=[],n=0;n<256;n++){e=n;for(var i=0;i<8;i++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t}();var o=function(e,t,n,i){var r=a,o=i+n;e^=-1;for(var s=i;s<o;s++)e=e>>>8^r[255&(e^t[s])];return-1^e},s=function(e,t){var n,i,r,a,o,s,f,l,d,u,c,h,w,p,b,m,v,k,_,g,y,x,B,S,E;n=e.state,i=e.next_in,S=e.input,r=i+(e.avail_in-5),a=e.next_out,E=e.output,o=a-(t-e.avail_out),s=a+(e.avail_out-257),f=n.dmax,l=n.wsize,d=n.whave,u=n.wnext,c=n.window,h=n.hold,w=n.bits,p=n.lencode,b=n.distcode,m=(1<<n.lenbits)-1,v=(1<<n.distbits)-1;e:do{w<15&&(h+=S[i++]<<w,w+=8,h+=S[i++]<<w,w+=8),k=p[h&m];t:for(;;){if(h>>>=_=k>>>24,w-=_,0===(_=k>>>16&255))E[a++]=65535&k;else{if(!(16&_)){if(0==(64&_)){k=p[(65535&k)+(h&(1<<_)-1)];continue t}if(32&_){n.mode=12;break e}e.msg=\\\"invalid literal/length code\\\",n.mode=30;break e}g=65535&k,(_&=15)&&(w<_&&(h+=S[i++]<<w,w+=8),g+=h&(1<<_)-1,h>>>=_,w-=_),w<15&&(h+=S[i++]<<w,w+=8,h+=S[i++]<<w,w+=8),k=b[h&v];n:for(;;){if(h>>>=_=k>>>24,w-=_,!(16&(_=k>>>16&255))){if(0==(64&_)){k=b[(65535&k)+(h&(1<<_)-1)];continue n}e.msg=\\\"invalid distance code\\\",n.mode=30;break e}if(y=65535&k,w<(_&=15)&&(h+=S[i++]<<w,(w+=8)<_&&(h+=S[i++]<<w,w+=8)),(y+=h&(1<<_)-1)>f){e.msg=\\\"invalid distance too far back\\\",n.mode=30;break e}if(h>>>=_,w-=_,y>(_=a-o)){if((_=y-_)>d&&n.sane){e.msg=\\\"invalid distance too far back\\\",n.mode=30;break e}if(x=0,B=c,0===u){if(x+=l-_,_<g){g-=_;do{E[a++]=c[x++]}while(--_);x=a-y,B=E}}else if(u<_){if(x+=l+u-_,(_-=u)<g){g-=_;do{E[a++]=c[x++]}while(--_);if(x=0,u<g){g-=_=u;do{E[a++]=c[x++]}while(--_);x=a-y,B=E}}}else if(x+=u-_,_<g){g-=_;do{E[a++]=c[x++]}while(--_);x=a-y,B=E}for(;g>2;)E[a++]=B[x++],E[a++]=B[x++],E[a++]=B[x++],g-=3;g&&(E[a++]=B[x++],g>1&&(E[a++]=B[x++]))}else{x=a-y;do{E[a++]=E[x++],E[a++]=E[x++],E[a++]=E[x++],g-=3}while(g>2);g&&(E[a++]=E[x++],g>1&&(E[a++]=E[x++]))}break}}break}}while(i<r&&a<s);i-=g=w>>3,h&=(1<<(w-=g<<3))-1,e.next_in=i,e.next_out=a,e.avail_in=i<r?r-i+5:5-(i-r),e.avail_out=a<s?s-a+257:257-(a-s),n.hold=h,n.bits=w},f=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],d=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],u=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],c=function(e,t,n,r,a,o,s,c){var h,w,p,b,m,v,k,_,g,y=c.bits,x=0,B=0,S=0,E=0,R=0,O=0,A=0,T=0,Z=0,U=0,L=null,C=0,N=new i.Buf16(16),D=new i.Buf16(16),I=null,j=0;for(x=0;x<=15;x++)N[x]=0;for(B=0;B<r;B++)N[t[n+B]]++;for(R=y,E=15;E>=1&&0===N[E];E--);if(R>E&&(R=E),0===E)return a[o++]=20971520,a[o++]=20971520,c.bits=1,0;for(S=1;S<E&&0===N[S];S++);for(R<S&&(R=S),T=1,x=1;x<=15;x++)if(T<<=1,(T-=N[x])<0)return-1;if(T>0&&(0===e||1!==E))return-1;for(D[1]=0,x=1;x<15;x++)D[x+1]=D[x]+N[x];for(B=0;B<r;B++)0!==t[n+B]&&(s[D[t[n+B]]++]=B);if(0===e?(L=I=s,v=19):1===e?(L=f,C-=257,I=l,j-=257,v=256):(L=d,I=u,v=-1),U=0,B=0,x=S,m=o,O=R,A=0,p=-1,b=(Z=1<<R)-1,1===e&&Z>852||2===e&&Z>592)return 1;for(;;){k=x-A,s[B]<v?(_=0,g=s[B]):s[B]>v?(_=I[j+s[B]],g=L[C+s[B]]):(_=96,g=0),h=1<<x-A,S=w=1<<O;do{a[m+(U>>A)+(w-=h)]=k<<24|_<<16|g|0}while(0!==w);for(h=1<<x-1;U&h;)h>>=1;if(0!==h?(U&=h-1,U+=h):U=0,B++,0==--N[x]){if(x===E)break;x=t[n+s[B]]}if(x>R&&(U&b)!==p){for(0===A&&(A=R),m+=S,T=1<<(O=x-A);O+A<E&&!((T-=N[O+A])<=0);)O++,T<<=1;if(Z+=1<<O,1===e&&Z>852||2===e&&Z>592)return 1;a[p=U&b]=R<<24|O<<16|m-o|0}}return 0!==U&&(a[m+U]=x-A<<24|64<<16|0),c.bits=R,0},h=0,w=1,p=2,b=4,m=5,v=6,k=0,_=1,g=2,y=-2,x=-3,B=-4,S=-5,E=8,R=1,O=2,A=3,T=4,Z=5,U=6,L=7,C=8,N=9,D=10,I=11,j=12,F=13,H=14,z=15,M=16,P=17,K=18,J=19,Y=20,G=21,$=22,V=23,X=24,q=25,W=26,Q=27,ee=28,te=29,ne=30,ie=31,re=32,ae=852,oe=592,se=15;function fe(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function le(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new i.Buf16(320),this.work=new i.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function de(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\\\"\\\",t.wrap&&(e.adler=1&t.wrap),t.mode=R,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new i.Buf32(ae),t.distcode=t.distdyn=new i.Buf32(oe),t.sane=1,t.back=-1,k):y}function ue(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,de(e)):y}function ce(e,t){var n,i;return e&&e.state?(i=e.state,t<0?(n=0,t=-t):(n=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?y:(null!==i.window&&i.wbits!==t&&(i.window=null),i.wrap=n,i.wbits=t,ue(e))):y}function he(e,t){var n,i;return e?(i=new le,e.state=i,i.window=null,(n=ce(e,t))!==k&&(e.state=null),n):y}var we,pe,be=!0;function me(e){if(be){var t;for(we=new i.Buf32(512),pe=new i.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(c(w,e.lens,0,288,we,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;c(p,e.lens,0,32,pe,0,e.work,{bits:5}),be=!1}e.lencode=we,e.lenbits=9,e.distcode=pe,e.distbits=5}function ve(e,t,n,r){var a,o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new i.Buf8(o.wsize)),r>=o.wsize?(i.arraySet(o.window,t,n-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):((a=o.wsize-o.wnext)>r&&(a=r),i.arraySet(o.window,t,n-r,a,o.wnext),(r-=a)?(i.arraySet(o.window,t,n-r,r,0),o.wnext=r,o.whave=o.wsize):(o.wnext+=a,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=a))),0}var ke={inflateReset:ue,inflateReset2:ce,inflateResetKeep:de,inflateInit:function(e){return he(e,se)},inflateInit2:he,inflate:function(e,t){var n,a,f,l,d,u,ae,oe,se,le,de,ue,ce,he,we,pe,be,ke,_e,ge,ye,xe,Be,Se,Ee=0,Re=new i.Buf8(4),Oe=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return y;(n=e.state).mode===j&&(n.mode=F),d=e.next_out,f=e.output,ae=e.avail_out,l=e.next_in,a=e.input,u=e.avail_in,oe=n.hold,se=n.bits,le=u,de=ae,xe=k;e:for(;;)switch(n.mode){case R:if(0===n.wrap){n.mode=F;break}for(;se<16;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if(2&n.wrap&&35615===oe){n.check=0,Re[0]=255&oe,Re[1]=oe>>>8&255,n.check=o(n.check,Re,2,0),oe=0,se=0,n.mode=O;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&oe)<<8)+(oe>>8))%31){e.msg=\\\"incorrect header check\\\",n.mode=ne;break}if((15&oe)!==E){e.msg=\\\"unknown compression method\\\",n.mode=ne;break}if(se-=4,ye=8+(15&(oe>>>=4)),0===n.wbits)n.wbits=ye;else if(ye>n.wbits){e.msg=\\\"invalid window size\\\",n.mode=ne;break}n.dmax=1<<ye,e.adler=n.check=1,n.mode=512&oe?D:j,oe=0,se=0;break;case O:for(;se<16;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if(n.flags=oe,(255&n.flags)!==E){e.msg=\\\"unknown compression method\\\",n.mode=ne;break}if(57344&n.flags){e.msg=\\\"unknown header flags set\\\",n.mode=ne;break}n.head&&(n.head.text=oe>>8&1),512&n.flags&&(Re[0]=255&oe,Re[1]=oe>>>8&255,n.check=o(n.check,Re,2,0)),oe=0,se=0,n.mode=A;case A:for(;se<32;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}n.head&&(n.head.time=oe),512&n.flags&&(Re[0]=255&oe,Re[1]=oe>>>8&255,Re[2]=oe>>>16&255,Re[3]=oe>>>24&255,n.check=o(n.check,Re,4,0)),oe=0,se=0,n.mode=T;case T:for(;se<16;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}n.head&&(n.head.xflags=255&oe,n.head.os=oe>>8),512&n.flags&&(Re[0]=255&oe,Re[1]=oe>>>8&255,n.check=o(n.check,Re,2,0)),oe=0,se=0,n.mode=Z;case Z:if(1024&n.flags){for(;se<16;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}n.length=oe,n.head&&(n.head.extra_len=oe),512&n.flags&&(Re[0]=255&oe,Re[1]=oe>>>8&255,n.check=o(n.check,Re,2,0)),oe=0,se=0}else n.head&&(n.head.extra=null);n.mode=U;case U:if(1024&n.flags&&((ue=n.length)>u&&(ue=u),ue&&(n.head&&(ye=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),i.arraySet(n.head.extra,a,l,ue,ye)),512&n.flags&&(n.check=o(n.check,a,ue,l)),u-=ue,l+=ue,n.length-=ue),n.length))break e;n.length=0,n.mode=L;case L:if(2048&n.flags){if(0===u)break e;ue=0;do{ye=a[l+ue++],n.head&&ye&&n.length<65536&&(n.head.name+=String.fromCharCode(ye))}while(ye&&ue<u);if(512&n.flags&&(n.check=o(n.check,a,ue,l)),u-=ue,l+=ue,ye)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=C;case C:if(4096&n.flags){if(0===u)break e;ue=0;do{ye=a[l+ue++],n.head&&ye&&n.length<65536&&(n.head.comment+=String.fromCharCode(ye))}while(ye&&ue<u);if(512&n.flags&&(n.check=o(n.check,a,ue,l)),u-=ue,l+=ue,ye)break e}else n.head&&(n.head.comment=null);n.mode=N;case N:if(512&n.flags){for(;se<16;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if(oe!==(65535&n.check)){e.msg=\\\"header crc mismatch\\\",n.mode=ne;break}oe=0,se=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=j;break;case D:for(;se<32;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}e.adler=n.check=fe(oe),oe=0,se=0,n.mode=I;case I:if(0===n.havedict)return e.next_out=d,e.avail_out=ae,e.next_in=l,e.avail_in=u,n.hold=oe,n.bits=se,g;e.adler=n.check=1,n.mode=j;case j:if(t===m||t===v)break e;case F:if(n.last){oe>>>=7&se,se-=7&se,n.mode=Q;break}for(;se<3;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}switch(n.last=1&oe,se-=1,3&(oe>>>=1)){case 0:n.mode=H;break;case 1:if(me(n),n.mode=Y,t===v){oe>>>=2,se-=2;break e}break;case 2:n.mode=P;break;case 3:e.msg=\\\"invalid block type\\\",n.mode=ne}oe>>>=2,se-=2;break;case H:for(oe>>>=7&se,se-=7&se;se<32;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if((65535&oe)!=(oe>>>16^65535)){e.msg=\\\"invalid stored block lengths\\\",n.mode=ne;break}if(n.length=65535&oe,oe=0,se=0,n.mode=z,t===v)break e;case z:n.mode=M;case M:if(ue=n.length){if(ue>u&&(ue=u),ue>ae&&(ue=ae),0===ue)break e;i.arraySet(f,a,l,ue,d),u-=ue,l+=ue,ae-=ue,d+=ue,n.length-=ue;break}n.mode=j;break;case P:for(;se<14;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if(n.nlen=257+(31&oe),oe>>>=5,se-=5,n.ndist=1+(31&oe),oe>>>=5,se-=5,n.ncode=4+(15&oe),oe>>>=4,se-=4,n.nlen>286||n.ndist>30){e.msg=\\\"too many length or distance symbols\\\",n.mode=ne;break}n.have=0,n.mode=K;case K:for(;n.have<n.ncode;){for(;se<3;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}n.lens[Oe[n.have++]]=7&oe,oe>>>=3,se-=3}for(;n.have<19;)n.lens[Oe[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,Be={bits:n.lenbits},xe=c(h,n.lens,0,19,n.lencode,0,n.work,Be),n.lenbits=Be.bits,xe){e.msg=\\\"invalid code lengths set\\\",n.mode=ne;break}n.have=0,n.mode=J;case J:for(;n.have<n.nlen+n.ndist;){for(;pe=(Ee=n.lencode[oe&(1<<n.lenbits)-1])>>>16&255,be=65535&Ee,!((we=Ee>>>24)<=se);){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if(be<16)oe>>>=we,se-=we,n.lens[n.have++]=be;else{if(16===be){for(Se=we+2;se<Se;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if(oe>>>=we,se-=we,0===n.have){e.msg=\\\"invalid bit length repeat\\\",n.mode=ne;break}ye=n.lens[n.have-1],ue=3+(3&oe),oe>>>=2,se-=2}else if(17===be){for(Se=we+3;se<Se;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}se-=we,ye=0,ue=3+(7&(oe>>>=we)),oe>>>=3,se-=3}else{for(Se=we+7;se<Se;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}se-=we,ye=0,ue=11+(127&(oe>>>=we)),oe>>>=7,se-=7}if(n.have+ue>n.nlen+n.ndist){e.msg=\\\"invalid bit length repeat\\\",n.mode=ne;break}for(;ue--;)n.lens[n.have++]=ye}}if(n.mode===ne)break;if(0===n.lens[256]){e.msg=\\\"invalid code -- missing end-of-block\\\",n.mode=ne;break}if(n.lenbits=9,Be={bits:n.lenbits},xe=c(w,n.lens,0,n.nlen,n.lencode,0,n.work,Be),n.lenbits=Be.bits,xe){e.msg=\\\"invalid literal/lengths set\\\",n.mode=ne;break}if(n.distbits=6,n.distcode=n.distdyn,Be={bits:n.distbits},xe=c(p,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,Be),n.distbits=Be.bits,xe){e.msg=\\\"invalid distances set\\\",n.mode=ne;break}if(n.mode=Y,t===v)break e;case Y:n.mode=G;case G:if(u>=6&&ae>=258){e.next_out=d,e.avail_out=ae,e.next_in=l,e.avail_in=u,n.hold=oe,n.bits=se,s(e,de),d=e.next_out,f=e.output,ae=e.avail_out,l=e.next_in,a=e.input,u=e.avail_in,oe=n.hold,se=n.bits,n.mode===j&&(n.back=-1);break}for(n.back=0;pe=(Ee=n.lencode[oe&(1<<n.lenbits)-1])>>>16&255,be=65535&Ee,!((we=Ee>>>24)<=se);){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if(pe&&0==(240&pe)){for(ke=we,_e=pe,ge=be;pe=(Ee=n.lencode[ge+((oe&(1<<ke+_e)-1)>>ke)])>>>16&255,be=65535&Ee,!(ke+(we=Ee>>>24)<=se);){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}oe>>>=ke,se-=ke,n.back+=ke}if(oe>>>=we,se-=we,n.back+=we,n.length=be,0===pe){n.mode=W;break}if(32&pe){n.back=-1,n.mode=j;break}if(64&pe){e.msg=\\\"invalid literal/length code\\\",n.mode=ne;break}n.extra=15&pe,n.mode=$;case $:if(n.extra){for(Se=n.extra;se<Se;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}n.length+=oe&(1<<n.extra)-1,oe>>>=n.extra,se-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=V;case V:for(;pe=(Ee=n.distcode[oe&(1<<n.distbits)-1])>>>16&255,be=65535&Ee,!((we=Ee>>>24)<=se);){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if(0==(240&pe)){for(ke=we,_e=pe,ge=be;pe=(Ee=n.distcode[ge+((oe&(1<<ke+_e)-1)>>ke)])>>>16&255,be=65535&Ee,!(ke+(we=Ee>>>24)<=se);){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}oe>>>=ke,se-=ke,n.back+=ke}if(oe>>>=we,se-=we,n.back+=we,64&pe){e.msg=\\\"invalid distance code\\\",n.mode=ne;break}n.offset=be,n.extra=15&pe,n.mode=X;case X:if(n.extra){for(Se=n.extra;se<Se;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}n.offset+=oe&(1<<n.extra)-1,oe>>>=n.extra,se-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg=\\\"invalid distance too far back\\\",n.mode=ne;break}n.mode=q;case q:if(0===ae)break e;if(ue=de-ae,n.offset>ue){if((ue=n.offset-ue)>n.whave&&n.sane){e.msg=\\\"invalid distance too far back\\\",n.mode=ne;break}ue>n.wnext?(ue-=n.wnext,ce=n.wsize-ue):ce=n.wnext-ue,ue>n.length&&(ue=n.length),he=n.window}else he=f,ce=d-n.offset,ue=n.length;ue>ae&&(ue=ae),ae-=ue,n.length-=ue;do{f[d++]=he[ce++]}while(--ue);0===n.length&&(n.mode=G);break;case W:if(0===ae)break e;f[d++]=n.length,ae--,n.mode=G;break;case Q:if(n.wrap){for(;se<32;){if(0===u)break e;u--,oe|=a[l++]<<se,se+=8}if(de-=ae,e.total_out+=de,n.total+=de,de&&(e.adler=n.check=n.flags?o(n.check,f,de,d-de):r(n.check,f,de,d-de)),de=ae,(n.flags?oe:fe(oe))!==n.check){e.msg=\\\"incorrect data check\\\",n.mode=ne;break}oe=0,se=0}n.mode=ee;case ee:if(n.wrap&&n.flags){for(;se<32;){if(0===u)break e;u--,oe+=a[l++]<<se,se+=8}if(oe!==(4294967295&n.total)){e.msg=\\\"incorrect length check\\\",n.mode=ne;break}oe=0,se=0}n.mode=te;case te:xe=_;break e;case ne:xe=x;break e;case ie:return B;case re:default:return y}return e.next_out=d,e.avail_out=ae,e.next_in=l,e.avail_in=u,n.hold=oe,n.bits=se,(n.wsize||de!==e.avail_out&&n.mode<ne&&(n.mode<Q||t!==b))&&ve(e,e.output,e.next_out,de-e.avail_out)?(n.mode=ie,B):(le-=e.avail_in,de-=e.avail_out,e.total_in+=le,e.total_out+=de,n.total+=de,n.wrap&&de&&(e.adler=n.check=n.flags?o(n.check,f,de,e.next_out-de):r(n.check,f,de,e.next_out-de)),e.data_type=n.bits+(n.last?64:0)+(n.mode===j?128:0)+(n.mode===Y||n.mode===z?256:0),(0===le&&0===de||t===b)&&xe===k&&(xe=S),xe)},inflateEnd:function(e){if(!e||!e.state)return y;var t=e.state;return t.window&&(t.window=null),e.state=null,k},inflateGetHeader:function(e,t){var n;return e&&e.state?0==(2&(n=e.state).wrap)?y:(n.head=t,t.done=!1,k):y},inflateSetDictionary:function(e,t){var n,i=t.length;return e&&e.state?0!==(n=e.state).wrap&&n.mode!==I?y:n.mode===I&&r(1,t,i,0)!==n.check?x:ve(e,t,i,i)?(n.mode=ie,B):(n.havedict=1,k):y},inflateInfo:\\\"pako inflate (from Nodeca project)\\\"},_e=!0,ge=!0;try{String.fromCharCode.apply(null,[0])}catch(e){_e=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){ge=!1}for(var ye=new i.Buf8(256),xe=0;xe<256;xe++)ye[xe]=xe>=252?6:xe>=248?5:xe>=240?4:xe>=224?3:xe>=192?2:1;ye[254]=ye[254]=1;function Be(e,t){if(t<65537&&(e.subarray&&ge||!e.subarray&&_e))return String.fromCharCode.apply(null,i.shrinkBuf(e,t));for(var n=\\\"\\\",r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n}var Se=function(e){var t,n,r,a,o,s=e.length,f=0;for(a=0;a<s;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(r=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(r-56320),a++),f+=n<128?1:n<2048?2:n<65536?3:4;for(t=new i.Buf8(f),o=0,a=0;o<f;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(r=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(r-56320),a++),n<128?t[o++]=n:n<2048?(t[o++]=192|n>>>6,t[o++]=128|63&n):n<65536?(t[o++]=224|n>>>12,t[o++]=128|n>>>6&63,t[o++]=128|63&n):(t[o++]=240|n>>>18,t[o++]=128|n>>>12&63,t[o++]=128|n>>>6&63,t[o++]=128|63&n);return t},Ee=function(e){for(var t=new i.Buf8(e.length),n=0,r=t.length;n<r;n++)t[n]=e.charCodeAt(n);return t},Re=function(e,t){var n,i,r,a,o=t||e.length,s=new Array(2*o);for(i=0,n=0;n<o;)if((r=e[n++])<128)s[i++]=r;else if((a=ye[r])>4)s[i++]=65533,n+=a-1;else{for(r&=2===a?31:3===a?15:7;a>1&&n<o;)r=r<<6|63&e[n++],a--;a>1?s[i++]=65533:r<65536?s[i++]=r:(r-=65536,s[i++]=55296|r>>10&1023,s[i++]=56320|1023&r)}return Be(s,i)},Oe=function(e,t){var n;for((t=t||e.length)>e.length&&(t=e.length),n=t-1;n>=0&&128==(192&e[n]);)n--;return n<0?t:0===n?t:n+ye[e[n]]>t?n:t},Ae={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8},Te={2:\\\"need dictionary\\\",1:\\\"stream end\\\",0:\\\"\\\",\\\"-1\\\":\\\"file error\\\",\\\"-2\\\":\\\"stream error\\\",\\\"-3\\\":\\\"data error\\\",\\\"-4\\\":\\\"insufficient memory\\\",\\\"-5\\\":\\\"buffer error\\\",\\\"-6\\\":\\\"incompatible version\\\"};var Ze=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\\\"\\\",this.state=null,this.data_type=2,this.adler=0};var Ue=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\\\"\\\",this.comment=\\\"\\\",this.hcrc=0,this.done=!1},Le=Object.prototype.toString;function Ce(e){if(!(this instanceof Ce))return new Ce(e);this.options=i.assign({chunkSize:16384,windowBits:0,to:\\\"\\\"},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\\\"\\\",this.ended=!1,this.chunks=[],this.strm=new Ze,this.strm.avail_out=0;var n=ke.inflateInit2(this.strm,t.windowBits);if(n!==Ae.Z_OK)throw new Error(Te[n]);this.header=new Ue,ke.inflateGetHeader(this.strm,this.header)}function Ne(e,t){var n=new Ce(t);if(n.push(e,!0),n.err)throw n.msg||Te[n.err];return n.result}Ce.prototype.push=function(e,t){var n,r,a,o,s,f,l=this.strm,d=this.options.chunkSize,u=this.options.dictionary,c=!1;if(this.ended)return!1;r=t===~~t?t:!0===t?Ae.Z_FINISH:Ae.Z_NO_FLUSH,\\\"string\\\"==typeof e?l.input=Ee(e):\\\"[object ArrayBuffer]\\\"===Le.call(e)?l.input=new Uint8Array(e):l.input=e,l.next_in=0,l.avail_in=l.input.length;do{if(0===l.avail_out&&(l.output=new i.Buf8(d),l.next_out=0,l.avail_out=d),(n=ke.inflate(l,Ae.Z_NO_FLUSH))===Ae.Z_NEED_DICT&&u&&(f=\\\"string\\\"==typeof u?Se(u):\\\"[object ArrayBuffer]\\\"===Le.call(u)?new Uint8Array(u):u,n=ke.inflateSetDictionary(this.strm,f)),n===Ae.Z_BUF_ERROR&&!0===c&&(n=Ae.Z_OK,c=!1),n!==Ae.Z_STREAM_END&&n!==Ae.Z_OK)return this.onEnd(n),this.ended=!0,!1;l.next_out&&(0!==l.avail_out&&n!==Ae.Z_STREAM_END&&(0!==l.avail_in||r!==Ae.Z_FINISH&&r!==Ae.Z_SYNC_FLUSH)||(\\\"string\\\"===this.options.to?(a=Oe(l.output,l.next_out),o=l.next_out-a,s=Re(l.output,a),l.next_out=o,l.avail_out=d-o,o&&i.arraySet(l.output,l.output,a,o,0),this.onData(s)):this.onData(i.shrinkBuf(l.output,l.next_out)))),0===l.avail_in&&0===l.avail_out&&(c=!0)}while((l.avail_in>0||0===l.avail_out)&&n!==Ae.Z_STREAM_END);return n===Ae.Z_STREAM_END&&(r=Ae.Z_FINISH),r===Ae.Z_FINISH?(n=ke.inflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===Ae.Z_OK):r!==Ae.Z_SYNC_FLUSH||(this.onEnd(Ae.Z_OK),l.avail_out=0,!0)},Ce.prototype.onData=function(e){this.chunks.push(e)},Ce.prototype.onEnd=function(e){e===Ae.Z_OK&&(\\\"string\\\"===this.options.to?this.result=this.chunks.join(\\\"\\\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var De={Inflate:Ce,inflate:Ne,inflateRaw:function(e,t){return(t=t||{}).raw=!0,Ne(e,t)},ungzip:Ne};var Ie=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\\\"Cannot call a class as a function\\\")}(this,e),this.dataView=new DataView(t),this.position=0}return e.prototype.skip=function(e){this.position+=e},e.prototype.readBytes=function(e){var t=4===e?\\\"getUint32\\\":2===e?\\\"getUint16\\\":\\\"getUint8\\\",n=this.position;return this.position+=e,this.dataView[t](n,!0)},e}(),je=function(e){for(var t=new Ie(e),n={};;){var i=t.readBytes(4);if(67324752!==i){if(33639248!==i)break;He(t)}else{var r=Fe(t);n[r.name]={buffer:r.buffer}}}return n},Fe=function(e){var t=0,n=void 0;e.skip(4);var i=e.readBytes(2);e.skip(8);var r=e.readBytes(4);e.skip(4);var a=e.readBytes(2),o=e.readBytes(2),s=[],f=new Uint8Array(r);for(t=0;t<a;t++)s.push(String.fromCharCode(e.readBytes(1)));for(e.skip(o),t=0;t<r;t++)f[t]=e.readBytes(1);switch(i){case 0:n=f;break;case 8:n=new Uint8Array(De.inflate(f,{raw:!0}));break;default:console.log(s.join(\\\"\\\")+\\\": unsupported compression type\\\"),n=f}return{name:s.join(\\\"\\\"),buffer:n}},He=function(e){e.skip(24);var t=e.readBytes(2),n=e.readBytes(2),i=e.readBytes(2);e.skip(12),e.skip(t),e.skip(n),e.skip(i)};var ze=\\\"function\\\"==typeof Promise?Promise:function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\\\"Cannot call a class as a function\\\")}(this,e);var n=function(){};return t(function(){n()}),{then:function(e){n=e}}};var Me=0,Pe=void 0,Ke=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\\\"Cannot call a class as a function\\\")}(this,e),this._id=Me,this._listeners={},this.url=t,this.files=null,Me++}return e.unzip=function(t){return new ze(function(n){var i=new e,r=new FileReader;r.onload=function(e){var t=e.target.result;i.files=je(t),n(i)},t instanceof Blob&&r.readAsArrayBuffer(t)})},e.prototype.load=function(){var e=this;return new ze(function(t){var n=Date.now(),i=new XMLHttpRequest;i.open(\\\"GET\\\",e.url,!0),i.responseType=\\\"arraybuffer\\\",i.onprogress=function(t){e.dispatch({type:\\\"progress\\\",loaded:t.loaded,total:t.total,elapsedTime:Date.now()-n})},i.onload=function(){e.files=je(i.response),e.dispatch({type:\\\"load\\\",elapsedTime:Date.now()-n}),t()},i.send()})},e.prototype.extractAsBlobUrl=function(e,t){if(this.files[e].url)return this.files[e].url;var n=new Blob([this.files[e].buffer],{type:t});return this.files[e].url=URL.createObjectURL(n),this.files[e].url},e.prototype.extractAsText=function(e){var t=this.files[e].buffer;if(\\\"undefined\\\"!=typeof TextDecoder)return(new TextDecoder).decode(t);for(var n=\\\"\\\",i=0,r=t.length;i<r;i++)n+=String.fromCharCode(t[i]);return decodeURIComponent(escape(n))},e.prototype.extractAsJSON=function(e){return JSON.parse(this.extractAsText(e))},e.prototype.loadThreeJSON=function(e){var t=this,n=this.extractAsJSON(e),i=e.replace(/\\\\/.+\\\\.json$/,\\\"/\\\"),r=\\\"__ziploader_\\\"+this._id+\\\"__\\\",a=new RegExp(r);return-1!==!Pe.Loader.Handlers.handlers.indexOf(a)&&Pe.Loader.Handlers.add(a,{load:function(e){return t.loadThreeTexture(e.replace(a,\\\"\\\"))}}),Pe.JSONLoader.prototype.parse(n,r+i)},e.prototype.loadThreeTexture=function(e){var t=new Pe.Texture,n=/\\\\.jpg$/.test(e)?\\\"image/jpeg\\\":/\\\\.png$/.test(e)?\\\"image/png\\\":/\\\\.gif$/.test(e)?\\\"image/gif\\\":void 0,i=new Blob([this.files[e].buffer],{type:n});return t.image=new Image,t.image.addEventListener(\\\"load\\\",function e(){t.needsUpdate=!0,t.image.removeEventListener(\\\"load\\\",e),URL.revokeObjectURL(t.image.src)}),t.image.src=URL.createObjectURL(i),t},e.prototype.on=function(e,t){this._listeners[e]||(this._listeners[e]=[]),-1===this._listeners[e].indexOf(t)&&this._listeners[e].push(t)},e.prototype.off=function(e,t){var n=this._listeners[e];if(n){var i=n.indexOf(t);-1!==i&&n.splice(i,1)}},e.prototype.dispatch=function(e){var t=this._listeners[e.type];if(t){e.target=this;for(var n=t.length,i=0;i<n;i++)t[i].call(this,e)}},e.prototype.clear=function(e){if(e)return URL.revokeObjectURL(this.files[e].url),void delete this.files[e];for(var t in this.files)URL.revokeObjectURL(this.files[t].url);if(delete this.files,Pe){var n=\\\"__ziploader_\\\"+this._id+\\\"__\\\";Pe.Loader.Handlers.handlers.some(function(e,t){if(e instanceof RegExp&&e.source===n)return Pe.Loader.Handlers.handlers.splice(t,2),!0})}},e.install=function(e){e.THREE&&(Pe=e.THREE)},e}();function Je(e,t,n,i,r,a,o){try{var s=e[a](o),f=s.value}catch(e){return void n(e)}s.done?t(f):Promise.resolve(f).then(i,r)}function Ye(e){return function(){var t=this,n=arguments;return new Promise(function(i,r){var a=e.apply(t,n);function o(e){Je(a,i,r,o,s,\\\"next\\\",e)}function s(e){Je(a,i,r,o,s,\\\"throw\\\",e)}o(void 0)})}}function Ge(){return(Ge=Ye(function*(e){const t=new Ke(e);return t.load().then(()=>{const e={};for(const n in t.files)e[n]=t.extractAsBlobUrl(n);const n=JSON.parse(t.extractAsText(\\\"scene.gltf\\\"));return n.buffers&&n.buffers.forEach(t=>t.uri=e[t.uri]),n.images&&n.images.forEach(t=>t.uri=e[t.uri]),e[\\\"scene.gtlf\\\"]=URL.createObjectURL(new Blob([JSON.stringify(n,null,2)],{type:\\\"text/plain\\\"})),e})})).apply(this,arguments)}self.onmessage=function(){var e=Ye(function*(e){try{const t=yield function(e){return Ge.apply(this,arguments)}(e.data.payload);self.postMessage({id:e.data.id,result:t})}catch(t){self.postMessage({id:e.data.id,err:t.message})}});return function(t){return e.apply(this,arguments)}}()}]);\\n//# sourceMappingURL=sketchfab-zip.worker-46f25a802631ffb02aeb.js.map\", \"/\" + \"assets/js/sketchfab-zip.worker-46f25a802631ffb02aeb.js\");\n};","var THREE = global.THREE = require('three');\n\n// Allow cross-origin images to be loaded.\n\n// This should not be on `THREE.Loader` nor `THREE.ImageUtils`.\n// Must be on `THREE.TextureLoader`.\nif (THREE.TextureLoader) {\n  THREE.TextureLoader.prototype.crossOrigin = 'anonymous';\n}\n\n// This is for images loaded from the model loaders.\nif (THREE.ImageLoader) {\n  THREE.ImageLoader.prototype.crossOrigin = 'anonymous';\n}\n\n// In-memory caching for XHRs (for images, audio files, textures, etc.).\nif (THREE.Cache) {\n  THREE.Cache.enabled = true;\n}\n\n// TODO: Eventually include these only if they are needed by a component.\nrequire('three/examples/js/loaders/DRACOLoader');  // THREE.DRACOLoader\nrequire('three/examples/js/loaders/GLTFLoader');  // THREE.GLTFLoader\nrequire('three/examples/js/loaders/OBJLoader');  // THREE.OBJLoader\nrequire('three/examples/js/loaders/MTLLoader');  // THREE.MTLLoader\n\nTHREE.DRACOLoader.prototype.crossOrigin = 'anonymous';\nTHREE.GLTFLoader.prototype.crossOrigin = 'anonymous';\nTHREE.MTLLoader.prototype.crossOrigin = 'anonymous';\nTHREE.OBJLoader.prototype.crossOrigin = 'anonymous';\n\nmodule.exports = THREE;\n","var utils = require('../utils/');\nvar PropertyTypes = require('./propertyTypes');\n\nvar debug = utils.debug;\nvar isValidDefaultValue = PropertyTypes.isValidDefaultValue;\nvar propertyTypes = PropertyTypes.propertyTypes;\n\nvar warn = debug('core:schema:warn');\n\n/**\n * A schema is classified as a schema for a single property if:\n * - `type` is defined on the schema as a string.\n * - OR `default` is defined on the schema, as a reserved keyword.\n * - OR schema is empty.\n */\nfunction isSingleProperty (schema) {\n  if ('type' in schema) {\n    return typeof schema.type === 'string';\n  }\n  return 'default' in schema;\n}\nmodule.exports.isSingleProperty = isSingleProperty;\n\n/**\n * Build step to schema to use `type` to inject default value, parser, and stringifier.\n *\n * @param {object} schema\n * @param {string} componentName\n * @returns {object} Schema.\n */\nmodule.exports.process = function (schema, componentName) {\n  var propName;\n\n  // For single property schema, run processPropDefinition over the whole schema.\n  if (isSingleProperty(schema)) {\n    return processPropertyDefinition(schema, componentName);\n  }\n\n  // For multi-property schema, run processPropDefinition over each property definition.\n  for (propName in schema) {\n    schema[propName] = processPropertyDefinition(schema[propName], componentName);\n  }\n  return schema;\n};\n\n/**\n * Inject default value, parser, stringifier for single property.\n *\n * @param {object} propDefinition\n * @param {string} componentName\n */\nfunction processPropertyDefinition (propDefinition, componentName) {\n  var defaultVal = propDefinition.default;\n  var isCustomType;\n  var propType;\n  var typeName = propDefinition.type;\n\n  // Type inference.\n  if (!propDefinition.type) {\n    if (defaultVal !== undefined &&\n        (typeof defaultVal === 'boolean' || typeof defaultVal === 'number')) {\n      // Type inference.\n      typeName = typeof defaultVal;\n    } else if (Array.isArray(defaultVal)) {\n      typeName = 'array';\n    } else {\n      // Fall back to string.\n      typeName = 'string';\n    }\n  } else if (propDefinition.type === 'bool') {\n    typeName = 'boolean';\n  } else if (propDefinition.type === 'float') {\n    typeName = 'number';\n  }\n\n  propType = propertyTypes[typeName];\n  if (!propType) {\n    warn('Unknown property type for component `' + componentName + '`: ' + typeName);\n  }\n\n  // Fill in parse and stringify using property types.\n  isCustomType = !!propDefinition.parse;\n  propDefinition.parse = propDefinition.parse || propType.parse;\n  propDefinition.stringify = propDefinition.stringify || propType.stringify;\n\n  // Fill in type name.\n  propDefinition.type = typeName;\n\n  // Check that default value exists.\n  if ('default' in propDefinition) {\n    // Check that default values are valid.\n    if (!isCustomType && !isValidDefaultValue(typeName, defaultVal)) {\n      warn('Default value `' + defaultVal + '` does not match type `' + typeName +\n           '` in component `' + componentName + '`');\n    }\n  } else {\n    // Fill in default value.\n    propDefinition.default = propType.default;\n  }\n\n  return propDefinition;\n}\nmodule.exports.processPropertyDefinition = processPropertyDefinition;\n\n/**\n * Parse propData using schema. Use default values if not existing in propData.\n *\n * @param {object} propData - Unparsed properties.\n * @param {object} schema - Property types definition.\n * @param {boolean} getPartialData - Whether to return full component data or just the data\n *        with keys in `propData`.\n * @param {string } componentName - Name of the component, used for the property warning.\n * @param {boolean} silent - Suppress warning messages.\n */\nmodule.exports.parseProperties = (function () {\n  var propNames = [];\n\n  return function (propData, schema, getPartialData, componentName, silent) {\n    var i;\n    var propName;\n    var propDefinition;\n    var propValue;\n\n    propNames.length = 0;\n    for (propName in (getPartialData ? propData : schema)) {\n      if (getPartialData && propData[propName] === undefined) { continue; }\n      propNames.push(propName);\n    }\n\n    if (propData === null || typeof propData !== 'object') { return propData; }\n\n    // Validation errors.\n    for (propName in propData) {\n      if (propData[propName] !== undefined && !schema[propName] && !silent) {\n        warn('Unknown property `' + propName +\n             '` for component/system `' + componentName + '`.');\n      }\n    }\n\n    for (i = 0; i < propNames.length; i++) {\n      propName = propNames[i];\n      propDefinition = schema[propName];\n      propValue = propData[propName];\n      if (!(schema[propName])) { return; }\n      propData[propName] = parseProperty(propValue, propDefinition);\n    }\n\n    return propData;\n  };\n})();\n\n/**\n * Deserialize a single property.\n */\nfunction parseProperty (value, propDefinition) {\n  // Use default value if value is falsy.\n  if (value === undefined || value === null || value === '') {\n    value = propDefinition.default;\n    if (Array.isArray(value)) { value = value.slice(); }\n  }\n  // Invoke property type parser.\n  return propDefinition.parse(value, propDefinition.default);\n}\nmodule.exports.parseProperty = parseProperty;\n\n/**\n * Serialize a group of properties.\n */\nmodule.exports.stringifyProperties = function (propData, schema) {\n  var propName;\n  var propDefinition;\n  var propValue;\n  var stringifiedData = {};\n  var value;\n\n  for (propName in propData) {\n    propDefinition = schema[propName];\n    propValue = propData[propName];\n    value = propValue;\n    if (typeof value === 'object') {\n      value = stringifyProperty(propValue, propDefinition);\n      if (!propDefinition) { warn('Unknown component property: ' + propName); }\n    }\n    stringifiedData[propName] = value;\n  }\n  return stringifiedData;\n};\n\n/**\n * Serialize a single property.\n */\nfunction stringifyProperty (value, propDefinition) {\n  // This function stringifies but it's used in a context where\n  // there's always second stringification pass. By returning the original\n  // value when it's not an object we save one unnecessary call\n  // to JSON.stringify.\n  if (typeof value !== 'object') { return value; }\n  // if there's no schema for the property we use standar JSON stringify\n  if (!propDefinition || value === null) { return JSON.stringify(value); }\n  return propDefinition.stringify(value);\n}\nmodule.exports.stringifyProperty = stringifyProperty;\n","/* global Node */\nvar schema = require('./schema');\nvar scenes = require('./scene/scenes');\nvar systems = require('./system');\nvar utils = require('../utils/');\n\nvar components = module.exports.components = {};  // Keep track of registered components.\nvar parseProperties = schema.parseProperties;\nvar parseProperty = schema.parseProperty;\nvar processSchema = schema.process;\nvar isSingleProp = schema.isSingleProperty;\nvar stringifyProperties = schema.stringifyProperties;\nvar stringifyProperty = schema.stringifyProperty;\nvar styleParser = utils.styleParser;\nvar warn = utils.debug('core:component:warn');\n\nvar aframeScript = document.currentScript;\nvar upperCaseRegExp = new RegExp('[A-Z]+');\n\n// Object pools by component, created upon registration.\nvar objectPools = {};\n\n/**\n * Component class definition.\n *\n * Components configure appearance, modify behavior, or add functionality to\n * entities. The behavior and appearance of an entity can be changed at runtime\n * by adding, removing, or updating components. Entities do not share instances\n * of components.\n *\n * @member {object} el - Reference to the entity element.\n * @member {string} attrValue - Value of the corresponding HTML attribute.\n * @member {object} data - Component data populated by parsing the\n *         mapped attribute of the component plus applying defaults and mixins.\n */\nvar Component = module.exports.Component = function (el, attrValue, id) {\n  var self = this;\n  this.el = el;\n  this.id = id;\n  this.attrName = this.name + (id ? '__' + id : '');\n  this.evtDetail = {id: this.id, name: this.name};\n  this.initialized = false;\n  this.isSingleProperty = isSingleProp(this.schema);\n  this.isSinglePropertyObject = this.isSingleProperty &&\n                                isObject(parseProperty(undefined, this.schema)) &&\n                                !(this.schema.default instanceof window.HTMLElement);\n  this.isObjectBased = !this.isSingleProperty || this.isSinglePropertyObject;\n  this.el.components[this.attrName] = this;\n  this.objectPool = objectPools[this.name];\n\n  // Store component data from previous update call.\n  this.attrValue = undefined;\n  this.nextData = this.isObjectBased ? this.objectPool.use() : undefined;\n  this.oldData = this.isObjectBased ? this.objectPool.use() : undefined;\n  this.previousOldData = this.isObjectBased ? this.objectPool.use() : undefined;\n  this.parsingAttrValue = this.isObjectBased ? this.objectPool.use() : undefined;\n\n  // Last value passed to updateProperties.\n  this.throttledEmitComponentChanged = utils.throttle(function emitChange () {\n    el.emit('componentchanged', self.evtDetail, false);\n  }, 200);\n  this.updateProperties(attrValue);\n};\n\nComponent.prototype = {\n  /**\n   * Contains the type schema and defaults for the data values.\n   * Data is coerced into the types of the values of the defaults.\n   */\n  schema: {},\n\n  /**\n   * Init handler. Similar to attachedCallback.\n   * Called during component initialization and is only run once.\n   * Components can use this to set initial state.\n   */\n  init: function () { /* no-op */ },\n\n  /**\n   * Update handler. Similar to attributeChangedCallback.\n   * Called whenever component's data changes.\n   * Also called on component initialization when the component receives initial data.\n   *\n   * @param {object} prevData - Previous attributes of the component.\n   */\n  update: function (prevData) { /* no-op */ },\n\n  updateSchema: undefined,\n\n  /**\n   * Tick handler.\n   * Called on each tick of the scene render loop.\n   * Affected by play and pause.\n   *\n   * @param {number} time - Scene tick time.\n   * @param {number} timeDelta - Difference in current render time and previous render time.\n   */\n  tick: undefined,\n\n  /**\n   * Tock handler.\n   * Called on each tock of the scene render loop.\n   * Affected by play and pause.\n   *\n   * @param {number} time - Scene tick time.\n   * @param {number} timeDelta - Difference in current render time and previous render time.\n   * @param {object} camera - Camera used to render the last frame.\n   */\n  tock: undefined,\n\n  /**\n   * Called to start any dynamic behavior (e.g., animation, AI, events, physics).\n   */\n  play: function () { /* no-op */ },\n\n  /**\n   * Called to stop any dynamic behavior (e.g., animation, AI, events, physics).\n   */\n  pause: function () { /* no-op */ },\n\n  /**\n   * Remove handler. Similar to detachedCallback.\n   * Called whenever component is removed from the entity (i.e., removeAttribute).\n   * Components can use this to reset behavior on the entity.\n   */\n  remove: function () { /* no-op */ },\n\n  /**\n   * Parses each property based on property type.\n   * If component is single-property, then parses the single property value.\n   *\n   * @param {string} value - HTML attribute value.\n   * @param {boolean} silent - Suppress warning messages.\n   * @returns {object} Component data.\n   */\n  parse: function (value, silent) {\n    var schema = this.schema;\n    if (this.isSingleProperty) { return parseProperty(value, schema); }\n    return parseProperties(styleParser.parse(value), schema, true, this.name, silent);\n  },\n\n  /**\n   * Stringify properties if necessary.\n   *\n   * Only called from `Entity.setAttribute` for properties whose parsers accept a non-string\n   * value (e.g., selector, vec3 property types).\n   *\n   * @param {object} data - Complete component data.\n   * @returns {string}\n   */\n  stringify: function (data) {\n    var schema = this.schema;\n    if (typeof data === 'string') { return data; }\n    if (this.isSingleProperty) { return stringifyProperty(data, schema); }\n    data = stringifyProperties(data, schema);\n    return styleParser.stringify(data);\n  },\n\n  /**\n   * Update the cache of the pre-parsed attribute value.\n   *\n   * @param {string} value - New data.\n   * @param {boolean } clobber - Whether to wipe out and replace previous data.\n   */\n  updateCachedAttrValue: function (value, clobber) {\n    var newAttrValue;\n    var tempObject;\n    var property;\n\n    if (value === undefined) { return; }\n\n    // If null value is the new attribute value, make the attribute value falsy.\n    if (value === null) {\n      if (this.isObjectBased && this.attrValue) {\n        this.objectPool.recycle(this.attrValue);\n      }\n      this.attrValue = undefined;\n      return;\n    }\n\n    if (value instanceof Object && !(value instanceof window.HTMLElement)) {\n      // If value is an object, copy it to our pooled newAttrValue object to use to update\n      // the attrValue.\n      tempObject = this.objectPool.use();\n      newAttrValue = utils.extend(tempObject, value);\n    } else {\n      newAttrValue = this.parseAttrValueForCache(value);\n    }\n\n    // Merge new data with previous `attrValue` if updating and not clobbering.\n    if (this.isObjectBased && !clobber && this.attrValue) {\n      for (property in this.attrValue) {\n        if (newAttrValue[property] === undefined) {\n          newAttrValue[property] = this.attrValue[property];\n        }\n      }\n    }\n\n    // Update attrValue.\n    if (this.isObjectBased && !this.attrValue) {\n      this.attrValue = this.objectPool.use();\n    }\n    utils.objectPool.clearObject(this.attrValue);\n    this.attrValue = extendProperties(this.attrValue, newAttrValue, this.isObjectBased);\n    utils.objectPool.clearObject(tempObject);\n  },\n\n  /**\n   * Given an HTML attribute value parses the string based on the component schema.\n   * To avoid double parsings of strings into strings we store the original instead\n   * of the parsed one\n   *\n   * @param {string} value - HTML attribute value\n   */\n  parseAttrValueForCache: function (value) {\n    var parsedValue;\n    if (typeof value !== 'string') { return value; }\n    if (this.isSingleProperty) {\n      parsedValue = this.schema.parse(value);\n      /**\n       * To avoid bogus double parsings. Cached values will be parsed when building\n       * component data. For instance when parsing a src id to its url, we want to cache\n       * original string and not the parsed one (#monster -> models/monster.dae)\n       * so when building data we parse the expected value.\n       */\n      if (typeof parsedValue === 'string') { parsedValue = value; }\n    } else {\n      // Parse using the style parser to avoid double parsing of individual properties.\n      utils.objectPool.clearObject(this.parsingAttrValue);\n      parsedValue = styleParser.parse(value, this.parsingAttrValue);\n    }\n    return parsedValue;\n  },\n\n  /**\n   * Write cached attribute data to the entity DOM element.\n   *\n   * @param {boolean} isDefault - Whether component is a default component. Always flush for\n   *   default components.\n   */\n  flushToDOM: function (isDefault) {\n    var attrValue = isDefault ? this.data : this.attrValue;\n    if (!attrValue) { return; }\n    window.HTMLElement.prototype.setAttribute.call(this.el, this.attrName,\n                                                   this.stringify(attrValue));\n  },\n\n  /**\n   * Apply new component data if data has changed (from setAttribute).\n   *\n   * @param {string} attrValue - HTML attribute value.\n   *        If undefined, use the cached attribute value and continue updating properties.\n   * @param {boolean} clobber - The previous component data is overwritten by the atrrValue\n   */\n  updateProperties: function (attrValue, clobber) {\n    var el = this.el;\n\n    // Just cache the attribute if the entity has not loaded\n    // Components are not initialized until the entity has loaded\n    if (!el.hasLoaded) {\n      this.updateCachedAttrValue(attrValue);\n      return;\n    }\n\n    // Parse the attribute value.\n    // Cache current attrValue for future updates. Updates `this.attrValue`.\n    // `null` means no value on purpose, do not set a default value, let mixins take over.\n    if (attrValue !== null) {\n      attrValue = this.parseAttrValueForCache(attrValue);\n    }\n\n    // Cache current attrValue for future updates.\n    this.updateCachedAttrValue(attrValue, clobber);\n\n    if (this.initialized) {\n      this.updateComponent(attrValue, clobber);\n      this.callUpdateHandler();\n    } else {\n      this.initComponent();\n    }\n  },\n\n  initComponent: function () {\n    var el = this.el;\n    var initialOldData;\n\n    // Build data.\n    if (this.updateSchema) { this.updateSchema(this.buildData(this.attrValue, false, true)); }\n    this.data = this.buildData(this.attrValue);\n\n    // Component is being already initialized.\n    if (el.initializingComponents[this.name]) { return; }\n\n    // Prevent infinite loop in case of init method setting same component on the entity.\n    el.initializingComponents[this.name] = true;\n    // Initialize component.\n    this.init();\n    this.initialized = true;\n    delete el.initializingComponents[this.name];\n\n    // Store current data as previous data for future updates.\n    this.oldData = extendProperties(this.oldData, this.data, this.isObjectBased);\n\n    // For oldData, pass empty object to multiple-prop schemas or object single-prop schema.\n    // Pass undefined to rest of types.\n    initialOldData = this.isObjectBased ? this.objectPool.use() : undefined;\n    this.update(initialOldData);\n    if (this.isObjectBased) { this.objectPool.recycle(initialOldData); }\n\n    // Play the component if the entity is playing.\n    if (el.isPlaying) { this.play(); }\n    el.emit('componentinitialized', this.evtDetail, false);\n  },\n\n  /**\n   * @param attrValue - Passed argument from setAttribute.\n   */\n  updateComponent: function (attrValue, clobber) {\n    var key;\n    var mayNeedSchemaUpdate;\n\n    if (clobber) {\n      // Clobber. Rebuild.\n      if (this.updateSchema) {\n        this.updateSchema(this.buildData(this.attrValue, true, true));\n      }\n      this.data = this.buildData(this.attrValue, true, false);\n      return;\n    }\n\n    // Apply new value to this.data in place since direct update.\n    if (this.isSingleProperty) {\n      if (this.isObjectBased) {\n        parseProperty(attrValue, this.schema);\n      }\n      // Single-property (already parsed).\n      this.data = attrValue;\n      return;\n    }\n\n    parseProperties(attrValue, this.schema, true, this.name);\n\n    // Check if we need to update schema.\n    if (this.schemaChangeKeys.length) {\n      for (key in attrValue) {\n        if (this.schema[key].schemaChange) {\n          mayNeedSchemaUpdate = true;\n          break;\n        }\n      }\n    }\n    if (mayNeedSchemaUpdate) {\n      // Rebuild data if need schema update.\n      if (this.updateSchema) {\n        this.updateSchema(this.buildData(this.attrValue, true, true));\n      }\n      this.data = this.buildData(this.attrValue, true, false);\n      return;\n    }\n\n    // Normal update.\n    for (key in attrValue) {\n      if (attrValue[key] === undefined) { continue; }\n      this.data[key] = attrValue[key];\n    }\n  },\n\n  /**\n   * Check if component should fire update and fire update lifecycle handler.\n   */\n  callUpdateHandler: function () {\n    var hasComponentChanged;\n\n    // Store the previous old data before we calculate the new oldData.\n    if (this.previousOldData instanceof Object) {\n      utils.objectPool.clearObject(this.previousOldData);\n    }\n    if (this.isObjectBased) {\n      copyData(this.previousOldData, this.oldData);\n    } else {\n      this.previousOldData = this.oldData;\n    }\n\n    hasComponentChanged = !utils.deepEqual(this.oldData, this.data);\n\n    // Don't update if properties haven't changed.\n    // Always update rotation, position, scale.\n    if (!this.isPositionRotationScale && !hasComponentChanged) { return; }\n\n    // Store current data as previous data for future updates.\n    // Reuse `this.oldData` object to try not to allocate another one.\n    if (this.oldData instanceof Object) { utils.objectPool.clearObject(this.oldData); }\n    this.oldData = extendProperties(this.oldData, this.data, this.isObjectBased);\n\n    // Update component with the previous old data.\n    this.update(this.previousOldData);\n\n    this.throttledEmitComponentChanged();\n  },\n\n  handleMixinUpdate: function () {\n    this.data = this.buildData(this.attrValue);\n    this.callUpdateHandler();\n  },\n\n  /**\n   * Reset value of a property to the property's default value.\n   * If single-prop component, reset value to component's default value.\n   *\n   * @param {string} propertyName - Name of property to reset.\n   */\n  resetProperty: function (propertyName) {\n    if (this.isObjectBased) {\n      if (!(propertyName in this.attrValue)) { return; }\n      delete this.attrValue[propertyName];\n      this.data[propertyName] = this.schema[propertyName].default;\n    } else {\n      this.attrValue = this.schema.default;\n      this.data = this.schema.default;\n    }\n    this.updateProperties(this.attrValue);\n  },\n\n  /**\n   * Extend schema of component given a partial schema.\n   *\n   * Some components might want to mutate their schema based on certain properties.\n   * e.g., Material component changes its schema based on `shader` to account for different\n   * uniforms\n   *\n   * @param {object} schemaAddon - Schema chunk that extend base schema.\n   */\n  extendSchema: function (schemaAddon) {\n    var extendedSchema;\n    // Clone base schema.\n    extendedSchema = utils.extend({}, components[this.name].schema);\n    // Extend base schema with new schema chunk.\n    utils.extend(extendedSchema, schemaAddon);\n    this.schema = processSchema(extendedSchema);\n    this.el.emit('schemachanged', this.evtDetail);\n  },\n\n  /**\n   * Build component data from the current state of the entity.data.\n   *\n   * Precedence:\n   * 1. Defaults data\n   * 2. Mixin data.\n   * 3. Attribute data.\n   *\n   * Finally coerce the data to the types of the defaults.\n   *\n   * @param {object} newData - Element new data.\n   * @param {boolean} clobber - The previous data is completely replaced by the new one.\n   * @param {boolean} silent - Suppress warning messages.\n   * @return {object} The component data\n   */\n  buildData: function (newData, clobber, silent) {\n    var componentDefined;\n    var data;\n    var defaultValue;\n    var key;\n    var mixinData;\n    var nextData = this.nextData;\n    var schema = this.schema;\n    var i;\n    var mixinEls = this.el.mixinEls;\n    var previousData;\n\n    // Whether component has a defined value. For arrays, treat empty as not defined.\n    componentDefined = newData && newData.constructor === Array\n      ? newData.length\n      : newData !== undefined && newData !== null;\n\n    if (this.isObjectBased) { utils.objectPool.clearObject(nextData); }\n\n    // 1. Gather default values (lowest precendence).\n    if (this.isSingleProperty) {\n      if (this.isObjectBased) {\n        // If object-based single-prop, then copy over the data to our pooled object.\n        data = copyData(nextData, schema.default);\n      } else {\n        // If is plain single-prop, copy by value the default.\n        data = isObjectOrArray(schema.default)\n          ? utils.clone(schema.default)\n          : schema.default;\n      }\n    } else {\n      // Preserve previously set properties if clobber not enabled.\n      previousData = !clobber && this.attrValue;\n\n      // Clone default value if object so components don't share object\n      data = previousData instanceof Object\n        ? copyData(nextData, previousData)\n        : nextData;\n\n      // Apply defaults.\n      for (key in schema) {\n        defaultValue = schema[key].default;\n        if (data[key] !== undefined) { continue; }\n        // Clone default value if object so components don't share object\n        data[key] = isObjectOrArray(defaultValue)\n          ? utils.clone(defaultValue)\n          : defaultValue;\n      }\n    }\n\n    // 2. Gather mixin values.\n    for (i = 0; i < mixinEls.length; i++) {\n      mixinData = mixinEls[i].getAttribute(this.attrName);\n      if (!mixinData) { continue; }\n      data = extendProperties(data, mixinData, this.isObjectBased);\n    }\n\n    // 3. Gather attribute values (highest precendence).\n    if (componentDefined) {\n      if (this.isSingleProperty) {\n        // If object-based, copy the value to not modify the original.\n        if (isObject(newData)) {\n          copyData(this.parsingAttrValue, newData);\n          return parseProperty(this.parsingAttrValue, schema);\n        }\n        return parseProperty(newData, schema);\n      }\n      data = extendProperties(data, newData, this.isObjectBased);\n    } else {\n      // Parse and coerce using the schema.\n      if (this.isSingleProperty) { return parseProperty(data, schema); }\n    }\n\n    return parseProperties(data, schema, undefined, this.name, silent);\n  }\n};\n\n// For testing.\nif (window.debug) {\n  var registrationOrderWarnings = module.exports.registrationOrderWarnings = {};\n}\n\n/**\n * Registers a component to A-Frame.\n *\n * @param {string} name - Component name.\n * @param {object} definition - Component schema and lifecycle method handlers.\n * @returns {object} Component.\n */\nmodule.exports.registerComponent = function (name, definition) {\n  var NewComponent;\n  var propertyName;\n  var proto = {};\n  var schema;\n  var schemaIsSingleProp;\n\n  // Warning if component is statically registered after the scene.\n  if (document.currentScript && document.currentScript !== aframeScript) {\n    scenes.forEach(function checkPosition (sceneEl) {\n      // Okay to register component after the scene at runtime.\n      if (sceneEl.hasLoaded) { return; }\n\n      // Check that component is declared before the scene.\n      if (document.currentScript.compareDocumentPosition(sceneEl) ===\n          Node.DOCUMENT_POSITION_FOLLOWING) { return; }\n\n      warn('The component `' + name + '` was registered in a <script> tag after the scene. ' +\n           'Component <script> tags in an HTML file should be declared *before* the scene ' +\n           'such that the component is available to entities during scene initialization.');\n\n      // For testing.\n      if (window.debug) { registrationOrderWarnings[name] = true; }\n    });\n  }\n\n  if (upperCaseRegExp.test(name) === true) {\n    warn('The component name `' + name + '` contains uppercase characters, but ' +\n         'HTML will ignore the capitalization of attribute names. ' +\n         'Change the name to be lowercase: `' + name.toLowerCase() + '`');\n  }\n\n  if (name.indexOf('__') !== -1) {\n    throw new Error('The component name `' + name + '` is not allowed. ' +\n                    'The sequence __ (double underscore) is reserved to specify an id' +\n                    ' for multiple components of the same type');\n  }\n\n  // Format definition object to prototype object.\n  Object.keys(definition).forEach(function (key) {\n    proto[key] = {\n      value: definition[key],\n      writable: true\n    };\n  });\n\n  if (components[name]) {\n    throw new Error('The component `' + name + '` has been already registered. ' +\n                    'Check that you are not loading two versions of the same component ' +\n                    'or two different components of the same name.');\n  }\n\n  NewComponent = function (el, attr, id) {\n    Component.call(this, el, attr, id);\n  };\n\n  NewComponent.prototype = Object.create(Component.prototype, proto);\n  NewComponent.prototype.name = name;\n  NewComponent.prototype.isPositionRotationScale =\n    name === 'position' || name === 'rotation' || name === 'scale';\n  NewComponent.prototype.constructor = NewComponent;\n  NewComponent.prototype.system = systems && systems.systems[name];\n  NewComponent.prototype.play = wrapPlay(NewComponent.prototype.play);\n  NewComponent.prototype.pause = wrapPause(NewComponent.prototype.pause);\n  NewComponent.prototype.remove = wrapRemove(NewComponent.prototype.remove);\n\n  schema = utils.extend(processSchema(NewComponent.prototype.schema,\n                                      NewComponent.prototype.name));\n  schemaIsSingleProp = isSingleProp(NewComponent.prototype.schema);\n\n  // Keep track of keys that may potentially change the schema.\n  if (!schemaIsSingleProp) {\n    NewComponent.prototype.schemaChangeKeys = [];\n    for (propertyName in schema) {\n      if (schema[propertyName].schemaChange) {\n        NewComponent.prototype.schemaChangeKeys.push(propertyName);\n      }\n    }\n  }\n\n  // Create object pool for class of components.\n  objectPools[name] = utils.objectPool.createPool();\n\n  components[name] = {\n    Component: NewComponent,\n    dependencies: NewComponent.prototype.dependencies,\n    isSingleProp: schemaIsSingleProp,\n    multiple: NewComponent.prototype.multiple,\n    name: name,\n    parse: NewComponent.prototype.parse,\n    parseAttrValueForCache: NewComponent.prototype.parseAttrValueForCache,\n    schema: schema,\n    stringify: NewComponent.prototype.stringify,\n    type: NewComponent.prototype.type\n  };\n  return NewComponent;\n};\n\n/**\n* Clone component data.\n* Clone only the properties that are plain objects while keeping a reference for the rest.\n*\n* @param data - Component data to clone.\n* @returns Cloned data.\n*/\nfunction copyData (dest, sourceData) {\n  var parsedProperty;\n  var key;\n  for (key in sourceData) {\n    if (sourceData[key] === undefined) { continue; }\n    parsedProperty = sourceData[key];\n    dest[key] = isObjectOrArray(parsedProperty)\n      ? utils.clone(parsedProperty)\n      : parsedProperty;\n  }\n  return dest;\n}\n\n/**\n* Object extending with checking for single-property schema.\n*\n* @param dest - Destination object or value.\n* @param source - Source object or value\n* @param {boolean} isObjectBased - Whether values are objects.\n* @returns Overridden object or value.\n*/\nfunction extendProperties (dest, source, isObjectBased) {\n  var key;\n  if (isObjectBased && source.constructor === Object) {\n    for (key in source) {\n      if (source[key] === undefined) { continue; }\n      if (source[key] && source[key].constructor === Object) {\n        dest[key] = utils.clone(source[key]);\n      } else {\n        dest[key] = source[key];\n      }\n    }\n    return dest;\n  }\n  return source;\n}\n\n/**\n * Checks if a component has defined a method that needs to run every frame.\n */\nfunction hasBehavior (component) {\n  return component.tick || component.tock;\n}\n\n/**\n * Wrapper for defined pause method.\n * Pause component by removing tick behavior and calling user's pause method.\n *\n * @param pauseMethod {function}\n */\nfunction wrapPause (pauseMethod) {\n  return function pause () {\n    var sceneEl = this.el.sceneEl;\n    if (!this.isPlaying) { return; }\n    pauseMethod.call(this);\n    this.isPlaying = false;\n    // Remove tick behavior.\n    if (!hasBehavior(this)) { return; }\n    sceneEl.removeBehavior(this);\n  };\n}\n\n/**\n * Wrapper for defined play method.\n * Play component by adding tick behavior and calling user's play method.\n *\n * @param playMethod {function}\n */\nfunction wrapPlay (playMethod) {\n  return function play () {\n    var sceneEl = this.el.sceneEl;\n    var shouldPlay = this.el.isPlaying && !this.isPlaying;\n    if (!this.initialized || !shouldPlay) { return; }\n    playMethod.call(this);\n    this.isPlaying = true;\n    // Add tick behavior.\n    if (!hasBehavior(this)) { return; }\n    sceneEl.addBehavior(this);\n  };\n}\n\n/**\n * Wrapper for defined remove method.\n * Clean up memory.\n *\n * @param removeMethod {function} - Defined remove method.\n */\nfunction wrapRemove (removeMethod) {\n  return function remove () {\n    removeMethod.call(this);\n    this.objectPool.recycle(this.attrValue);\n    this.objectPool.recycle(this.oldData);\n    this.objectPool.recycle(this.parsingAttrValue);\n\n    this.attrValue = this.oldData = this.parsingAttrValue = undefined;\n  };\n}\n\nfunction isObject (value) {\n  return value && value.constructor === Object && !(value instanceof window.HTMLElement);\n}\n\nfunction isObjectOrArray (value) {\n  return value && (value.constructor === Object || value.constructor === Array) &&\n         !(value instanceof window.HTMLElement);\n}\n","/* global location */\n\n/* Centralized place to reference utilities since utils is exposed to the user. */\nvar debug = require('./debug');\nvar deepAssign = require('deep-assign');\nvar device = require('./device');\nvar objectAssign = require('object-assign');\nvar objectPool = require('./object-pool');\n\nvar warn = debug('utils:warn');\n\nmodule.exports.bind = require('./bind');\nmodule.exports.coordinates = require('./coordinates');\nmodule.exports.debug = debug;\nmodule.exports.device = device;\nmodule.exports.entity = require('./entity');\nmodule.exports.forceCanvasResizeSafariMobile = require('./forceCanvasResizeSafariMobile');\nmodule.exports.isIE11 = require('./is-ie11');\nmodule.exports.material = require('./material');\nmodule.exports.objectPool = objectPool;\nmodule.exports.split = require('./split').split;\nmodule.exports.styleParser = require('./styleParser');\nmodule.exports.trackedControls = require('./tracked-controls');\n\nmodule.exports.checkHeadsetConnected = function () {\n  warn('`utils.checkHeadsetConnected` has moved to `utils.device.checkHeadsetConnected`');\n  return device.checkHeadsetConnected(arguments);\n};\nmodule.exports.isGearVR = module.exports.device.isGearVR = function () {\n  warn('`utils.isGearVR` has been deprecated, use `utils.device.isMobileVR`');\n};\nmodule.exports.isIOS = function () {\n  warn('`utils.isIOS` has moved to `utils.device.isIOS`');\n  return device.isIOS(arguments);\n};\nmodule.exports.isOculusGo = module.exports.device.isOculusGo = function () {\n  warn('`utils.isOculusGo` has been deprecated, use `utils.device.isMobileVR`');\n};\nmodule.exports.isMobile = function () {\n  warn('`utils.isMobile has moved to `utils.device.isMobile`');\n  return device.isMobile(arguments);\n};\n\n/**\n * Returns throttle function that gets called at most once every interval.\n *\n * @param {function} functionToThrottle\n * @param {number} minimumInterval - Minimal interval between calls (milliseconds).\n * @param {object} optionalContext - If given, bind function to throttle to this context.\n * @returns {function} Throttled function.\n */\nmodule.exports.throttle = function (functionToThrottle, minimumInterval, optionalContext) {\n  var lastTime;\n  if (optionalContext) {\n    functionToThrottle = module.exports.bind(functionToThrottle, optionalContext);\n  }\n  return function () {\n    var time = Date.now();\n    var sinceLastTime = typeof lastTime === 'undefined' ? minimumInterval : time - lastTime;\n    if (typeof lastTime === 'undefined' || (sinceLastTime >= minimumInterval)) {\n      lastTime = time;\n      functionToThrottle.apply(null, arguments);\n    }\n  };\n};\n\n/**\n * Returns throttle function that gets called at most once every interval.\n * Uses the time/timeDelta timestamps provided by the global render loop for better perf.\n *\n * @param {function} functionToThrottle\n * @param {number} minimumInterval - Minimal interval between calls (milliseconds).\n * @param {object} optionalContext - If given, bind function to throttle to this context.\n * @returns {function} Throttled function.\n */\nmodule.exports.throttleTick = function (functionToThrottle, minimumInterval, optionalContext) {\n  var lastTime;\n  if (optionalContext) {\n    functionToThrottle = module.exports.bind(functionToThrottle, optionalContext);\n  }\n  return function (time, delta) {\n    var sinceLastTime = typeof lastTime === 'undefined' ? delta : time - lastTime;\n    if (typeof lastTime === 'undefined' || (sinceLastTime >= minimumInterval)) {\n      lastTime = time;\n      functionToThrottle(time, sinceLastTime);\n    }\n  };\n};\n\n/**\n * Returns debounce function that gets called only once after a set of repeated calls.\n *\n * @param {function} functionToDebounce\n * @param {number} wait - Time to wait for repeated function calls (milliseconds).\n * @param {boolean} immediate - Calls the function immediately regardless of if it should be waiting.\n * @returns {function} Debounced function.\n */\nmodule.exports.debounce = function (func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\n/**\n * Mix the properties of source object(s) into a destination object.\n *\n * @param  {object} dest - The object to which properties will be copied.\n * @param  {...object} source - The object(s) from which properties will be copied.\n */\nmodule.exports.extend = objectAssign;\nmodule.exports.extendDeep = deepAssign;\n\nmodule.exports.clone = function (obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\n/**\n * Checks if two values are equal.\n * Includes objects and arrays and nested objects and arrays.\n * Try to keep this function performant as it will be called often to see if a component\n * should be updated.\n *\n * @param {object} a - First object.\n * @param {object} b - Second object.\n * @returns {boolean} Whether two objects are deeply equal.\n */\nvar deepEqual = (function () {\n  var arrayPool = objectPool.createPool(function () { return []; });\n\n  return function (a, b) {\n    var key;\n    var keysA;\n    var keysB;\n    var i;\n    var valA;\n    var valB;\n\n    // If not objects or arrays, compare as values.\n    if (a === undefined || b === undefined || a === null || b === null ||\n        !(a && b && (a.constructor === Object && b.constructor === Object) ||\n                    (a.constructor === Array && b.constructor === Array))) {\n      return a === b;\n    }\n\n    // Different number of keys, not equal.\n    keysA = arrayPool.use();\n    keysB = arrayPool.use();\n    keysA.length = 0;\n    keysB.length = 0;\n    for (key in a) { keysA.push(key); }\n    for (key in b) { keysB.push(key); }\n    if (keysA.length !== keysB.length) {\n      arrayPool.recycle(keysA);\n      arrayPool.recycle(keysB);\n      return false;\n    }\n\n    // Return `false` at the first sign of inequality.\n    for (i = 0; i < keysA.length; ++i) {\n      valA = a[keysA[i]];\n      valB = b[keysA[i]];\n      // Check nested array and object.\n      if ((typeof valA === 'object' || typeof valB === 'object') ||\n          (Array.isArray(valA) && Array.isArray(valB))) {\n        if (valA === valB) { continue; }\n        if (!deepEqual(valA, valB)) {\n          arrayPool.recycle(keysA);\n          arrayPool.recycle(keysB);\n          return false;\n        }\n      } else if (valA !== valB) {\n        arrayPool.recycle(keysA);\n        arrayPool.recycle(keysB);\n        return false;\n      }\n    }\n\n    arrayPool.recycle(keysA);\n    arrayPool.recycle(keysB);\n    return true;\n  };\n})();\nmodule.exports.deepEqual = deepEqual;\n\n/**\n * Computes the difference between two objects.\n *\n * @param {object} a - First object to compare (e.g., oldData).\n * @param {object} b - Second object to compare (e.g., newData).\n * @returns {object}\n *   Difference object where set of keys note which values were not equal, and values are\n *   `b`'s values.\n */\nmodule.exports.diff = (function () {\n  var keys = [];\n\n  return function (a, b, targetObject) {\n    var aVal;\n    var bVal;\n    var bKey;\n    var diff;\n    var key;\n    var i;\n    var isComparingObjects;\n\n    diff = targetObject || {};\n\n    // Collect A keys.\n    keys.length = 0;\n    for (key in a) { keys.push(key); }\n\n    if (!b) { return diff; }\n\n    // Collect B keys.\n    for (bKey in b) {\n      if (keys.indexOf(bKey) === -1) {\n        keys.push(bKey);\n      }\n    }\n\n    for (i = 0; i < keys.length; i++) {\n      key = keys[i];\n      aVal = a[key];\n      bVal = b[key];\n      isComparingObjects = aVal && bVal &&\n                          aVal.constructor === Object && bVal.constructor === Object;\n      if ((isComparingObjects && !deepEqual(aVal, bVal)) ||\n          (!isComparingObjects && aVal !== bVal)) {\n        diff[key] = bVal;\n      }\n    }\n    return diff;\n  };\n})();\n\n/**\n * Returns whether we should capture this keyboard event for keyboard shortcuts.\n * @param {Event} event Event object.\n * @returns {Boolean} Whether the key event should be captured.\n */\nmodule.exports.shouldCaptureKeyEvent = function (event) {\n  if (event.metaKey) { return false; }\n  return document.activeElement === document.body;\n};\n\n/**\n * Splits a string into an array based on a delimiter.\n *\n * @param   {string=} [str='']        Source string\n * @param   {string=} [delimiter=' '] Delimiter to use\n * @returns {array}                   Array of delimited strings\n */\nmodule.exports.splitString = function (str, delimiter) {\n  if (typeof delimiter === 'undefined') { delimiter = ' '; }\n  // First collapse the whitespace (or whatever the delimiter is).\n  var regex = new RegExp(delimiter, 'g');\n  str = (str || '').replace(regex, delimiter);\n  // Then split.\n  return str.split(delimiter);\n};\n\n/**\n * Extracts data from the element given an object that contains expected keys.\n *\n * @param {Element} Source element.\n * @param {Object} [defaults={}] Object of default key-value pairs.\n * @returns {Object}\n */\nmodule.exports.getElData = function (el, defaults) {\n  defaults = defaults || {};\n  var data = {};\n  Object.keys(defaults).forEach(copyAttribute);\n  function copyAttribute (key) {\n    if (el.hasAttribute(key)) {\n      data[key] = el.getAttribute(key);\n    }\n  }\n  return data;\n};\n\n/**\n * Retrieves querystring value.\n * @param  {String} name Name of querystring key.\n * @return {String}      Value\n */\nmodule.exports.getUrlParameter = function (name) {\n  // eslint-disable-next-line no-useless-escape\n  name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n  var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n  var results = regex.exec(location.search);\n  return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};\n\n/**\n * Detects whether context is within iframe.\n */\nmodule.exports.isIframed = function () {\n  return window.top !== window.self;\n};\n\n/**\n * Finds all elements under the element that have the isScene\n * property set to true\n */\nmodule.exports.findAllScenes = function (el) {\n  var matchingElements = [];\n  var allElements = el.getElementsByTagName('*');\n  for (var i = 0, n = allElements.length; i < n; i++) {\n    if (allElements[i].isScene) {\n      // Element exists with isScene set.\n      matchingElements.push(allElements[i]);\n    }\n  }\n  return matchingElements;\n};\n\n// Must be at bottom to avoid circular dependency.\nmodule.exports.srcLoader = require('./src-loader');\n","// WebVR polyfill\n// Check before the polyfill runs.\nwindow.hasNativeWebVRImplementation = !!window.navigator.getVRDisplays ||\n                                      !!window.navigator.getVRDevices;\nwindow.hasNativeWebXRImplementation = navigator.xr !== undefined;\n\n// If native WebXR or WebVR are defined WebVRPolyfill does not initialize.\nif (!window.hasNativeWebXRImplementation && !window.hasNativeWebVRImplementation) {\n  var isIOSOlderThan10 = require('./utils/isIOSOlderThan10');\n  // Workaround for iOS Safari canvas sizing issues in stereo (webvr-polyfill/issues/102).\n  // Only for iOS on versions older than 10.\n  var bufferScale = isIOSOlderThan10(window.navigator.userAgent) ? 1 / window.devicePixelRatio : 1;\n  var WebVRPolyfill = require('webvr-polyfill');\n  var polyfillConfig = {\n    BUFFER_SCALE: bufferScale,\n    CARDBOARD_UI_DISABLED: true,\n    ROTATE_INSTRUCTIONS_DISABLED: true\n  };\n  window.webvrpolyfill = new WebVRPolyfill(polyfillConfig);\n}\n\nvar utils = require('./utils/');\nvar debug = utils.debug;\n\nvar error = debug('A-Frame:error');\nvar warn = debug('A-Frame:warn');\n\nif (window.document.currentScript && window.document.currentScript.parentNode !==\n    window.document.head && !window.debug) {\n  warn('Put the A-Frame <script> tag in the <head> of the HTML *before* the scene to ' +\n       'ensure everything for A-Frame is properly registered before they are used from ' +\n       'HTML.');\n}\n\n// Error if not using a server.\nif (window.location.protocol === 'file:') {\n  error(\n    'This HTML file is currently being served via the file:// protocol. ' +\n    'Assets, textures, and models WILL NOT WORK due to cross-origin policy! ' +\n    'Please use a local or hosted server: ' +\n    'https://aframe.io/docs/0.5.0/introduction/getting-started.html#using-a-local-server.');\n}\n\nrequire('present'); // Polyfill `performance.now()`.\n\n// CSS.\nif (utils.device.isBrowserEnvironment) {\n  require('./style/aframe.css');\n  require('./style/rStats.css');\n}\n\n// Required before `AEntity` so that all components are registered.\nvar AScene = require('./core/scene/a-scene').AScene;\nvar components = require('./core/component').components;\nvar registerComponent = require('./core/component').registerComponent;\nvar registerGeometry = require('./core/geometry').registerGeometry;\nvar registerPrimitive = require('./extras/primitives/primitives').registerPrimitive;\nvar registerShader = require('./core/shader').registerShader;\nvar registerSystem = require('./core/system').registerSystem;\nvar shaders = require('./core/shader').shaders;\nvar systems = require('./core/system').systems;\n// Exports THREE to window so three.js can be used without alteration.\nvar THREE = window.THREE = require('./lib/three');\n\nrequire('./components/index'); // Register standard components.\nrequire('./geometries/index'); // Register standard geometries.\nrequire('./shaders/index'); // Register standard shaders.\nrequire('./systems/index'); // Register standard systems.\nvar ANode = require('./core/a-node');\nvar AEntity = require('./core/a-entity'); // Depends on ANode and core components.\n\nrequire('./core/a-assets');\nrequire('./core/a-cubemap');\nrequire('./core/a-mixin');\n\n// Extras.\nrequire('./extras/components/');\nrequire('./extras/primitives/');\n\nconsole.log('A-Frame Version: https://github.com/MozillaReality/aframe');\nconsole.log('three Version: https://github.com/MozillaReality/three.js');\n\nmodule.exports = window.AFRAME = {\n  AComponent: require('./core/component').Component,\n  AEntity: AEntity,\n  ANode: ANode,\n  ANIME: require('animejs'),\n  AScene: AScene,\n  components: components,\n  geometries: require('./core/geometry').geometries,\n  registerComponent: registerComponent,\n  registerElement: require('./core/a-register-element').registerElement,\n  registerGeometry: registerGeometry,\n  registerPrimitive: registerPrimitive,\n  registerShader: registerShader,\n  registerSystem: registerSystem,\n  primitives: {\n    getMeshMixin: require('./extras/primitives/getMeshMixin'),\n    primitives: require('./extras/primitives/primitives').primitives\n  },\n  scenes: require('./core/scene/scenes'),\n  schema: require('./core/schema'),\n  shaders: shaders,\n  systems: systems,\n  THREE: THREE,\n  utils: utils,\n  version: 'hubs/master'\n};\n","var ANode = require('./a-node');\nvar COMPONENTS = require('./component').components;\nvar registerElement = require('./a-register-element').registerElement;\nvar THREE = require('../lib/three');\nvar utils = require('../utils/');\n\nvar AEntity;\nvar debug = utils.debug('core:a-entity:debug');\nvar warn = utils.debug('core:a-entity:warn');\n\nvar MULTIPLE_COMPONENT_DELIMITER = '__';\nvar OBJECT3D_COMPONENTS = ['position', 'rotation', 'scale', 'visible'];\nvar ONCE = {once: true};\n\n/**\n * Entity is a container object that components are plugged into to comprise everything in\n * the scene. In A-Frame, they inherently have position, rotation, and scale.\n *\n * To be able to take components, the scene element inherits from the entity definition.\n *\n * @member {object} components - entity's currently initialized components.\n * @member {object} object3D - three.js object.\n * @member {array} states\n * @member {boolean} isPlaying - false if dynamic behavior of the entity is paused.\n */\nvar proto = Object.create(ANode.prototype, {\n  createdCallback: {\n    value: function () {\n      this.components = {};\n      // To avoid double initializations and infinite loops.\n      this.initializingComponents = {};\n      this.componentsToUpdate = {};\n      this.isEntity = true;\n      this.isPlaying = false;\n      this.object3D = new THREE.Group();\n      this.object3D.el = this;\n      this.object3DMap = {};\n      this.parentEl = null;\n      this.rotationObj = {};\n      this.states = [];\n    }\n  },\n\n  /**\n   * Handle changes coming from the browser DOM inspector.\n   */\n  attributeChangedCallback: {\n    value: function (attr, oldVal, newVal) {\n      var component = this.components[attr];\n      // If the empty string is passed by the component initialization\n      // logic we ignore the component update.\n      if (component && component.justInitialized && newVal === '') {\n        delete component.justInitialized;\n        return;\n      }\n      // When a component is removed after calling el.removeAttribute('material')\n      if (!component && newVal === null) { return; }\n      this.setEntityAttribute(attr, oldVal, newVal);\n    }\n  },\n\n  /**\n   * Add to parent, load, play.\n   */\n  attachedCallback: {\n    value: function () {\n      var assetsEl;  // Asset management system element.\n      var sceneEl = this.sceneEl;\n      var self = this;  // Component.\n\n      this.addToParent();\n\n      // Don't .load() scene on attachedCallback.\n      if (this.isScene) { return; }\n\n      // Gracefully not error when outside of <a-scene> (e.g., tests).\n      if (!sceneEl) {\n        this.load();\n        return;\n      }\n\n      // Wait for asset management system to finish before loading.\n      assetsEl = sceneEl.querySelector('a-assets');\n      if (assetsEl && !assetsEl.hasLoaded) {\n        assetsEl.addEventListener('loaded', function () { self.load(); });\n        return;\n      }\n      this.load();\n    }\n  },\n\n  /**\n   * Tell parent to remove this element's object3D from its object3D.\n   * Do not call on scene element because that will cause a call to document.body.remove().\n   */\n  detachedCallback: {\n    value: function () {\n      var componentName;\n\n      if (!this.parentEl) { return; }\n\n      // Remove components.\n      for (componentName in this.components) { this.removeComponent(componentName); }\n\n      if (this.isScene) { return; }\n\n      this.removeFromParent();\n      ANode.prototype.detachedCallback.call(this);\n\n      // Remove cyclic reference.\n      this.object3D.el = null;\n    }\n  },\n\n  getObject3D: {\n    value: function (type) {\n      return this.object3DMap[type];\n    }\n  },\n\n  /**\n   * Set a THREE.Object3D into the map.\n   *\n   * @param {string} type - Developer-set name of the type of object, will be unique per type.\n   * @param {object} obj - A THREE.Object3D.\n   */\n  setObject3D: {\n    value: function (type, obj) {\n      var oldObj;\n      var self = this;\n\n      if (!(obj instanceof THREE.Object3D)) {\n        throw new Error(\n          '`Entity.setObject3D` was called with an object that was not an instance of ' +\n          'THREE.Object3D.'\n        );\n      }\n\n      // Remove existing object of the type.\n      oldObj = this.getObject3D(type);\n      if (oldObj) { this.object3D.remove(oldObj); }\n\n      // Set references to A-Frame entity.\n      obj.el = this;\n      if (obj.children.length) {\n        obj.traverse(function bindEl (child) {\n          child.el = self;\n        });\n      }\n\n      // Add.\n      this.object3D.add(obj);\n      this.object3DMap[type] = obj;\n      this.emit('object3dset', {object: obj, type: type});\n    }\n  },\n\n  /**\n   * Remove object from scene and entity object3D map.\n   */\n  removeObject3D: {\n    value: function (type) {\n      var obj = this.getObject3D(type);\n      if (!obj) {\n        warn('Tried to remove `Object3D` of type:', type, 'which was not defined.');\n        return;\n      }\n      this.object3D.remove(obj);\n      delete this.object3DMap[type];\n      this.emit('object3dremove', {type: type});\n    }\n  },\n\n  /**\n   * Gets or creates an object3D of a given type.\n   *\n   * @param {string} type - Type of the object3D.\n   * @param {string} Constructor - Constructor to use to create the object3D if needed.\n   * @returns {object}\n   */\n  getOrCreateObject3D: {\n    value: function (type, Constructor) {\n      var object3D = this.getObject3D(type);\n      if (!object3D && Constructor) {\n        object3D = new Constructor();\n        this.setObject3D(type, object3D);\n      }\n      warn('`getOrCreateObject3D` has been deprecated. Use `setObject3D()` ' +\n           'and `object3dset` event instead.');\n      return object3D;\n    }\n  },\n\n  /**\n   * Add child entity.\n   *\n   * @param {Element} el - Child entity.\n   */\n  add: {\n    value: function (el) {\n      if (!el.object3D) {\n        throw new Error(\"Trying to add an element that doesn't have an `object3D`\");\n      }\n      this.object3D.add(el.object3D);\n      this.emit('child-attached', {el: el});\n    }\n  },\n\n  /**\n   * Tell parentNode to add this entity to itself.\n   */\n  addToParent: {\n    value: function () {\n      var parentNode = this.parentEl = this.parentNode;\n\n      // `!parentNode` check primarily for unit tests.\n      if (!parentNode || !parentNode.add || this.attachedToParent) { return; }\n\n      parentNode.add(this);\n      this.attachedToParent = true;  // To prevent multiple attachments to same parent.\n    }\n  },\n\n  /**\n   * Tell parentNode to remove this entity from itself.\n   */\n  removeFromParent: {\n    value: function () {\n      var parentEl = this.parentEl;\n      this.parentEl.remove(this);\n      this.attachedToParent = false;\n      this.parentEl = null;\n      parentEl.emit('child-detached', {el: this});\n    }\n  },\n\n  load: {\n    value: function () {\n      var self = this;\n\n      if (this.hasLoaded || !this.parentEl) { return; }\n\n      ANode.prototype.load.call(this, function entityLoadCallback () {\n        // Check if entity was detached while it was waiting to load.\n        if (!self.parentEl) { return; }\n\n        self.updateComponents();\n        if (self.isScene || self.parentEl.isPlaying) { self.play(); }\n      });\n    },\n    writable: window.debug\n  },\n\n  /**\n   * Remove child entity.\n   *\n   * @param {Element} el - Child entity.\n   */\n  remove: {\n    value: function (el) {\n      this.object3D.remove(el.object3D);\n    }\n  },\n\n  /**\n   * @returns {array} Direct children that are entities.\n   */\n  getChildEntities: {\n    value: function () {\n      var children = this.children;\n      var childEntities = [];\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        if (child instanceof AEntity) {\n          childEntities.push(child);\n        }\n      }\n\n      return childEntities;\n    }\n  },\n\n  /**\n   * Initialize component.\n   *\n   * @param {string} attrName - Attribute name asociated to the component.\n   * @param {object} data - Component data\n   * @param {boolean} isDependency - True if the component is a dependency.\n   */\n  initComponent: {\n    value: function (attrName, data, isDependency) {\n      var component;\n      var componentId;\n      var componentInfo;\n      var componentName;\n      var isComponentDefined;\n\n      componentInfo = utils.split(attrName, MULTIPLE_COMPONENT_DELIMITER);\n      componentName = componentInfo[0];\n      componentId = componentInfo.length > 2\n        ? componentInfo.slice(1).join('__')\n        : componentInfo[1];\n\n      // Not a registered component.\n      if (!COMPONENTS[componentName]) { return; }\n\n      // Component is not a dependency and is undefined.\n      // If a component is a dependency, then it is okay to have no data.\n      isComponentDefined = checkComponentDefined(this, attrName) ||\n                           data !== undefined;\n      if (!isComponentDefined && !isDependency) { return; }\n\n      // Component already initialized.\n      if (attrName in this.components) { return; }\n\n      // Initialize dependencies first\n      this.initComponentDependencies(componentName);\n\n      // If component name has an id we check component type multiplic\n      if (componentId && !COMPONENTS[componentName].multiple) {\n        throw new Error('Trying to initialize multiple ' +\n                        'components of type `' + componentName +\n                        '`. There can only be one component of this type per entity.');\n      }\n      component = new COMPONENTS[componentName].Component(this, data, componentId);\n      if (this.isPlaying) { component.play(); }\n\n      // Components are reflected in the DOM as attributes but the state is not shown\n      // hence we set the attribute to empty string.\n      // The flag justInitialized is for attributeChangedCallback to not overwrite\n      // the component with the empty string.\n      if (!this.hasAttribute(attrName)) {\n        component.justInitialized = true;\n        window.HTMLElement.prototype.setAttribute.call(this, attrName, '');\n      }\n\n      debug('Component initialized: %s', attrName);\n    },\n    writable: window.debug\n  },\n\n  /**\n   * Initialize dependencies of a component.\n   *\n   * @param {string} name - Root component name.\n   */\n  initComponentDependencies: {\n    value: function (name) {\n      var self = this;\n      var component = COMPONENTS[name];\n      var dependencies;\n      var i;\n\n      // Not a component.\n      if (!component) { return; }\n\n      // No dependencies.\n      dependencies = COMPONENTS[name].dependencies;\n\n      if (!dependencies) { return; }\n\n      // Initialize dependencies.\n      for (i = 0; i < dependencies.length; i++) {\n        // Call getAttribute to initialize the data from the DOM.\n        self.initComponent(\n          dependencies[i],\n          window.HTMLElement.prototype.getAttribute.call(self, dependencies[i]) || undefined,\n          true\n        );\n      }\n    }\n  },\n\n  removeComponent: {\n    value: function (name) {\n      var component;\n\n      component = this.components[name];\n      if (!component) { return; }\n\n      // Wait for component to initialize.\n      if (!component.initialized) {\n        this.addEventListener('componentinitialized', function tryRemoveLater (evt) {\n          if (evt.detail.name !== name) { return; }\n          this.removeComponent(name);\n          this.removeEventListener('componentinitialized', tryRemoveLater);\n        });\n        return;\n      }\n\n      component.pause();\n      component.remove();\n      delete this.components[name];\n      this.emit('componentremoved', component.evtDetail);\n    },\n    writable: window.debug\n  },\n\n  /**\n   * Initialize or update all components.\n   * Build data using initial components, defined attributes, mixins, and defaults.\n   * Update default components before the rest.\n   *\n   * @member {function} getExtraComponents - Can be implemented to include component data\n   *   from other sources (e.g., implemented by primitives).\n   */\n  updateComponents: {\n    value: function () {\n      var data;\n      var extraComponents;\n      var i;\n      var name;\n      var componentsToUpdate = this.componentsToUpdate;\n\n      if (!this.hasLoaded) { return; }\n\n      // Gather mixin-defined components.\n      for (i = 0; i < this.mixinEls.length; i++) {\n        for (name in this.mixinEls[i].componentCache) {\n          if (isComponent(name)) { componentsToUpdate[name] = true; }\n        }\n      }\n\n      // Gather from extra initial component data if defined (e.g., primitives).\n      if (this.getExtraComponents) {\n        extraComponents = this.getExtraComponents();\n        for (name in extraComponents) {\n          if (isComponent(name)) { componentsToUpdate[name] = true; }\n        }\n      }\n\n      // Gather entity-defined components.\n      for (i = 0; i < this.attributes.length; ++i) {\n        name = this.attributes[i].name;\n        if (OBJECT3D_COMPONENTS.indexOf(name) !== -1) { continue; }\n        if (isComponent(name)) { componentsToUpdate[name] = true; }\n      }\n\n      // object3D components first (position, rotation, scale, visible).\n      for (i = 0; i < OBJECT3D_COMPONENTS.length; i++) {\n        name = OBJECT3D_COMPONENTS[i];\n        if (!this.hasAttribute(name)) { continue; }\n        this.updateComponent(name, this.getDOMAttribute(name));\n      }\n\n      // Initialize or update rest of components.\n      for (name in componentsToUpdate) {\n        data = mergeComponentData(this.getDOMAttribute(name),\n                                  extraComponents && extraComponents[name]);\n        this.updateComponent(name, data);\n        delete componentsToUpdate[name];\n      }\n    },\n    writable: window.debug\n  },\n\n  /**\n   * Initialize, update, or remove a single component.\n   *\n   * When initializing, we set the component on `this.components`.\n   *\n   * @param {string} attr - Component name.\n   * @param {object} attrValue - Value of the DOM attribute.\n   * @param {boolean} clobber - If new attrValue completely replaces previous properties.\n   */\n  updateComponent: {\n    value: function (attr, attrValue, clobber) {\n      var component = this.components[attr];\n\n      if (component) {\n        // Remove component.\n        if (attrValue === null && !checkComponentDefined(this, attr)) {\n          this.removeComponent(attr);\n          return;\n        }\n        // Component already initialized. Update component.\n        component.updateProperties(attrValue, clobber);\n        return;\n      }\n\n      // Component not yet initialized. Initialize component.\n      this.initComponent(attr, attrValue, false);\n    }\n  },\n\n  /**\n   * If `attr` is a component name, detach the component from the entity.\n   *\n   * If `propertyName` is given, reset the component property value to its default.\n   *\n   * @param {string} attr - Attribute name, which could also be a component name.\n   * @param {string} propertyName - Component prop name, if resetting an individual prop.\n   */\n  removeAttribute: {\n    value: function (attr, propertyName) {\n      var component = this.components[attr];\n\n      // Remove component.\n      if (component && propertyName === undefined) {\n        this.removeComponent(attr);\n      }\n\n      // Reset component property value.\n      if (component && propertyName !== undefined) {\n        component.resetProperty(propertyName);\n        return;\n      }\n\n      // Remove mixins.\n      if (attr === 'mixin') {\n        this.mixinUpdate('');\n      }\n\n      window.HTMLElement.prototype.removeAttribute.call(this, attr);\n    }\n  },\n\n  /**\n   * Start dynamic behavior associated with entity such as dynamic components and animations.\n   * Tell all children entities to also play.\n   */\n  play: {\n    value: function () {\n      var entities;\n      var i;\n      var key;\n\n      // Already playing.\n      if (this.isPlaying || !this.hasLoaded) { return; }\n      this.isPlaying = true;\n\n      // Wake up all components.\n      for (key in this.components) { this.components[key].play(); }\n\n      // Tell all child entities to play.\n      entities = this.getChildEntities();\n      for (i = 0; i < entities.length; i++) { entities[i].play(); }\n\n      this.emit('play');\n    },\n    writable: true\n  },\n\n  /**\n   * Pause dynamic behavior associated with entity such as dynamic components and animations.\n   * Tell all children entities to also pause.\n   */\n  pause: {\n    value: function () {\n      var entities;\n      var i;\n      var key;\n\n      if (!this.isPlaying) { return; }\n      this.isPlaying = false;\n\n      // Sleep all components.\n      for (key in this.components) { this.components[key].pause(); }\n\n      // Tell all child entities to pause.\n      entities = this.getChildEntities();\n      for (i = 0; i < entities.length; i++) { entities[i].pause(); }\n\n      this.emit('pause');\n    },\n    writable: true\n  },\n\n  /**\n   * Deals with updates on entity-specific attributes (i.e., components and mixins).\n   *\n   * @param {string} attr\n   * @param {string} oldVal\n   * @param {string|object} newVal\n   */\n  setEntityAttribute: {\n    value: function (attr, oldVal, newVal) {\n      if (COMPONENTS[attr] || this.components[attr]) {\n        this.updateComponent(attr, newVal);\n        return;\n      }\n      if (attr === 'mixin') {\n        // Ignore if `<a-node>` code is just updating computed mixin in the DOM.\n        if (newVal === this.computedMixinStr) { return; }\n        this.mixinUpdate(newVal, oldVal);\n      }\n    }\n  },\n\n  /**\n   * When mixins updated, trigger init or optimized-update of relevant components.\n   */\n  mixinUpdate: {\n    value: (function () {\n      var componentsUpdated = [];\n\n      return function (newMixins, oldMixins) {\n        var component;\n        var mixinEl;\n        var mixinIds;\n        var i;\n        var self = this;\n\n        if (!this.hasLoaded) {\n          this.addEventListener('loaded', function () {\n            self.mixinUpdate(newMixins, oldMixins);\n          }, ONCE);\n          return;\n        }\n\n        oldMixins = oldMixins || this.getAttribute('mixin');\n        mixinIds = this.updateMixins(newMixins, oldMixins);\n\n        // Loop over current mixins.\n        componentsUpdated.length = 0;\n        for (i = 0; i < this.mixinEls.length; i++) {\n          for (component in this.mixinEls[i].componentCache) {\n            if (componentsUpdated.indexOf(component) === -1) {\n              if (this.components[component]) {\n                // Update. Just rebuild data.\n                this.components[component].handleMixinUpdate();\n              } else {\n                // Init. buildData will gather mixin values.\n                this.initComponent(component, null);\n              }\n              componentsUpdated.push(component);\n            }\n          }\n        }\n\n        // Loop over old mixins to call for data rebuild.\n        for (i = 0; i < mixinIds.oldMixinIds.length; i++) {\n          mixinEl = document.getElementById(mixinIds.oldMixinIds[i]);\n          if (!mixinEl) { continue; }\n          for (component in mixinEl.componentCache) {\n            if (componentsUpdated.indexOf(component) === -1) {\n              if (this.components[component]) {\n                if (this.getDOMAttribute(component)) {\n                  // Update component if explicitly defined.\n                  this.components[component].handleMixinUpdate();\n                } else {\n                  // Remove component if not explicitly defined.\n                  this.removeComponent(component);\n                }\n              }\n            }\n          }\n        }\n      };\n    })()\n  },\n\n  /**\n   * setAttribute can:\n   *\n   * 1. Set a single property of a multi-property component.\n   * 2. Set multiple properties of a multi-property component.\n   * 3. Replace properties of a multi-property component.\n   * 4. Set a value for a single-property component, mixin, or normal HTML attribute.\n   *\n   * @param {string} attrName - Component or attribute name.\n   * @param {*} arg1 - Can be a value, property name, CSS-style property string, or\n   *   object of properties.\n   * @param {*|bool} arg2 - If arg1 is a property name, this should be a value. Otherwise,\n   *   it is a boolean indicating whether to clobber previous values (defaults to false).\n   */\n  setAttribute: {\n    value: (function () {\n      var singlePropUpdate = {};\n\n      return function (attrName, arg1, arg2) {\n        var newAttrValue;\n        var clobber;\n        var componentName;\n        var delimiterIndex;\n        var isDebugMode;\n        var key;\n\n        delimiterIndex = attrName.indexOf(MULTIPLE_COMPONENT_DELIMITER);\n        componentName = delimiterIndex > 0 ? attrName.substring(0, delimiterIndex) : attrName;\n\n        // Not a component. Normal set attribute.\n        if (!COMPONENTS[componentName]) {\n          if (attrName === 'mixin') { this.mixinUpdate(arg1); }\n          ANode.prototype.setAttribute.call(this, attrName, arg1);\n          return;\n        }\n\n        // Initialize component first if not yet initialized.\n        if (!this.components[attrName] && this.hasAttribute(attrName)) {\n          this.updateComponent(\n            attrName,\n            window.HTMLElement.prototype.getAttribute.call(this, attrName));\n        }\n\n        // Determine new attributes from the arguments\n        if (typeof arg2 !== 'undefined' &&\n            typeof arg1 === 'string' &&\n            arg1.length > 0 &&\n            typeof utils.styleParser.parse(arg1) === 'string') {\n          // Update a single property of a multi-property component\n          for (key in singlePropUpdate) { delete singlePropUpdate[key]; }\n          newAttrValue = singlePropUpdate;\n          newAttrValue[arg1] = arg2;\n          clobber = false;\n        } else {\n          // Update with a value, object, or CSS-style property string, with the possiblity\n          // of clobbering previous values.\n          newAttrValue = arg1;\n          clobber = (arg2 === true);\n        }\n\n        // Update component\n        this.updateComponent(attrName, newAttrValue, clobber);\n\n        // In debug mode, write component data up to the DOM.\n        isDebugMode = this.sceneEl && this.sceneEl.getAttribute('debug');\n        if (isDebugMode) { this.components[attrName].flushToDOM(); }\n      };\n    })(),\n    writable: window.debug\n  },\n\n  /**\n   * Reflect component data in the DOM (as seen from the browser DOM Inspector).\n   *\n   * @param {bool} recursive - Also flushToDOM on the children.\n   **/\n  flushToDOM: {\n    value: function (recursive) {\n      var components = this.components;\n      var child;\n      var children = this.children;\n      var i;\n      var key;\n\n      // Flush entity's components to DOM.\n      for (key in components) {\n        components[key].flushToDOM();\n      }\n\n      // Recurse.\n      if (!recursive) { return; }\n      for (i = 0; i < children.length; ++i) {\n        child = children[i];\n        if (!child.flushToDOM) { continue; }\n        child.flushToDOM(recursive);\n      }\n    }\n  },\n\n  /**\n   * If `attr` is a component, returns ALL component data including applied mixins and\n   * defaults.\n   *\n   * If `attr` is not a component, fall back to HTML getAttribute.\n   *\n   * @param {string} attr\n   * @returns {object|string} Object if component, else string.\n   */\n  getAttribute: {\n    value: function (attr) {\n      // If component, return component data.\n      var component;\n      if (attr === 'position') { return this.object3D.position; }\n      if (attr === 'rotation') { return getRotation(this); }\n      if (attr === 'scale') { return this.object3D.scale; }\n      if (attr === 'visible') { return this.object3D.visible; }\n      component = this.components[attr];\n      if (component) { return component.data; }\n      return window.HTMLElement.prototype.getAttribute.call(this, attr);\n    },\n    writable: window.debug\n  },\n\n  /**\n   * If `attr` is a component, returns JUST the component data defined on the entity.\n   * Like a partial version of `getComputedAttribute` as returned component data\n   * does not include applied mixins or defaults.\n   *\n   * If `attr` is not a component, fall back to HTML getAttribute.\n   *\n   * @param {string} attr\n   * @returns {object|string} Object if component, else string.\n   */\n  getDOMAttribute: {\n    value: function (attr) {\n      // If cached value exists, return partial component data.\n      var component = this.components[attr];\n      if (component) { return component.attrValue; }\n      return window.HTMLElement.prototype.getAttribute.call(this, attr);\n    },\n    writable: window.debug\n  },\n\n  addState: {\n    value: function (state) {\n      if (this.is(state)) { return; }\n      this.states.push(state);\n      this.emit('stateadded', state);\n    }\n  },\n\n  removeState: {\n    value: function (state) {\n      var stateIndex = this.states.indexOf(state);\n      if (stateIndex === -1) { return; }\n      this.states.splice(stateIndex, 1);\n      this.emit('stateremoved', state);\n    }\n  },\n\n  /**\n   * Checks if the element is in a given state. e.g. el.is('alive');\n   * @type {string} state - Name of the state we want to check\n   */\n  is: {\n    value: function (state) {\n      return this.states.indexOf(state) !== -1;\n    }\n  },\n\n  /**\n   * Open Inspector to this entity.\n   */\n  inspect: {\n    value: function () {\n      this.sceneEl.components.inspector.openInspector(this);\n    }\n  }\n});\n\n/**\n * Check if a component is *defined* for an entity, including defaults and mixins.\n * Does not check whether the component has been *initialized* for an entity.\n *\n * @param {string} el - Entity.\n * @param {string} name - Component name.\n * @returns {boolean}\n */\nfunction checkComponentDefined (el, name) {\n  // Check if element contains the component.\n  if (el.components[name] && el.components[name].attrValue) { return true; }\n\n  return isComponentMixedIn(name, el.mixinEls);\n}\n\n/**\n * Check if any mixins contains a component.\n *\n * @param {string} name - Component name.\n * @param {array} mixinEls - Array of <a-mixin>s.\n */\nfunction isComponentMixedIn (name, mixinEls) {\n  var i;\n  var inMixin = false;\n  for (i = 0; i < mixinEls.length; ++i) {\n    inMixin = mixinEls[i].hasAttribute(name);\n    if (inMixin) { break; }\n  }\n  return inMixin;\n}\n\n/**\n * Given entity defined value, merge in extra data if necessary.\n * Handle both single and multi-property components.\n *\n * @param {string} attrValue - Entity data.\n * @param extraData - Entity data from another source to merge in.\n */\nfunction mergeComponentData (attrValue, extraData) {\n  // Extra data not defined, just return attrValue.\n  if (!extraData) { return attrValue; }\n\n  // Merge multi-property data.\n  if (extraData.constructor === Object) {\n    return utils.extend(extraData, utils.styleParser.parse(attrValue || {}));\n  }\n\n  // Return data, precendence to the defined value.\n  return attrValue || extraData;\n}\n\nfunction isComponent (componentName) {\n  if (componentName.indexOf(MULTIPLE_COMPONENT_DELIMITER) !== -1) {\n    componentName = utils.split(componentName, MULTIPLE_COMPONENT_DELIMITER)[0];\n  }\n  if (!COMPONENTS[componentName]) { return false; }\n  return true;\n}\n\nfunction getRotation (entityEl) {\n  var radToDeg = THREE.Math.radToDeg;\n  var rotation = entityEl.object3D.rotation;\n  var rotationObj = entityEl.rotationObj;\n  rotationObj.x = radToDeg(rotation.x);\n  rotationObj.y = radToDeg(rotation.y);\n  rotationObj.z = radToDeg(rotation.z);\n  return rotationObj;\n}\n\nAEntity = registerElement('a-entity', {prototype: proto});\nmodule.exports = AEntity;\n","// Ported from Stefan Gustavson's java implementation\n// http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf\n// Read Stefan's excellent paper for details on how this code works.\n//\n// Sean McCullough banksean@gmail.com\n//\n// Added 4D noise\n// Joshua Koo zz85nus@gmail.com\n\n/**\n * You can pass in a random number generator object if you like.\n * It is assumed to have a random() method.\n */\nvar SimplexNoise = function ( r ) {\n\n\tif ( r == undefined ) r = Math;\n\tthis.grad3 = [[ 1, 1, 0 ], [ - 1, 1, 0 ], [ 1, - 1, 0 ], [ - 1, - 1, 0 ],\n\t\t[ 1, 0, 1 ], [ - 1, 0, 1 ], [ 1, 0, - 1 ], [ - 1, 0, - 1 ],\n\t\t[ 0, 1, 1 ], [ 0, - 1, 1 ], [ 0, 1, - 1 ], [ 0, - 1, - 1 ]];\n\n\tthis.grad4 = [[ 0, 1, 1, 1 ], [ 0, 1, 1, - 1 ], [ 0, 1, - 1, 1 ], [ 0, 1, - 1, - 1 ],\n\t     [ 0, - 1, 1, 1 ], [ 0, - 1, 1, - 1 ], [ 0, - 1, - 1, 1 ], [ 0, - 1, - 1, - 1 ],\n\t     [ 1, 0, 1, 1 ], [ 1, 0, 1, - 1 ], [ 1, 0, - 1, 1 ], [ 1, 0, - 1, - 1 ],\n\t     [ - 1, 0, 1, 1 ], [ - 1, 0, 1, - 1 ], [ - 1, 0, - 1, 1 ], [ - 1, 0, - 1, - 1 ],\n\t     [ 1, 1, 0, 1 ], [ 1, 1, 0, - 1 ], [ 1, - 1, 0, 1 ], [ 1, - 1, 0, - 1 ],\n\t     [ - 1, 1, 0, 1 ], [ - 1, 1, 0, - 1 ], [ - 1, - 1, 0, 1 ], [ - 1, - 1, 0, - 1 ],\n\t     [ 1, 1, 1, 0 ], [ 1, 1, - 1, 0 ], [ 1, - 1, 1, 0 ], [ 1, - 1, - 1, 0 ],\n\t     [ - 1, 1, 1, 0 ], [ - 1, 1, - 1, 0 ], [ - 1, - 1, 1, 0 ], [ - 1, - 1, - 1, 0 ]];\n\n\tthis.p = [];\n\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\tthis.p[ i ] = Math.floor( r.random() * 256 );\n\n\t}\n\t// To remove the need for index wrapping, double the permutation table length\n\tthis.perm = [];\n\tfor ( var i = 0; i < 512; i ++ ) {\n\n\t\tthis.perm[ i ] = this.p[ i & 255 ];\n\n\t}\n\n\t// A lookup table to traverse the simplex around a given point in 4D.\n\t// Details can be found where this table is used, in the 4D noise method.\n\tthis.simplex = [\n\t\t[ 0, 1, 2, 3 ], [ 0, 1, 3, 2 ], [ 0, 0, 0, 0 ], [ 0, 2, 3, 1 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 1, 2, 3, 0 ],\n\t\t[ 0, 2, 1, 3 ], [ 0, 0, 0, 0 ], [ 0, 3, 1, 2 ], [ 0, 3, 2, 1 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 1, 3, 2, 0 ],\n\t\t[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],\n\t\t[ 1, 2, 0, 3 ], [ 0, 0, 0, 0 ], [ 1, 3, 0, 2 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 2, 3, 0, 1 ], [ 2, 3, 1, 0 ],\n\t\t[ 1, 0, 2, 3 ], [ 1, 0, 3, 2 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 2, 0, 3, 1 ], [ 0, 0, 0, 0 ], [ 2, 1, 3, 0 ],\n\t\t[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],\n\t\t[ 2, 0, 1, 3 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 3, 0, 1, 2 ], [ 3, 0, 2, 1 ], [ 0, 0, 0, 0 ], [ 3, 1, 2, 0 ],\n\t\t[ 2, 1, 0, 3 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 3, 1, 0, 2 ], [ 0, 0, 0, 0 ], [ 3, 2, 0, 1 ], [ 3, 2, 1, 0 ]];\n\n};\n\nSimplexNoise.prototype.dot = function ( g, x, y ) {\n\n\treturn g[ 0 ] * x + g[ 1 ] * y;\n\n};\n\nSimplexNoise.prototype.dot3 = function ( g, x, y, z ) {\n\n\treturn g[ 0 ] * x + g[ 1 ] * y + g[ 2 ] * z;\n\n};\n\nSimplexNoise.prototype.dot4 = function ( g, x, y, z, w ) {\n\n\treturn g[ 0 ] * x + g[ 1 ] * y + g[ 2 ] * z + g[ 3 ] * w;\n\n};\n\nSimplexNoise.prototype.noise = function ( xin, yin ) {\n\n\tvar n0, n1, n2; // Noise contributions from the three corners\n\t// Skew the input space to determine which simplex cell we're in\n\tvar F2 = 0.5 * ( Math.sqrt( 3.0 ) - 1.0 );\n\tvar s = ( xin + yin ) * F2; // Hairy factor for 2D\n\tvar i = Math.floor( xin + s );\n\tvar j = Math.floor( yin + s );\n\tvar G2 = ( 3.0 - Math.sqrt( 3.0 ) ) / 6.0;\n\tvar t = ( i + j ) * G2;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y) space\n\tvar Y0 = j - t;\n\tvar x0 = xin - X0; // The x,y distances from the cell origin\n\tvar y0 = yin - Y0;\n\t// For the 2D case, the simplex shape is an equilateral triangle.\n\t// Determine which simplex we are in.\n\tvar i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\tif ( x0 > y0 ) {\n\n\t\ti1 = 1; j1 = 0;\n\n\t\t// lower triangle, XY order: (0,0)->(1,0)->(1,1)\n\n\t}\telse {\n\n\t\ti1 = 0; j1 = 1;\n\n\t} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n\t// c = (3-sqrt(3))/6\n\tvar x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\tvar y1 = y0 - j1 + G2;\n\tvar x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n\tvar y2 = y0 - 1.0 + 2.0 * G2;\n\t// Work out the hashed gradient indices of the three simplex corners\n\tvar ii = i & 255;\n\tvar jj = j & 255;\n\tvar gi0 = this.perm[ ii + this.perm[ jj ] ] % 12;\n\tvar gi1 = this.perm[ ii + i1 + this.perm[ jj + j1 ] ] % 12;\n\tvar gi2 = this.perm[ ii + 1 + this.perm[ jj + 1 ] ] % 12;\n\t// Calculate the contribution from the three corners\n\tvar t0 = 0.5 - x0 * x0 - y0 * y0;\n\tif ( t0 < 0 ) n0 = 0.0;\n\telse {\n\n\t\tt0 *= t0;\n\t\tn0 = t0 * t0 * this.dot( this.grad3[ gi0 ], x0, y0 ); // (x,y) of grad3 used for 2D gradient\n\n\t}\n\tvar t1 = 0.5 - x1 * x1 - y1 * y1;\n\tif ( t1 < 0 ) n1 = 0.0;\n\telse {\n\n\t\tt1 *= t1;\n\t\tn1 = t1 * t1 * this.dot( this.grad3[ gi1 ], x1, y1 );\n\n\t}\n\tvar t2 = 0.5 - x2 * x2 - y2 * y2;\n\tif ( t2 < 0 ) n2 = 0.0;\n\telse {\n\n\t\tt2 *= t2;\n\t\tn2 = t2 * t2 * this.dot( this.grad3[ gi2 ], x2, y2 );\n\n\t}\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to return values in the interval [-1,1].\n\treturn 70.0 * ( n0 + n1 + n2 );\n\n};\n\n// 3D simplex noise\nSimplexNoise.prototype.noise3d = function ( xin, yin, zin ) {\n\n\tvar n0, n1, n2, n3; // Noise contributions from the four corners\n\t// Skew the input space to determine which simplex cell we're in\n\tvar F3 = 1.0 / 3.0;\n\tvar s = ( xin + yin + zin ) * F3; // Very nice and simple skew factor for 3D\n\tvar i = Math.floor( xin + s );\n\tvar j = Math.floor( yin + s );\n\tvar k = Math.floor( zin + s );\n\tvar G3 = 1.0 / 6.0; // Very nice and simple unskew factor, too\n\tvar t = ( i + j + k ) * G3;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n\tvar Y0 = j - t;\n\tvar Z0 = k - t;\n\tvar x0 = xin - X0; // The x,y,z distances from the cell origin\n\tvar y0 = yin - Y0;\n\tvar z0 = zin - Z0;\n\t// For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n\t// Determine which simplex we are in.\n\tvar i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n\tvar i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n\tif ( x0 >= y0 ) {\n\n\t\tif ( y0 >= z0 ) {\n\n\t\t\ti1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 1; k2 = 0;\n\n\t\t\t// X Y Z order\n\n\t\t} else if ( x0 >= z0 ) {\n\n\t\t\ti1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 0; k2 = 1;\n\n\t\t\t// X Z Y order\n\n\t\t} else {\n\n\t\t\ti1 = 0; j1 = 0; k1 = 1; i2 = 1; j2 = 0; k2 = 1;\n\n\t\t} // Z X Y order\n\n\t} else { // x0<y0\n\n\t\tif ( y0 < z0 ) {\n\n\t\t\ti1 = 0; j1 = 0; k1 = 1; i2 = 0; j2 = 1; k2 = 1;\n\n\t\t\t// Z Y X order\n\n\t\t} else if ( x0 < z0 ) {\n\n\t\t\ti1 = 0; j1 = 1; k1 = 0; i2 = 0; j2 = 1; k2 = 1;\n\n\t\t\t// Y Z X order\n\n\t\t} else {\n\n\t\t\ti1 = 0; j1 = 1; k1 = 0; i2 = 1; j2 = 1; k2 = 0;\n\n\t\t} // Y X Z order\n\n\t}\n\t// A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n\t// a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n\t// a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n\t// c = 1/6.\n\tvar x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n\tvar y1 = y0 - j1 + G3;\n\tvar z1 = z0 - k1 + G3;\n\tvar x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n\tvar y2 = y0 - j2 + 2.0 * G3;\n\tvar z2 = z0 - k2 + 2.0 * G3;\n\tvar x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n\tvar y3 = y0 - 1.0 + 3.0 * G3;\n\tvar z3 = z0 - 1.0 + 3.0 * G3;\n\t// Work out the hashed gradient indices of the four simplex corners\n\tvar ii = i & 255;\n\tvar jj = j & 255;\n\tvar kk = k & 255;\n\tvar gi0 = this.perm[ ii + this.perm[ jj + this.perm[ kk ] ] ] % 12;\n\tvar gi1 = this.perm[ ii + i1 + this.perm[ jj + j1 + this.perm[ kk + k1 ] ] ] % 12;\n\tvar gi2 = this.perm[ ii + i2 + this.perm[ jj + j2 + this.perm[ kk + k2 ] ] ] % 12;\n\tvar gi3 = this.perm[ ii + 1 + this.perm[ jj + 1 + this.perm[ kk + 1 ] ] ] % 12;\n\t// Calculate the contribution from the four corners\n\tvar t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n\tif ( t0 < 0 ) n0 = 0.0;\n\telse {\n\n\t\tt0 *= t0;\n\t\tn0 = t0 * t0 * this.dot3( this.grad3[ gi0 ], x0, y0, z0 );\n\n\t}\n\tvar t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n\tif ( t1 < 0 ) n1 = 0.0;\n\telse {\n\n\t\tt1 *= t1;\n\t\tn1 = t1 * t1 * this.dot3( this.grad3[ gi1 ], x1, y1, z1 );\n\n\t}\n\tvar t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n\tif ( t2 < 0 ) n2 = 0.0;\n\telse {\n\n\t\tt2 *= t2;\n\t\tn2 = t2 * t2 * this.dot3( this.grad3[ gi2 ], x2, y2, z2 );\n\n\t}\n\tvar t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n\tif ( t3 < 0 ) n3 = 0.0;\n\telse {\n\n\t\tt3 *= t3;\n\t\tn3 = t3 * t3 * this.dot3( this.grad3[ gi3 ], x3, y3, z3 );\n\n\t}\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to stay just inside [-1,1]\n\treturn 32.0 * ( n0 + n1 + n2 + n3 );\n\n};\n\n// 4D simplex noise\nSimplexNoise.prototype.noise4d = function ( x, y, z, w ) {\n\n\t// For faster and easier lookups\n\tvar grad4 = this.grad4;\n\tvar simplex = this.simplex;\n\tvar perm = this.perm;\n\n\t// The skewing and unskewing factors are hairy again for the 4D case\n\tvar F4 = ( Math.sqrt( 5.0 ) - 1.0 ) / 4.0;\n\tvar G4 = ( 5.0 - Math.sqrt( 5.0 ) ) / 20.0;\n\tvar n0, n1, n2, n3, n4; // Noise contributions from the five corners\n\t// Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n\tvar s = ( x + y + z + w ) * F4; // Factor for 4D skewing\n\tvar i = Math.floor( x + s );\n\tvar j = Math.floor( y + s );\n\tvar k = Math.floor( z + s );\n\tvar l = Math.floor( w + s );\n\tvar t = ( i + j + k + l ) * G4; // Factor for 4D unskewing\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n\tvar Y0 = j - t;\n\tvar Z0 = k - t;\n\tvar W0 = l - t;\n\tvar x0 = x - X0; // The x,y,z,w distances from the cell origin\n\tvar y0 = y - Y0;\n\tvar z0 = z - Z0;\n\tvar w0 = w - W0;\n\n\t// For the 4D case, the simplex is a 4D shape I won't even try to describe.\n\t// To find out which of the 24 possible simplices we're in, we need to\n\t// determine the magnitude ordering of x0, y0, z0 and w0.\n\t// The method below is a good way of finding the ordering of x,y,z,w and\n\t// then find the correct traversal order for the simplex we’re in.\n\t// First, six pair-wise comparisons are performed between each possible pair\n\t// of the four coordinates, and the results are used to add up binary bits\n\t// for an integer index.\n\tvar c1 = ( x0 > y0 ) ? 32 : 0;\n\tvar c2 = ( x0 > z0 ) ? 16 : 0;\n\tvar c3 = ( y0 > z0 ) ? 8 : 0;\n\tvar c4 = ( x0 > w0 ) ? 4 : 0;\n\tvar c5 = ( y0 > w0 ) ? 2 : 0;\n\tvar c6 = ( z0 > w0 ) ? 1 : 0;\n\tvar c = c1 + c2 + c3 + c4 + c5 + c6;\n\tvar i1, j1, k1, l1; // The integer offsets for the second simplex corner\n\tvar i2, j2, k2, l2; // The integer offsets for the third simplex corner\n\tvar i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n\t// simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n\t// Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n\t// impossible. Only the 24 indices which have non-zero entries make any sense.\n\t// We use a thresholding to set the coordinates in turn from the largest magnitude.\n\t// The number 3 in the \"simplex\" array is at the position of the largest coordinate.\n\ti1 = simplex[ c ][ 0 ] >= 3 ? 1 : 0;\n\tj1 = simplex[ c ][ 1 ] >= 3 ? 1 : 0;\n\tk1 = simplex[ c ][ 2 ] >= 3 ? 1 : 0;\n\tl1 = simplex[ c ][ 3 ] >= 3 ? 1 : 0;\n\t// The number 2 in the \"simplex\" array is at the second largest coordinate.\n\ti2 = simplex[ c ][ 0 ] >= 2 ? 1 : 0;\n\tj2 = simplex[ c ][ 1 ] >= 2 ? 1 : 0; k2 = simplex[ c ][ 2 ] >= 2 ? 1 : 0;\n\tl2 = simplex[ c ][ 3 ] >= 2 ? 1 : 0;\n\t// The number 1 in the \"simplex\" array is at the second smallest coordinate.\n\ti3 = simplex[ c ][ 0 ] >= 1 ? 1 : 0;\n\tj3 = simplex[ c ][ 1 ] >= 1 ? 1 : 0;\n\tk3 = simplex[ c ][ 2 ] >= 1 ? 1 : 0;\n\tl3 = simplex[ c ][ 3 ] >= 1 ? 1 : 0;\n\t// The fifth corner has all coordinate offsets = 1, so no need to look that up.\n\tvar x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n\tvar y1 = y0 - j1 + G4;\n\tvar z1 = z0 - k1 + G4;\n\tvar w1 = w0 - l1 + G4;\n\tvar x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n\tvar y2 = y0 - j2 + 2.0 * G4;\n\tvar z2 = z0 - k2 + 2.0 * G4;\n\tvar w2 = w0 - l2 + 2.0 * G4;\n\tvar x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n\tvar y3 = y0 - j3 + 3.0 * G4;\n\tvar z3 = z0 - k3 + 3.0 * G4;\n\tvar w3 = w0 - l3 + 3.0 * G4;\n\tvar x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n\tvar y4 = y0 - 1.0 + 4.0 * G4;\n\tvar z4 = z0 - 1.0 + 4.0 * G4;\n\tvar w4 = w0 - 1.0 + 4.0 * G4;\n\t// Work out the hashed gradient indices of the five simplex corners\n\tvar ii = i & 255;\n\tvar jj = j & 255;\n\tvar kk = k & 255;\n\tvar ll = l & 255;\n\tvar gi0 = perm[ ii + perm[ jj + perm[ kk + perm[ ll ] ] ] ] % 32;\n\tvar gi1 = perm[ ii + i1 + perm[ jj + j1 + perm[ kk + k1 + perm[ ll + l1 ] ] ] ] % 32;\n\tvar gi2 = perm[ ii + i2 + perm[ jj + j2 + perm[ kk + k2 + perm[ ll + l2 ] ] ] ] % 32;\n\tvar gi3 = perm[ ii + i3 + perm[ jj + j3 + perm[ kk + k3 + perm[ ll + l3 ] ] ] ] % 32;\n\tvar gi4 = perm[ ii + 1 + perm[ jj + 1 + perm[ kk + 1 + perm[ ll + 1 ] ] ] ] % 32;\n\t// Calculate the contribution from the five corners\n\tvar t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n\tif ( t0 < 0 ) n0 = 0.0;\n\telse {\n\n\t\tt0 *= t0;\n\t\tn0 = t0 * t0 * this.dot4( grad4[ gi0 ], x0, y0, z0, w0 );\n\n\t}\n\tvar t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n\tif ( t1 < 0 ) n1 = 0.0;\n\telse {\n\n\t\tt1 *= t1;\n\t\tn1 = t1 * t1 * this.dot4( grad4[ gi1 ], x1, y1, z1, w1 );\n\n\t}\n\tvar t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n\tif ( t2 < 0 ) n2 = 0.0;\n\telse {\n\n\t\tt2 *= t2;\n\t\tn2 = t2 * t2 * this.dot4( grad4[ gi2 ], x2, y2, z2, w2 );\n\n\t} var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n\tif ( t3 < 0 ) n3 = 0.0;\n\telse {\n\n\t\tt3 *= t3;\n\t\tn3 = t3 * t3 * this.dot4( grad4[ gi3 ], x3, y3, z3, w3 );\n\n\t}\n\tvar t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n\tif ( t4 < 0 ) n4 = 0.0;\n\telse {\n\n\t\tt4 *= t4;\n\t\tn4 = t4 * t4 * this.dot4( grad4[ gi4 ], x4, y4, z4, w4 );\n\n\t}\n\t// Sum up and scale the result to cover the range [-1,1]\n\treturn 27.0 * ( n0 + n1 + n2 + n3 + n4 );\n\n};\n\nexport { SimplexNoise };\n","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ');\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nTHREE.GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.dracoLoader = null;\n\t\tthis.revokeObjectURLs = true;\n\n\t}\n\n\tGLTFLoader.prototype = {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tthis._load( url, onLoad, onProgress, onError, false );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( value ) {\n\n\t\t\tthis.resourcePath = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tthis._parse( data, path, onLoad, onError, false );\n\n\t\t},\n\n\t\tcreateParser: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tthis._load( url, onLoad, onProgress, onError, true );\n\n\t\t},\n\n\t\t_load: function ( url, onLoad, onProgress, onError, parserOnly ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== undefined ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== undefined ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope._parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError, parserOnly );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\t_parse: function ( data, path, onLoad, onError, parserOnly ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager,\n\t\t\t\trevokeObjectURLs: this.revokeObjectURLs\n\n\t\t\t} );\n\n\t\t\tif ( parserOnly ) {\n\n\t\t\t\t// parser.markDefs();\n\t\t\t\tonLoad( parser );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification:\n\t * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension() {\n\n\t\tif ( ! THREE.DDSLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = new THREE.DDSLoader();\n\n\t}\n\n\t/**\n\t * Lights Extension\n\t *\n\t * Specification: PENDING\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new THREE.Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension (pending)\n\t *\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification:\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn THREE.ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tmaterialParams.vertexShader = shader.vertexShader;\n\t\t\t\tmaterialParams.fragmentShader = fragmentShader;\n\t\t\t\tmaterialParams.uniforms = uniforms;\n\t\t\t\tmaterialParams.defines = { 'STANDARD': '' };\n\n\t\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {THREE.ShaderMaterial} source\n\t\t\t * @return {THREE.ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar value = source[ params[ i ] ];\n\t\t\t\t\ttarget[ params[ i ] ] = ( value && value.isColor ) ? value.clone() : value;\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.envMap ) {\n\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\t\tuniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipMapNearestFilter,\n\t\t9985: THREE.LinearMipMapNearestFilter,\n\t\t9986: THREE.NearestMipMapLinearFilter,\n\t\t9987: THREE.LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': THREE.RGBAFormat,\n\t\t'image/jpeg': THREE.RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\tvar defaultMaterial;\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial() {\n\n\t\tdefaultMaterial = defaultMaterial || new THREE.MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: THREE.FrontSide\n\t\t} );\n\n\t\treturn defaultMaterial;\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\t// Clone morph target accessors before modifying them.\n\n\t\t\tfor ( var i = 0, il = morphPositions.length; i < il; i ++ ) {\n\n\t\t\t\tif ( geometry.attributes.position === morphPositions[ i ] ) continue;\n\n\t\t\t\tmorphPositions[ i ] = cloneBufferAttribute( morphPositions[ i ] );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( geometry.attributes.normal === morphNormals[ i ] ) continue;\n\n\t\t\t\tmorphNormals[ i ] = cloneBufferAttribute( morphNormals[ i ] );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\t\t\t\tvar attributeName = 'morphTarget' + i;\n\n\t\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\t\t// Three.js morph position is absolute value. The formula is\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * ( morphPosition0 - basePosition )\n\t\t\t\t\t//     + weight1 * ( morphPosition1 - basePosition )\n\t\t\t\t\t//     ...\n\t\t\t\t\t// while the glTF one is relative\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * glTFmorphPosition0\n\t\t\t\t\t//     + weight1 * glTFmorphPosition1\n\t\t\t\t\t//     ...\n\t\t\t\t\t// then we need to convert from relative to absolute here.\n\n\t\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\t\tvar positionAttribute = morphPositions[ i ];\n\t\t\t\t\t\tpositionAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpositionAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\t\t// see target.POSITION's comment\n\n\t\t\t\t\tif ( target.NORMAL !== undefined ) {\n\n\t\t\t\t\t\tvar normalAttribute = morphNormals[ i ];\n\t\t\t\t\t\tnormalAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar normal = geometry.attributes.normal;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tnormalAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\tfunction cloneBufferAttribute( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tvar count = attribute.count;\n\t\t\tvar itemSize = attribute.itemSize;\n\t\t\tvar array = attribute.array.slice( 0, count * itemSize );\n\n\t\t\tfor ( var i = 0, j = 0; i < count; ++ i ) {\n\n\t\t\t\tarray[ j ++ ] = attribute.getX( i );\n\t\t\t\tif ( itemSize >= 2 ) array[ j ++ ] = attribute.getY( i );\n\t\t\t\tif ( itemSize >= 3 ) array[ j ++ ] = attribute.getZ( i );\n\t\t\t\tif ( itemSize >= 4 ) array[ j ++ ] = attribute.getW( i );\n\n\t\t\t}\n\n\t\t\treturn new THREE.BufferAttribute( array, itemSize, attribute.normalized );\n\n\t\t}\n\n\t\treturn attribute.clone();\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {\n\t\t\trevokeObjectURLs: true\n\t\t};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tonLoad( result );\n\n\t\t\tparser.cache.removeAll();\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tarray = new TypedArray( bufferView );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true && options.revokeObjectURLs ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = THREE.RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {THREE.Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\tlineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t: material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\n\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\n\n\t\t\t// We cannot assume the texture pixel format is RGB if the texture is used for base color and emissive maps\n\t\t\tif ( material.map && material.map === material.emissiveMap && ( material.transparent || material.alphaTest > 0.0 ) ) material.map.format = THREE.RGBAFormat;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.addAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial()\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( originalMaterials ) {\n\n\t\t\treturn parser.loadGeometries( primitives ).then( function ( geometries ) {\n\n\t\t\t\tvar meshes = [];\n\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\t// 1. create Mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tvar material = originalMaterials[ i ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar group = new THREE.Group();\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a THREE.Group (glTF mesh with several primitives) or a THREE.Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( node.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\treturn Promise.resolve( new THREE.Bone() );\n\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'camera', nodeDef.camera );\n\n\t\t\t} else if ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light );\n\n\t\t\t} else {\n\n\t\t\t\treturn Promise.resolve( new THREE.Object3D() );\n\n\t\t\t}\n\n\t\t}() ).then( function ( node ) {\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\n\n\t\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar mesh = meshes[ i ];\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new THREE.Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n","/*\n  Scene index for keeping track of created scenes.\n*/\nmodule.exports = [];\n","\"use strict\";\n/* global Ammo,THREE */\n\nconst TYPE = (exports.TYPE = {\n  BOX: \"box\",\n  CYLINDER: \"cylinder\",\n  SPHERE: \"sphere\",\n  CAPSULE: \"capsule\",\n  CONE: \"cone\",\n  HULL: \"hull\",\n  HACD: \"hacd\", //Hierarchical Approximate Convex Decomposition\n  VHACD: \"vhacd\", //Volumetric Hierarchical Approximate Convex Decomposition\n  MESH: \"mesh\",\n  HEIGHTFIELD: \"heightfield\"\n});\n\nconst FIT = (exports.FIT = {\n  ALL: \"all\", //A single shape is automatically sized to bound all meshes within the entity.\n  MANUAL: \"manual\" //A single shape is sized manually. Requires halfExtents or sphereRadius.\n});\n\nconst HEIGHTFIELD_DATA_TYPE = (exports.HEIGHTFIELD_DATA_TYPE = {\n  short: \"short\",\n  float: \"float\"\n});\n\nconst hasUpdateMatricesFunction = THREE.Object3D.prototype.hasOwnProperty(\"updateMatrices\");\n\nexports.createCollisionShapes = function(root, options) {\n  switch (options.type) {\n    case TYPE.BOX:\n      return [this.createBoxShape(root, options)];\n    case TYPE.CYLINDER:\n      return [this.createCylinderShape(root, options)];\n    case TYPE.CAPSULE:\n      return [this.createCapsuleShape(root, options)];\n    case TYPE.CONE:\n      return [this.createConeShape(root, options)];\n    case TYPE.SPHERE:\n      return [this.createSphereShape(root, options)];\n    case TYPE.HULL:\n      return [this.createHullShape(root, options)];\n    case TYPE.HACD:\n      return this.createHACDShapes(root, options);\n    case TYPE.VHACD:\n      return this.createVHACDShapes(root, options);\n    case TYPE.MESH:\n      return [this.createTriMeshShape(root, options)];\n    case TYPE.HEIGHTFIELD:\n      return [this.createHeightfieldTerrainShape(root, options)];\n    default:\n      console.warn(options.type + \" is not currently supported\");\n      return [];\n  }\n};\n\n//TODO: support gimpact (dynamic trimesh) and heightmap\n\nexports.createBoxShape = function(root, options) {\n  options.type = TYPE.BOX;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      root,\n      _computeBounds(root, options),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z);\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents);\n  Ammo.destroy(btHalfExtents);\n\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options));\n  return collisionShape;\n};\n\nexports.createCylinderShape = function(root, options) {\n  options.type = TYPE.CYLINDER;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      root,\n      _computeBounds(root, options),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z);\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case \"y\":\n        return new Ammo.btCylinderShape(btHalfExtents);\n      case \"x\":\n        return new Ammo.btCylinderShapeX(btHalfExtents);\n      case \"z\":\n        return new Ammo.btCylinderShapeZ(btHalfExtents);\n    }\n    return null;\n  })();\n  Ammo.destroy(btHalfExtents);\n\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options));\n  return collisionShape;\n};\n\nexports.createCapsuleShape = function(root, options) {\n  options.type = TYPE.CAPSULE;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      root,\n      _computeBounds(root, options),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const { x, y, z } = options.halfExtents;\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case \"y\":\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2);\n      case \"x\":\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2);\n      case \"z\":\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2);\n    }\n    return null;\n  })();\n\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options));\n  return collisionShape;\n};\n\nexports.createConeShape = function(root, options) {\n  options.type = TYPE.CONE;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      root,\n      _computeBounds(root, options),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const { x, y, z } = options.halfExtents;\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case \"y\":\n        return new Ammo.btConeShape(Math.max(x, z), y * 2);\n      case \"x\":\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2);\n      case \"z\":\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2);\n    }\n    return null;\n  })();\n\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options));\n  return collisionShape;\n};\n\nexports.createSphereShape = function(root, options) {\n  options.type = TYPE.SPHERE;\n  _setOptions(options);\n\n  let radius;\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\n    radius = options.sphereRadius;\n  } else {\n    radius = _computeRadius(root, options, _computeBounds(root, options));\n  }\n\n  const collisionShape = new Ammo.btSphereShape(radius);\n  _finishCollisionShape(collisionShape, options, _computeScale(root, options));\n\n  return collisionShape;\n};\n\nexports.createHullShape = (function() {\n  const vertex = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  return function(root, options) {\n    options.type = TYPE.HULL;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: hull\");\n      return null;\n    }\n\n    const bounds = _computeBounds(root, options);\n\n    const btVertex = new Ammo.btVector3();\n    const originalHull = new Ammo.btConvexHullShape();\n    originalHull.setMargin(options.margin);\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5);\n\n    let vertexCount = 0;\n    _iterateGeometries(root, options, geo => {\n      vertexCount += geo.attributes.position.array.length / 3;\n    });\n\n    const maxVertices = options.hullMaxVertices || 100000;\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\n    if (vertexCount > maxVertices) {\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`);\n    }\n    const p = Math.min(1, maxVertices / vertexCount);\n\n    _iterateGeometries(root, options, (geo, transform) => {\n      const components = geo.attributes.position.array;\n      for (let i = 0; i < components.length; i += 3) {\n        if (Math.random() <= p) {\n          vertex\n            .set(components[i], components[i + 1], components[i + 2])\n            .applyMatrix4(transform)\n            .sub(center);\n          btVertex.setValue(vertex.x, vertex.y, vertex.z);\n          originalHull.addPoint(btVertex, i === components.length - 3); // todo: better to recalc AABB only on last geometry\n        }\n      }\n    });\n\n    let collisionShape = originalHull;\n    if (originalHull.getNumVertices() >= 100) {\n      //Bullet documentation says don't use convexHulls with 100 verts or more\n      const shapeHull = new Ammo.btShapeHull(originalHull);\n      shapeHull.buildHull(options.margin);\n      Ammo.destroy(originalHull);\n      collisionShape = new Ammo.btConvexHullShape(\n        Ammo.getPointer(shapeHull.getVertexPointer()),\n        shapeHull.numVertices()\n      );\n      Ammo.destroy(shapeHull); // btConvexHullShape makes a copy\n    }\n\n    Ammo.destroy(btVertex);\n\n    _finishCollisionShape(collisionShape, options, _computeScale(root, options));\n    return collisionShape;\n  };\n})();\n\nexports.createHACDShapes = (function() {\n  const v = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  return function(root, options) {\n    options.type = TYPE.HACD;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: hacd\");\n      return [];\n    }\n\n    if (!Ammo.hasOwnProperty(\"HACD\")) {\n      console.warn(\n        \"HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.\"\n      );\n      return [];\n    }\n\n    const bounds = _computeBounds(root);\n    const scale = _computeScale(root, options);\n\n    let vertexCount = 0;\n    let triCount = 0;\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5);\n\n    _iterateGeometries(root, options, geo => {\n      vertexCount += geo.attributes.position.array.length / 3;\n      if (geo.index) {\n        triCount += geo.index.array.length / 3;\n      } else {\n        triCount += geo.attributes.position.array.length / 9;\n      }\n    });\n\n    const hacd = new Ammo.HACD();\n    if (options.hasOwnProperty(\"compacityWeight\")) hacd.SetCompacityWeight(options.compacityWeight);\n    if (options.hasOwnProperty(\"volumeWeight\")) hacd.SetVolumeWeight(options.volumeWeight);\n    if (options.hasOwnProperty(\"nClusters\")) hacd.SetNClusters(options.nClusters);\n    if (options.hasOwnProperty(\"nVerticesPerCH\")) hacd.SetNVerticesPerCH(options.nVerticesPerCH);\n    if (options.hasOwnProperty(\"concavity\")) hacd.SetConcavity(options.concavity);\n\n    const points = Ammo._malloc(vertexCount * 3 * 8);\n    const triangles = Ammo._malloc(triCount * 3 * 4);\n    hacd.SetPoints(points);\n    hacd.SetTriangles(triangles);\n    hacd.SetNPoints(vertexCount);\n    hacd.SetNTriangles(triCount);\n\n    const pptr = points / 8,\n      tptr = triangles / 4;\n    _iterateGeometries(root, options, (geo, transform) => {\n      const components = geo.attributes.position.array;\n      const indices = geo.index ? geo.index.array : null;\n      for (let i = 0; i < components.length; i += 3) {\n        v.set(components[i + 0], components[i + 1], components[i + 2])\n          .applyMatrix4(transform)\n          .sub(center);\n        Ammo.HEAPF64[pptr + i + 0] = v.x;\n        Ammo.HEAPF64[pptr + i + 1] = v.y;\n        Ammo.HEAPF64[pptr + i + 2] = v.z;\n      }\n      if (indices) {\n        for (let i = 0; i < indices.length; i++) {\n          Ammo.HEAP32[tptr + i] = indices[i];\n        }\n      } else {\n        for (let i = 0; i < components.length / 3; i++) {\n          Ammo.HEAP32[tptr + i] = i;\n        }\n      }\n    });\n\n    hacd.Compute();\n    Ammo._free(points);\n    Ammo._free(triangles);\n    const nClusters = hacd.GetNClusters();\n\n    const shapes = [];\n    for (let i = 0; i < nClusters; i++) {\n      const hull = new Ammo.btConvexHullShape();\n      hull.setMargin(options.margin);\n      const nPoints = hacd.GetNPointsCH(i);\n      const nTriangles = hacd.GetNTrianglesCH(i);\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8);\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4);\n      hacd.GetCH(i, hullPoints, hullTriangles);\n\n      const pptr = hullPoints / 8;\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3();\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0];\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1];\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2];\n        btVertex.setValue(px, py, pz);\n        hull.addPoint(btVertex, pi === nPoints - 1);\n        Ammo.destroy(btVertex);\n      }\n\n      _finishCollisionShape(hull, options, scale);\n      shapes.push(hull);\n    }\n\n    return shapes;\n  };\n})();\n\nexports.createVHACDShapes = (function() {\n  const v = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  return function(root, options) {\n    options.type = TYPE.VHACD;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: vhacd\");\n      return [];\n    }\n\n    if (!Ammo.hasOwnProperty(\"VHACD\")) {\n      console.warn(\n        \"VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.\"\n      );\n      return [];\n    }\n\n    const bounds = _computeBounds(root, options);\n    const scale = _computeScale(root, options);\n\n    let vertexCount = 0;\n    let triCount = 0;\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5);\n\n    _iterateGeometries(root, options, geo => {\n      vertexCount += geo.attributes.position.count;\n      if (geo.index) {\n        triCount += geo.index.count / 3;\n      } else {\n        triCount += geo.attributes.position.count / 3;\n      }\n    });\n\n    const vhacd = new Ammo.VHACD();\n    const params = new Ammo.Parameters();\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\n    if (options.hasOwnProperty(\"resolution\")) params.set_m_resolution(options.resolution);\n    if (options.hasOwnProperty(\"depth\")) params.set_m_depth(options.depth);\n    if (options.hasOwnProperty(\"concavity\")) params.set_m_concavity(options.concavity);\n    if (options.hasOwnProperty(\"planeDownsampling\")) params.set_m_planeDownsampling(options.planeDownsampling);\n    if (options.hasOwnProperty(\"convexhullDownsampling\"))\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling);\n    if (options.hasOwnProperty(\"alpha\")) params.set_m_alpha(options.alpha);\n    if (options.hasOwnProperty(\"beta\")) params.set_m_beta(options.beta);\n    if (options.hasOwnProperty(\"gamma\")) params.set_m_gamma(options.gamma);\n    if (options.hasOwnProperty(\"pca\")) params.set_m_pca(options.pca);\n    if (options.hasOwnProperty(\"mode\")) params.set_m_mode(options.mode);\n    if (options.hasOwnProperty(\"maxNumVerticesPerCH\")) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH);\n    if (options.hasOwnProperty(\"minVolumePerCH\")) params.set_m_minVolumePerCH(options.minVolumePerCH);\n    if (options.hasOwnProperty(\"convexhullApproximation\"))\n      params.set_m_convexhullApproximation(options.convexhullApproximation);\n    if (options.hasOwnProperty(\"oclAcceleration\")) params.set_m_oclAcceleration(options.oclAcceleration);\n\n    const points = Ammo._malloc(vertexCount * 3 * 8);\n    const triangles = Ammo._malloc(triCount * 3 * 4);\n\n    let pptr = points / 8,\n      tptr = triangles / 4;\n    _iterateGeometries(root, options, (geo, transform) => {\n      const components = geo.attributes.position.array;\n      const indices = geo.index ? geo.index.array : null;\n      for (let i = 0; i < components.length; i += 3) {\n        v.set(components[i + 0], components[i + 1], components[i + 2])\n          .applyMatrix4(transform)\n          .sub(center);\n        Ammo.HEAPF64[pptr + 0] = v.x;\n        Ammo.HEAPF64[pptr + 1] = v.y;\n        Ammo.HEAPF64[pptr + 2] = v.z;\n        pptr += 3;\n      }\n      if (indices) {\n        for (let i = 0; i < indices.length; i++) {\n          Ammo.HEAP32[tptr] = indices[i];\n          tptr++;\n        }\n      } else {\n        for (let i = 0; i < components.length / 3; i++) {\n          Ammo.HEAP32[tptr] = i;\n          tptr++;\n        }\n      }\n    });\n\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params);\n    Ammo._free(points);\n    Ammo._free(triangles);\n    const nHulls = vhacd.GetNConvexHulls();\n\n    const shapes = [];\n    const ch = new Ammo.ConvexHull();\n    for (let i = 0; i < nHulls; i++) {\n      vhacd.GetConvexHull(i, ch);\n      const nPoints = ch.get_m_nPoints();\n      const hullPoints = ch.get_m_points();\n\n      const hull = new Ammo.btConvexHullShape();\n      hull.setMargin(options.margin);\n\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3();\n        const px = ch.get_m_points(pi * 3 + 0);\n        const py = ch.get_m_points(pi * 3 + 1);\n        const pz = ch.get_m_points(pi * 3 + 2);\n        btVertex.setValue(px, py, pz);\n        hull.addPoint(btVertex, pi === nPoints - 1);\n        Ammo.destroy(btVertex);\n      }\n\n      _finishCollisionShape(hull, options, scale);\n      shapes.push(hull);\n    }\n    Ammo.destroy(ch);\n    Ammo.destroy(vhacd);\n\n    return shapes;\n  };\n})();\n\nexports.createTriMeshShape = (function() {\n  const va = new THREE.Vector3();\n  const vb = new THREE.Vector3();\n  const vc = new THREE.Vector3();\n  return function(root, options) {\n    options.type = TYPE.MESH;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: mesh\");\n      return null;\n    }\n\n    const scale = _computeScale(root, options);\n\n    const bta = new Ammo.btVector3();\n    const btb = new Ammo.btVector3();\n    const btc = new Ammo.btVector3();\n    const triMesh = new Ammo.btTriangleMesh(true, false);\n\n    _iterateGeometries(root, options, (geo, transform) => {\n      const components = geo.attributes.position.array;\n      if (geo.index) {\n        for (let i = 0; i < geo.index.count; i += 3) {\n          const ai = geo.index.array[i] * 3;\n          const bi = geo.index.array[i + 1] * 3;\n          const ci = geo.index.array[i + 2] * 3;\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(transform);\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(transform);\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(transform);\n          bta.setValue(va.x, va.y, va.z);\n          btb.setValue(vb.x, vb.y, vb.z);\n          btc.setValue(vc.x, vc.y, vc.z);\n          triMesh.addTriangle(bta, btb, btc, false);\n        }\n      } else {\n        for (let i = 0; i < components.length; i += 9) {\n          va.set(components[i + 0], components[i + 1], components[i + 2]).applyMatrix4(transform);\n          vb.set(components[i + 3], components[i + 4], components[i + 5]).applyMatrix4(transform);\n          vc.set(components[i + 6], components[i + 7], components[i + 8]).applyMatrix4(transform);\n          bta.setValue(va.x, va.y, va.z);\n          btb.setValue(vb.x, vb.y, vb.z);\n          btc.setValue(vc.x, vc.y, vc.z);\n          triMesh.addTriangle(bta, btb, btc, false);\n        }\n      }\n    });\n\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z);\n    triMesh.setScaling(localScale);\n    Ammo.destroy(localScale);\n\n    const collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true);\n    collisionShape.resources = [triMesh];\n\n    Ammo.destroy(bta);\n    Ammo.destroy(btb);\n    Ammo.destroy(btc);\n\n    _finishCollisionShape(collisionShape, options);\n    return collisionShape;\n  };\n})();\n\nexports.createHeightfieldTerrainShape = function(root, options) {\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    console.warn(\"cannot use fit: all with type: heightfield\");\n    return null;\n  }\n  const heightfieldDistance = options.heightfieldDistance || 1;\n  const heightfieldData = options.heightfieldData || [];\n  const heightScale = options.heightScale || 0;\n  const upAxis = options.hasOwnProperty(\"upAxis\") ? options.upAxis : 1; // x = 0; y = 1; z = 2\n  const hdt = (() => {\n    switch (options.heightDataType) {\n      case \"short\":\n        return Ammo.PHY_SHORT;\n      case \"float\":\n        return Ammo.PHY_FLOAT;\n      default:\n        return Ammo.PHY_FLOAT;\n    }\n  })();\n  const flipQuadEdges = options.hasOwnProperty(\"flipQuadEdges\") ? options.flipQuadEdges : true;\n\n  const heightStickLength = heightfieldData.length;\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0;\n\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4);\n  const ptr = data / 4;\n\n  let minHeight = Number.POSITIVE_INFINITY;\n  let maxHeight = Number.NEGATIVE_INFINITY;\n  let index = 0;\n  for (let l = 0; l < heightStickLength; l++) {\n    for (let w = 0; w < heightStickWidth; w++) {\n      const height = heightfieldData[l][w];\n      Ammo.HEAPF32[ptr + index] = height;\n      index++;\n      minHeight = Math.min(minHeight, height);\n      maxHeight = Math.max(maxHeight, height);\n    }\n  }\n\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\n    heightStickWidth,\n    heightStickLength,\n    data,\n    heightScale,\n    minHeight,\n    maxHeight,\n    upAxis,\n    hdt,\n    flipQuadEdges\n  );\n\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance);\n  collisionShape.setLocalScaling(scale);\n  Ammo.destroy(scale);\n\n  collisionShape.heightfieldData = data;\n\n  _finishCollisionShape(collisionShape, options);\n  return collisionShape;\n};\n\nfunction _setOptions(options) {\n  options.fit = options.hasOwnProperty(\"fit\") ? options.fit : FIT.ALL;\n  options.type = options.type || TYPE.HULL;\n  options.minHalfExtent = options.hasOwnProperty(\"minHalfExtent\") ? options.minHalfExtent : 0;\n  options.maxHalfExtent = options.hasOwnProperty(\"maxHalfExtent\") ? options.maxHalfExtent : Number.POSITIVE_INFINITY;\n  options.cylinderAxis = options.cylinderAxis || \"y\";\n  options.margin = options.hasOwnProperty(\"margin\") ? options.margin : 0.01;\n  options.includeInvisible = options.hasOwnProperty(\"includeInvisible\") ? options.includeInvisible : false;\n\n  if (!options.offset) {\n    options.offset = new THREE.Vector3();\n  }\n\n  if (!options.orientation) {\n    options.orientation = new THREE.Quaternion();\n  }\n}\n\nconst _finishCollisionShape = function(collisionShape, options, scale) {\n  collisionShape.type = options.type;\n  collisionShape.setMargin(options.margin);\n  collisionShape.destroy = () => {\n    for (let res of collisionShape.resources || []) {\n      Ammo.destroy(res);\n    }\n    if (collisionShape.heightfieldData) {\n      Ammo._free(collisionShape.heightfieldData);\n    }\n    Ammo.destroy(collisionShape);\n  };\n\n  const localTransform = new Ammo.btTransform();\n  const rotation = new Ammo.btQuaternion();\n  localTransform.setIdentity();\n\n  localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z);\n  rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w);\n\n  localTransform.setRotation(rotation);\n  Ammo.destroy(rotation);\n\n  if (scale) {\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z);\n    collisionShape.setLocalScaling(localScale);\n    Ammo.destroy(localScale);\n  }\n\n  collisionShape.localTransform = localTransform;\n};\n\n// Calls `cb(geo, transform)` for each geometry under `root` whose vertices we should take into account for the physics shape.\n// `transform` is the transform required to transform the given geometry's vertices into root-local space.\nconst _iterateGeometries = (function() {\n  const transform = new THREE.Matrix4();\n  const inverse = new THREE.Matrix4();\n  const bufferGeometry = new THREE.BufferGeometry();\n  return function(root, options, cb) {\n    inverse.getInverse(root.matrixWorld);\n    root.traverse(mesh => {\n      if (\n        mesh.isMesh &&\n        (!THREE.Sky || mesh.__proto__ != THREE.Sky.prototype) &&\n        (options.includeInvisible || ((mesh.el && mesh.el.object3D.visible) || mesh.visible))\n      ) {\n        if (mesh === root) {\n          transform.identity();\n        } else {\n          if (hasUpdateMatricesFunction) mesh.updateMatrices();\n          transform.multiplyMatrices(inverse, mesh.matrixWorld);\n        }\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\n        // things by the identity matrix\n        cb(mesh.geometry.isBufferGeometry ? mesh.geometry : bufferGeometry.fromGeometry(mesh.geometry), transform);\n      }\n    });\n  };\n})();\n\nconst _computeScale = function(root, options) {\n  const scale = new THREE.Vector3(1, 1, 1);\n  if (options.fit === FIT.ALL) {\n    scale.setFromMatrixScale(root.matrixWorld);\n  }\n  return scale;\n};\n\nconst _computeRadius = (function() {\n  const v = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  return function(root, options, bounds) {\n    let maxRadiusSq = 0;\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center);\n    _iterateGeometries(root, options, (geo, transform) => {\n      const components = geo.attributes.position.array;\n      for (let i = 0; i < components.length; i += 3) {\n        v.set(components[i], components[i + 1], components[i + 2]).applyMatrix4(transform);\n        const dx = cx - v.x;\n        const dy = cy - v.y;\n        const dz = cz - v.z;\n        maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz);\n      }\n    });\n    return Math.sqrt(maxRadiusSq);\n  };\n})();\n\nconst _computeHalfExtents = function(root, bounds, minHalfExtent, maxHalfExtent) {\n  const halfExtents = new THREE.Vector3();\n  return halfExtents\n    .subVectors(bounds.max, bounds.min)\n    .multiplyScalar(0.5)\n    .clampScalar(minHalfExtent, maxHalfExtent);\n};\n\nconst _computeLocalOffset = function(matrix, bounds, target) {\n  target\n    .addVectors(bounds.max, bounds.min)\n    .multiplyScalar(0.5)\n    .applyMatrix4(matrix);\n  return target;\n};\n\n// returns the bounding box for the geometries underneath `root`.\nconst _computeBounds = (function() {\n  const v = new THREE.Vector3();\n  return function(root, options) {\n    const bounds = new THREE.Box3();\n    let minX = +Infinity;\n    let minY = +Infinity;\n    let minZ = +Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    let maxZ = -Infinity;\n    bounds.min.set(0, 0, 0);\n    bounds.max.set(0, 0, 0);\n    _iterateGeometries(root, options, (geo, transform) => {\n      const components = geo.attributes.position.array;\n      for (let i = 0; i < components.length; i += 3) {\n        v.set(components[i], components[i + 1], components[i + 2]).applyMatrix4(transform);\n        if (v.x < minX) minX = v.x;\n        if (v.y < minY) minY = v.y;\n        if (v.z < minZ) minZ = v.z;\n        if (v.x > maxX) maxX = v.x;\n        if (v.y > maxY) maxY = v.y;\n        if (v.z > maxZ) maxZ = v.z;\n      }\n    });\n    bounds.min.set(minX, minY, minZ);\n    bounds.max.set(maxX, maxY, maxZ);\n    return bounds;\n  };\n})();\n","/* global THREE */\nvar debug = require('./debug');\nvar extend = require('object-assign');\n\nvar warn = debug('utils:coordinates:warn');\n\n// Order of coordinates parsed by coordinates.parse.\nvar COORDINATE_KEYS = ['x', 'y', 'z', 'w'];\n\n// Coordinate string regex. Handles negative, positive, and decimals.\nvar regex = /^\\s*((-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s+){2,3}(-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s*$/;\nmodule.exports.regex = regex;\n\nvar OBJECT = 'object';\nvar whitespaceRegex = /\\s+/g;\n\n/**\n * Parses coordinates from an \"x y z\" string.\n * Example: \"3 10 -5\" to {x: 3, y: 10, z: -5}.\n *\n * @param {string} val - An \"x y z\" string.\n * @param {string} defaults - fallback value.\n * @returns {object} An object with keys [x, y, z].\n */\nfunction parse (value, defaultVec) {\n  var coordinate;\n  var defaultVal;\n  var key;\n  var i;\n  var vec;\n  var x;\n  var y;\n  var z;\n  var w;\n\n  if (value && value instanceof Object) {\n    x = value.x === undefined ? defaultVec && defaultVec.x : value.x;\n    y = value.y === undefined ? defaultVec && defaultVec.y : value.y;\n    z = value.z === undefined ? defaultVec && defaultVec.z : value.z;\n    w = value.w === undefined ? defaultVec && defaultVec.w : value.w;\n    if (x !== undefined && x !== null) { value.x = parseIfString(x); }\n    if (y !== undefined && y !== null) { value.y = parseIfString(y); }\n    if (z !== undefined && z !== null) { value.z = parseIfString(z); }\n    if (w !== undefined && w !== null) { value.w = parseIfString(w); }\n    return value;\n  }\n\n  if (value === null || value === undefined) {\n    return typeof defaultVec === OBJECT ? extend({}, defaultVec) : defaultVec;\n  }\n\n  coordinate = value.trim().split(whitespaceRegex);\n  vec = {};\n  for (i = 0; i < COORDINATE_KEYS.length; i++) {\n    key = COORDINATE_KEYS[i];\n    if (coordinate[i]) {\n      vec[key] = parseFloat(coordinate[i], 10);\n    } else {\n      defaultVal = defaultVec && defaultVec[key];\n      if (defaultVal === undefined) { continue; }\n      vec[key] = parseIfString(defaultVal);\n    }\n  }\n  return vec;\n}\nmodule.exports.parse = parse;\n\n/**\n * Stringify coordinates from an object with keys [x y z].\n * Example: {x: 3, y: 10, z: -5} to \"3 10 -5\".\n *\n * @param {object|string} data - An object with keys [x y z].\n * @returns {string} An \"x y z\" string.\n */\nfunction stringify (data) {\n  var str;\n  if (typeof data !== OBJECT) { return data; }\n  str = data.x + ' ' + data.y;\n  if (data.z != null) { str += ' ' + data.z; }\n  if (data.w != null) { str += ' ' + data.w; }\n  return str;\n}\nmodule.exports.stringify = stringify;\n\n/**\n * @returns {bool}\n */\nfunction isCoordinates (value) {\n  return regex.test(value);\n}\nmodule.exports.isCoordinates = isCoordinates;\n\nmodule.exports.isCoordinate = function (value) {\n  warn('`AFRAME.utils.isCoordinate` has been renamed to `AFRAME.utils.isCoordinates`');\n  return isCoordinates(value);\n};\n\nfunction parseIfString (val) {\n  if (val !== null && val !== undefined && val.constructor === String) {\n    return parseFloat(val, 10);\n  }\n  return val;\n}\n\n/**\n * Convert {x, y, z} object to three.js Vector3.\n */\nmodule.exports.toVector3 = function (vec3) {\n  return new THREE.Vector3(vec3.x, vec3.y, vec3.z);\n};\n","var THREE = require('../lib/three');\n\nvar HLS_MIMETYPES = ['application/x-mpegurl', 'application/vnd.apple.mpegurl'];\n\nvar COLOR_MAPS = new Set([\n  'emissiveMap',\n  'envMap',\n  'map',\n  'specularMap'\n]);\n\n/**\n * Update `material` texture property (usually but not always `map`)\n * from `data` property (usually but not always `src`)\n *\n * @param {object} shader - A-Frame shader instance.\n * @param {object} data\n */\nmodule.exports.updateMapMaterialFromData = function (materialName, dataName, shader, data) {\n  var el = shader.el;\n  var material = shader.material;\n  var rendererSystem = el.sceneEl.systems.renderer;\n  var src = data[dataName];\n\n  // Because a single material / shader may have multiple textures,\n  // we need to remember the source value for this data property\n  // to avoid redundant operations which can be expensive otherwise\n  // (e.g. video texture loads).\n  if (!shader.materialSrcs) { shader.materialSrcs = {}; }\n\n  if (!src) {\n    // Forget the prior material src.\n    delete shader.materialSrcs[materialName];\n    // Remove the texture.\n    setMap(null);\n    return;\n  }\n\n  // Don't process if material src hasn't changed.\n  if (src === shader.materialSrcs[materialName]) { return; }\n\n  // Remember the new src for this texture (there may be multiple).\n  shader.materialSrcs[materialName] = src;\n\n  // If the new material src is already a texture, just use it.\n  if (src instanceof THREE.Texture) { setMap(src); } else {\n    // Load texture for the new material src.\n    // (And check if we should still use it once available in callback.)\n    el.sceneEl.systems.material.loadTexture(src,\n      {src: src, repeat: data.repeat, offset: data.offset, npot: data.npot},\n      checkSetMap);\n  }\n\n  function checkSetMap (texture) {\n    // If the source has been changed, don't use loaded texture.\n    if (shader.materialSrcs[materialName] !== src) { return; }\n    setMap(texture);\n  }\n\n  function setMap (texture) {\n    material[materialName] = texture;\n    if (texture && COLOR_MAPS.has(materialName)) {\n      rendererSystem.applyColorCorrection(texture);\n    }\n    material.needsUpdate = true;\n    handleTextureEvents(el, texture);\n  }\n};\n\n/**\n * Update `material.map` given `data.src`. For standard and flat shaders.\n *\n * @param {object} shader - A-Frame shader instance.\n * @param {object} data\n */\nmodule.exports.updateMap = function (shader, data) {\n  return module.exports.updateMapMaterialFromData('map', 'src', shader, data);\n};\n\n/**\n * Updates the material's maps which give the illusion of extra geometry.\n *\n * @param {string} longType - The friendly name of the map from the component e.g. ambientOcclusionMap becomes aoMap in THREE.js\n * @param {object} shader - A-Frame shader instance\n * @param {object} data\n */\nmodule.exports.updateDistortionMap = function (longType, shader, data) {\n  var shortType = longType;\n  if (longType === 'ambientOcclusion') { shortType = 'ao'; }\n  var el = shader.el;\n  var material = shader.material;\n  var rendererSystem = el.sceneEl.systems.renderer;\n  var src = data[longType + 'Map'];\n  var info = {};\n  info.src = src;\n\n  // Pass through the repeat and offset to be handled by the material loader.\n  info.offset = data[longType + 'TextureOffset'];\n  info.repeat = data[longType + 'TextureRepeat'];\n  info.wrap = data[longType + 'TextureWrap'];\n\n  if (src) {\n    if (src === shader[longType + 'TextureSrc']) { return; }\n\n    // Texture added or changed.\n    shader[longType + 'TextureSrc'] = src;\n    el.sceneEl.systems.material.loadTexture(src, info, setMap);\n    return;\n  }\n\n  // Texture removed.\n  if (!material.map) { return; }\n  setMap(null);\n\n  function setMap (texture) {\n    var slot = shortType + 'Map';\n    material[slot] = texture;\n    if (texture && COLOR_MAPS.has(slot)) {\n      rendererSystem.applyColorCorrection(texture);\n    }\n    material.needsUpdate = true;\n    handleTextureEvents(el, texture);\n  }\n};\n\n/**\n * Emit event on entities on texture-related events.\n *\n * @param {Element} el - Entity.\n * @param {object} texture - three.js Texture.\n */\nfunction handleTextureEvents (el, texture) {\n  if (!texture) { return; }\n\n  el.emit('materialtextureloaded', {src: texture.image, texture: texture});\n\n  // Video events.\n  if (!texture.image || texture.image.tagName !== 'VIDEO') { return; }\n\n  texture.image.addEventListener('loadeddata', function emitVideoTextureLoadedDataAll () {\n    // Check to see if we need to use iOS 10 HLS shader.\n    // Only override the shader if it is stock shader that we know doesn't correct.\n    if (!el.components || !el.components.material) { return; }\n\n    if (texture.needsCorrectionBGRA && texture.needsCorrectionFlipY &&\n        ['standard', 'flat'].indexOf(el.components.material.data.shader) !== -1) {\n      el.setAttribute('material', 'shader', 'ios10hls');\n    }\n\n    el.emit('materialvideoloadeddata', {src: texture.image, texture: texture});\n  });\n  texture.image.addEventListener('ended', function emitVideoTextureEndedAll () {\n    // Works for non-looping videos only.\n    el.emit('materialvideoended', {src: texture.image, texture: texture});\n  });\n}\nmodule.exports.handleTextureEvents = handleTextureEvents;\n\n/**\n * Given video element src and type, guess whether stream is HLS.\n *\n * @param {string} src - src from video element (generally URL to content).\n * @param {string} type - type from video element (generally MIME type if present).\n */\nmodule.exports.isHLS = function (src, type) {\n  if (type && HLS_MIMETYPES.includes(type.toLowerCase())) { return true; }\n  if (src && src.toLowerCase().indexOf('.m3u8') > 0) { return true; }\n  return false;\n};\n","/**\n * Automated mesh primitive registration.\n */\nvar getMeshMixin = require('../getMeshMixin');\nvar geometries = require('../../../core/geometry').geometries;\nvar geometryNames = require('../../../core/geometry').geometryNames;\nvar registerPrimitive = require('../primitives').registerPrimitive;\nvar utils = require('../../../utils/');\n\n// For testing.\nvar meshPrimitives = module.exports = {};\n\n// Generate primitive for each geometry type.\ngeometryNames.forEach(function registerMeshPrimitive (geometryName) {\n  var geometry = geometries[geometryName];\n  var geometryHyphened = unCamelCase(geometryName);\n\n  // Generate mappings.\n  var mappings = {};\n  Object.keys(geometry.schema).forEach(function createMapping (property) {\n    mappings[unCamelCase(property)] = 'geometry.' + property;\n  });\n\n  // Register.\n  var tagName = 'a-' + geometryHyphened;\n  var primitive = registerPrimitive(tagName, utils.extendDeep({}, getMeshMixin(), {\n    defaultComponents: {geometry: {primitive: geometryName}},\n    mappings: mappings\n  }));\n  meshPrimitives[tagName] = primitive;\n});\n\n/**\n * camelCase to hyphened-string.\n */\nfunction unCamelCase (str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n","/**\n * @author Prashant Sharma / spidersharma03\n * @author Ben Houston / bhouston, https://clara.io\n *\n * To avoid cube map seams, I create an extra pixel around each face. This way when the cube map is\n * sampled by an application later(with a little care by sampling the centre of the texel), the extra 1 border\n *\tof pixels makes sure that there is no seams artifacts present. This works perfectly for cubeUV format as\n *\twell where the 6 faces can be arranged in any manner whatsoever.\n * Code in the beginning of fragment shader's main function does this job for a given resolution.\n *\tRun Scene_PMREM_Test.html in the examples directory to see the sampling from the cube lods generated\n *\tby this class.\n */\n\nTHREE.PMREMGenerator = ( function () {\n\n\tvar shader = getShader();\n\tvar camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0.0, 1000 );\n\tvar scene = new THREE.Scene();\n\tvar planeMesh = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2, 0 ), shader );\n\tplaneMesh.material.side = THREE.DoubleSide;\n\tscene.add( planeMesh );\n\tscene.add( camera );\n\n\tvar PMREMGenerator = function ( sourceTexture, samplesPerLevel, resolution ) {\n\n\t\tthis.sourceTexture = sourceTexture;\n\t\tthis.resolution = ( resolution !== undefined ) ? resolution : 256; // NODE: 256 is currently hard coded in the glsl code for performance reasons\n\t\tthis.samplesPerLevel = ( samplesPerLevel !== undefined ) ? samplesPerLevel : 32;\n\n\t\tvar monotonicEncoding = ( this.sourceTexture.encoding === THREE.LinearEncoding ) ||\n\t\t\t( this.sourceTexture.encoding === THREE.GammaEncoding ) || ( this.sourceTexture.encoding === THREE.sRGBEncoding );\n\n\t\tthis.sourceTexture.minFilter = ( monotonicEncoding ) ? THREE.LinearFilter : THREE.NearestFilter;\n\t\tthis.sourceTexture.magFilter = ( monotonicEncoding ) ? THREE.LinearFilter : THREE.NearestFilter;\n\t\tthis.sourceTexture.generateMipmaps = this.sourceTexture.generateMipmaps && monotonicEncoding;\n\n\t\tthis.cubeLods = [];\n\n\t\tvar size = this.resolution;\n\t\tvar params = {\n\t\t\tformat: this.sourceTexture.format,\n\t\t\tmagFilter: this.sourceTexture.magFilter,\n\t\t\tminFilter: this.sourceTexture.minFilter,\n\t\t\ttype: this.sourceTexture.type,\n\t\t\tgenerateMipmaps: this.sourceTexture.generateMipmaps,\n\t\t\tanisotropy: this.sourceTexture.anisotropy,\n\t\t\tencoding: this.sourceTexture.encoding\n\t\t};\n\n\t\t// how many LODs fit in the given CubeUV Texture.\n\t\tthis.numLods = Math.log( size ) / Math.log( 2 ) - 2; // IE11 doesn't support Math.log2\n\n\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\tvar renderTarget = new THREE.WebGLRenderTargetCube( size, size, params );\n\t\t\trenderTarget.texture.name = \"PMREMGenerator.cube\" + i;\n\t\t\tthis.cubeLods.push( renderTarget );\n\t\t\tsize = Math.max( 16, size / 2 );\n\n\t\t}\n\n\t};\n\n\tPMREMGenerator.prototype = {\n\n\t\tconstructor: PMREMGenerator,\n\n\t\t/*\n\t\t * Prashant Sharma / spidersharma03: More thought and work is needed here.\n\t\t * Right now it's a kind of a hack to use the previously convolved map to convolve the current one.\n\t\t * I tried to use the original map to convolve all the lods, but for many textures(specially the high frequency)\n\t\t * even a high number of samples(1024) dosen't lead to satisfactory results.\n\t\t * By using the previous convolved maps, a lower number of samples are generally sufficient(right now 32, which\n\t\t * gives okay results unless we see the reflection very carefully, or zoom in too much), however the math\n\t\t * goes wrong as the distribution function tries to sample a larger area than what it should be. So I simply scaled\n\t\t * the roughness by 0.9(totally empirical) to try to visually match the original result.\n\t\t * The condition \"if(i <5)\" is also an attemt to make the result match the original result.\n\t\t * This method requires the most amount of thinking I guess. Here is a paper which we could try to implement in future::\n\t\t * https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch20.html\n\t\t */\n\t\tupdate: function ( renderer ) {\n\n\t\t\t// Texture should only be flipped for CubeTexture, not for\n\t\t\t// a Texture created via THREE.WebGLRenderTargetCube.\n\t\t\tvar tFlip = ( this.sourceTexture.isCubeTexture ) ? - 1 : 1;\n\n\t\t\tshader.defines[ 'SAMPLES_PER_LEVEL' ] = this.samplesPerLevel;\n\t\t\tshader.uniforms[ 'faceIndex' ].value = 0;\n\t\t\tshader.uniforms[ 'envMap' ].value = this.sourceTexture;\n\t\t\tshader.envMap = this.sourceTexture;\n\t\t\tshader.needsUpdate = true;\n\n\t\t\tvar gammaInput = renderer.gammaInput;\n\t\t\tvar gammaOutput = renderer.gammaOutput;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar toneMappingExposure = renderer.toneMappingExposure;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.toneMapping = THREE.LinearToneMapping;\n\t\t\trenderer.toneMappingExposure = 1.0;\n\t\t\trenderer.gammaInput = false;\n\t\t\trenderer.gammaOutput = false;\n\n\t\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\t\tvar r = i / ( this.numLods - 1 );\n\t\t\t\tshader.uniforms[ 'roughness' ].value = r * 0.9; // see comment above, pragmatic choice\n\t\t\t\t// Only apply the tFlip for the first LOD\n\t\t\t\tshader.uniforms[ 'tFlip' ].value = ( i == 0 ) ? tFlip : 1;\n\t\t\t\tvar size = this.cubeLods[ i ].width;\n\t\t\t\tshader.uniforms[ 'mapSize' ].value = size;\n\t\t\t\tthis.renderToCubeMapTarget( renderer, this.cubeLods[ i ] );\n\n\t\t\t\tif ( i < 5 ) shader.uniforms[ 'envMap' ].value = this.cubeLods[ i ].texture;\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.toneMappingExposure = toneMappingExposure;\n\t\t\trenderer.gammaInput = gammaInput;\n\t\t\trenderer.gammaOutput = gammaOutput;\n\n\t\t},\n\n\t\trenderToCubeMapTarget: function ( renderer, renderTarget ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tthis.renderToCubeMapTargetFace( renderer, renderTarget, i );\n\n\t\t\t}\n\n\t\t},\n\n\t\trenderToCubeMapTargetFace: function ( renderer, renderTarget, faceIndex ) {\n\n\t\t\tshader.uniforms[ 'faceIndex' ].value = faceIndex;\n\t\t\trenderer.setRenderTarget( renderTarget, faceIndex );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, camera );\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tfor ( var i = 0, l = this.cubeLods.length; i < l; i ++ ) {\n\n\t\t\t\tthis.cubeLods[ i ].dispose();\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\tfunction getShader() {\n\n\t\tvar shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"SAMPLES_PER_LEVEL\": 20,\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"faceIndex\": { value: 0 },\n\t\t\t\t\"roughness\": { value: 0.5 },\n\t\t\t\t\"mapSize\": { value: 0.5 },\n\t\t\t\t\"envMap\": { value: null },\n\t\t\t\t\"tFlip\": { value: - 1 },\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\n\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform int faceIndex;\\n\\\n\t\t\t\tuniform float roughness;\\n\\\n\t\t\t\tuniform samplerCube envMap;\\n\\\n\t\t\t\tuniform float mapSize;\\n\\\n\t\t\t\tuniform float tFlip;\\n\\\n\t\t\t\t\\n\\\n\t\t\t\tfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\\n\t\t\t\t\tfloat a = ggxRoughness + 0.0001;\\n\\\n\t\t\t\t\ta *= a;\\n\\\n\t\t\t\t\treturn ( 2.0 / a - 2.0 );\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tvec3 ImportanceSamplePhong(vec2 uv, mat3 vecSpace, float specPow) {\\n\\\n\t\t\t\t\tfloat phi = uv.y * 2.0 * PI;\\n\\\n\t\t\t\t\tfloat cosTheta = pow(1.0 - uv.x, 1.0 / (specPow + 1.0));\\n\\\n\t\t\t\t\tfloat sinTheta = sqrt(1.0 - cosTheta * cosTheta);\\n\\\n\t\t\t\t\tvec3 sampleDir = vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\\n\\\n\t\t\t\t\treturn vecSpace * sampleDir;\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tvec3 ImportanceSampleGGX( vec2 uv, mat3 vecSpace, float Roughness )\\n\\\n\t\t\t\t{\\n\\\n\t\t\t\t\tfloat a = Roughness * Roughness;\\n\\\n\t\t\t\t\tfloat Phi = 2.0 * PI * uv.x;\\n\\\n\t\t\t\t\tfloat CosTheta = sqrt( (1.0 - uv.y) / ( 1.0 + (a*a - 1.0) * uv.y ) );\\n\\\n\t\t\t\t\tfloat SinTheta = sqrt( 1.0 - CosTheta * CosTheta );\\n\\\n\t\t\t\t\treturn vecSpace * vec3(SinTheta * cos( Phi ), SinTheta * sin( Phi ), CosTheta);\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tmat3 matrixFromVector(vec3 n) {\\n\\\n\t\t\t\t\tfloat a = 1.0 / (1.0 + n.z);\\n\\\n\t\t\t\t\tfloat b = -n.x * n.y * a;\\n\\\n\t\t\t\t\tvec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\\n\\\n\t\t\t\t\tvec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\\n\\\n\t\t\t\t\treturn mat3(b1, b2, n);\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\t\\n\\\n\t\t\t\tvec4 testColorMap(float Roughness) {\\n\\\n\t\t\t\t\tvec4 color;\\n\\\n\t\t\t\t\tif(faceIndex == 0)\\n\\\n\t\t\t\t\t\tcolor = vec4(1.0,0.0,0.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 1)\\n\\\n\t\t\t\t\t\tcolor = vec4(0.0,1.0,0.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 2)\\n\\\n\t\t\t\t\t\tcolor = vec4(0.0,0.0,1.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 3)\\n\\\n\t\t\t\t\t\tcolor = vec4(1.0,1.0,0.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 4)\\n\\\n\t\t\t\t\t\tcolor = vec4(0.0,1.0,1.0,1.0);\\n\\\n\t\t\t\t\telse\\n\\\n\t\t\t\t\t\tcolor = vec4(1.0,0.0,1.0,1.0);\\n\\\n\t\t\t\t\tcolor *= ( 1.0 - Roughness );\\n\\\n\t\t\t\t\treturn color;\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec3 sampleDirection;\\n\\\n\t\t\t\t\tvec2 uv = vUv*2.0 - 1.0;\\n\\\n\t\t\t\t\tfloat offset = -1.0/mapSize;\\n\\\n\t\t\t\t\tconst float a = -1.0;\\n\\\n\t\t\t\t\tconst float b = 1.0;\\n\\\n\t\t\t\t\tfloat c = -1.0 + offset;\\n\\\n\t\t\t\t\tfloat d = 1.0 - offset;\\n\\\n\t\t\t\t\tfloat bminusa = b - a;\\n\\\n\t\t\t\t\tuv.x = (uv.x - a)/bminusa * d - (uv.x - b)/bminusa * c;\\n\\\n\t\t\t\t\tuv.y = (uv.y - a)/bminusa * d - (uv.y - b)/bminusa * c;\\n\\\n\t\t\t\t\tif (faceIndex==0) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(1.0, -uv.y, -uv.x);\\n\\\n\t\t\t\t\t} else if (faceIndex==1) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(-1.0, -uv.y, uv.x);\\n\\\n\t\t\t\t\t} else if (faceIndex==2) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, 1.0, uv.y);\\n\\\n\t\t\t\t\t} else if (faceIndex==3) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, -1.0, -uv.y);\\n\\\n\t\t\t\t\t} else if (faceIndex==4) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, -uv.y, 1.0);\\n\\\n\t\t\t\t\t} else {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(-uv.x, -uv.y, -1.0);\\n\\\n\t\t\t\t\t}\\n\\\n\t\t\t\t\tvec3 correctedDirection = vec3( tFlip * sampleDirection.x, sampleDirection.yz );\\n\\\n\t\t\t\t\tmat3 vecSpace = matrixFromVector( normalize( correctedDirection ) );\\n\\\n\t\t\t\t\tvec3 rgbColor = vec3(0.0);\\n\\\n\t\t\t\t\tconst int NumSamples = SAMPLES_PER_LEVEL;\\n\\\n\t\t\t\t\tvec3 vect;\\n\\\n\t\t\t\t\tfloat weight = 0.0;\\n\\\n\t\t\t\t\tfor( int i = 0; i < NumSamples; i ++ ) {\\n\\\n\t\t\t\t\t\tfloat sini = sin(float(i));\\n\\\n\t\t\t\t\t\tfloat cosi = cos(float(i));\\n\\\n\t\t\t\t\t\tfloat r = rand(vec2(sini, cosi));\\n\\\n\t\t\t\t\t\tvect = ImportanceSampleGGX(vec2(float(i) / float(NumSamples), r), vecSpace, roughness);\\n\\\n\t\t\t\t\t\tfloat dotProd = dot(vect, normalize(sampleDirection));\\n\\\n\t\t\t\t\t\tweight += dotProd;\\n\\\n\t\t\t\t\t\tvec3 color = envMapTexelToLinear(textureCube(envMap, vect)).rgb;\\n\\\n\t\t\t\t\t\trgbColor.rgb += color;\\n\\\n\t\t\t\t\t}\\n\\\n\t\t\t\t\trgbColor /= float(NumSamples);\\n\\\n\t\t\t\t\t//rgbColor = testColorMap( roughness ).rgb;\\n\\\n\t\t\t\t\tgl_FragColor = linearToOutputTexel( vec4( rgbColor, 1.0 ) );\\n\\\n\t\t\t\t}\",\n\n\t\t\tblending: THREE.NoBlending\n\n\t\t} );\n\n\t\tshaderMaterial.type = 'PMREMGenerator';\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\treturn PMREMGenerator;\n\n} )();\n","/**\n * @author Prashant Sharma / spidersharma03\n * @author Ben Houston / bhouston, https://clara.io\n *\n * This class takes the cube lods(corresponding to different roughness values), and creates a single cubeUV\n * Texture. The format for a given roughness set of faces is simply::\n * +X+Y+Z\n * -X-Y-Z\n * For every roughness a mip map chain is also saved, which is essential to remove the texture artifacts due to\n * minification.\n * Right now for every face a PlaneMesh is drawn, which leads to a lot of geometry draw calls, but can be replaced\n * later by drawing a single buffer and by sending the appropriate faceIndex via vertex attributes.\n * The arrangement of the faces is fixed, as assuming this arrangement, the sampling function has been written.\n */\n\nTHREE.PMREMCubeUVPacker = ( function () {\n\n\tvar camera = new THREE.OrthographicCamera();\n\tvar scene = new THREE.Scene();\n\tvar shader = getShader();\n\n\tvar PMREMCubeUVPacker = function ( cubeTextureLods ) {\n\n\t\tthis.cubeLods = cubeTextureLods;\n\t\tvar size = cubeTextureLods[ 0 ].width * 4;\n\n\t\tvar sourceTexture = cubeTextureLods[ 0 ].texture;\n\t\tvar params = {\n\t\t\tformat: sourceTexture.format,\n\t\t\tmagFilter: sourceTexture.magFilter,\n\t\t\tminFilter: sourceTexture.minFilter,\n\t\t\ttype: sourceTexture.type,\n\t\t\tgenerateMipmaps: sourceTexture.generateMipmaps,\n\t\t\tanisotropy: sourceTexture.anisotropy,\n\t\t\tencoding: ( sourceTexture.encoding === THREE.RGBEEncoding ) ? THREE.RGBM16Encoding : sourceTexture.encoding\n\t\t};\n\n\t\tif ( params.encoding === THREE.RGBM16Encoding ) {\n\n\t\t\tparams.magFilter = THREE.LinearFilter;\n\t\t\tparams.minFilter = THREE.LinearFilter;\n\n\t\t}\n\n\t\tthis.CubeUVRenderTarget = new THREE.WebGLRenderTarget( size, size, params );\n\t\tthis.CubeUVRenderTarget.texture.name = \"PMREMCubeUVPacker.cubeUv\";\n\t\tthis.CubeUVRenderTarget.texture.mapping = THREE.CubeUVReflectionMapping;\n\n\t\tthis.objects = [];\n\n\t\tvar geometry = new THREE.PlaneBufferGeometry( 1, 1 );\n\n\t\tvar faceOffsets = [];\n\t\tfaceOffsets.push( new THREE.Vector2( 0, 0 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 1, 0 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 2, 0 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 0, 1 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 1, 1 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 2, 1 ) );\n\n\t\tvar textureResolution = size;\n\t\tsize = cubeTextureLods[ 0 ].width;\n\n\t\tvar offset2 = 0;\n\t\tvar c = 4.0;\n\t\tthis.numLods = Math.log( cubeTextureLods[ 0 ].width ) / Math.log( 2 ) - 2; // IE11 doesn't support Math.log2\n\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\tvar offset1 = ( textureResolution - textureResolution / c ) * 0.5;\n\t\t\tif ( size > 16 ) c *= 2;\n\t\t\tvar nMips = size > 16 ? 6 : 1;\n\t\t\tvar mipOffsetX = 0;\n\t\t\tvar mipOffsetY = 0;\n\t\t\tvar mipSize = size;\n\n\t\t\tfor ( var j = 0; j < nMips; j ++ ) {\n\n\t\t\t\t// Mip Maps\n\t\t\t\tfor ( var k = 0; k < 6; k ++ ) {\n\n\t\t\t\t\t// 6 Cube Faces\n\t\t\t\t\tvar material = shader.clone();\n\t\t\t\t\tmaterial.uniforms[ 'envMap' ].value = this.cubeLods[ i ].texture;\n\t\t\t\t\tmaterial.envMap = this.cubeLods[ i ].texture;\n\t\t\t\t\tmaterial.uniforms[ 'faceIndex' ].value = k;\n\t\t\t\t\tmaterial.uniforms[ 'mapSize' ].value = mipSize;\n\n\t\t\t\t\tvar planeMesh = new THREE.Mesh( geometry, material );\n\t\t\t\t\tplaneMesh.position.x = faceOffsets[ k ].x * mipSize - offset1 + mipOffsetX;\n\t\t\t\t\tplaneMesh.position.y = faceOffsets[ k ].y * mipSize - offset1 + offset2 + mipOffsetY;\n\t\t\t\t\tplaneMesh.material.side = THREE.BackSide;\n\t\t\t\t\tplaneMesh.scale.setScalar( mipSize );\n\t\t\t\t\tthis.objects.push( planeMesh );\n\n\t\t\t\t}\n\t\t\t\tmipOffsetY += 1.75 * mipSize;\n\t\t\t\tmipOffsetX += 1.25 * mipSize;\n\t\t\t\tmipSize /= 2;\n\n\t\t\t}\n\t\t\toffset2 += 2 * size;\n\t\t\tif ( size > 16 ) size /= 2;\n\n\t\t}\n\n\t};\n\n\tPMREMCubeUVPacker.prototype = {\n\n\t\tconstructor: PMREMCubeUVPacker,\n\n\t\tupdate: function ( renderer ) {\n\n\t\t\tvar size = this.cubeLods[ 0 ].width * 4;\n\t\t\t// top and bottom are swapped for some reason?\n\t\t\tcamera.left = - size * 0.5;\n\t\t\tcamera.right = size * 0.5;\n\t\t\tcamera.top = - size * 0.5;\n\t\t\tcamera.bottom = size * 0.5;\n\t\t\tcamera.near = 0;\n\t\t\tcamera.far = 1;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\tfor ( var i = 0; i < this.objects.length; i ++ ) {\n\n\t\t\t\tscene.add( this.objects[ i ] );\n\n\t\t\t}\n\n\t\t\tvar gammaInput = renderer.gammaInput;\n\t\t\tvar gammaOutput = renderer.gammaOutput;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar toneMappingExposure = renderer.toneMappingExposure;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.gammaInput = false;\n\t\t\trenderer.gammaOutput = false;\n\t\t\trenderer.toneMapping = THREE.LinearToneMapping;\n\t\t\trenderer.toneMappingExposure = 1.0;\n\t\t\trenderer.setRenderTarget( this.CubeUVRenderTarget );\n\t\t\trenderer.render( scene, camera );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.toneMappingExposure = toneMappingExposure;\n\t\t\trenderer.gammaInput = gammaInput;\n\t\t\trenderer.gammaOutput = gammaOutput;\n\n\t\t\tfor ( var i = 0; i < this.objects.length; i ++ ) {\n\n\t\t\t\tscene.remove( this.objects[ i ] );\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tfor ( var i = 0, l = this.objects.length; i < l; i ++ ) {\n\n\t\t\t\tthis.objects[ i ].material.dispose();\n\n\t\t\t}\n\n\t\t\tthis.objects[ 0 ].geometry.dispose();\n\n\t\t}\n\n\t};\n\n\tfunction getShader() {\n\n\t\tvar shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: {\n\t\t\t\t\"faceIndex\": { value: 0 },\n\t\t\t\t\"mapSize\": { value: 0 },\n\t\t\t\t\"envMap\": { value: null },\n\t\t\t\t\"testColor\": { value: new THREE.Vector3( 1, 1, 1 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n        \"precision highp float;\\\n        varying vec2 vUv;\\\n        void main() {\\\n          vUv = uv;\\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\n        }\",\n\n\t\t\tfragmentShader:\n        \"precision highp float;\\\n        varying vec2 vUv;\\\n        uniform samplerCube envMap;\\\n        uniform float mapSize;\\\n        uniform vec3 testColor;\\\n        uniform int faceIndex;\\\n        \\\n        void main() {\\\n          vec3 sampleDirection;\\\n          vec2 uv = vUv;\\\n          uv = uv * 2.0 - 1.0;\\\n          uv.y *= -1.0;\\\n          if(faceIndex == 0) {\\\n            sampleDirection = normalize(vec3(1.0, uv.y, -uv.x));\\\n          } else if(faceIndex == 1) {\\\n            sampleDirection = normalize(vec3(uv.x, 1.0, uv.y));\\\n          } else if(faceIndex == 2) {\\\n            sampleDirection = normalize(vec3(uv.x, uv.y, 1.0));\\\n          } else if(faceIndex == 3) {\\\n            sampleDirection = normalize(vec3(-1.0, uv.y, uv.x));\\\n          } else if(faceIndex == 4) {\\\n            sampleDirection = normalize(vec3(uv.x, -1.0, -uv.y));\\\n          } else {\\\n            sampleDirection = normalize(vec3(-uv.x, uv.y, -1.0));\\\n          }\\\n          vec4 color = envMapTexelToLinear( textureCube( envMap, sampleDirection ) );\\\n          gl_FragColor = linearToOutputTexel( color );\\\n        }\",\n\n\t\t\tblending: THREE.NoBlending\n\n\t\t} );\n\n\t\tshaderMaterial.type = 'PMREMCubeUVPacker';\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\n\treturn PMREMCubeUVPacker;\n\n} )();\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t// console.log( 'handleKeyDown' );\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '106dev';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar ACESFilmicToneMapping = 5;\n\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar _canvas;\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.image = {};\n\tthis.texture.image.width = width;\n\tthis.texture.image.height = height;\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Matt DesLauriers / @mattdesl\n */\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.samples = 4;\n\n}\n\nWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultisampleRenderTarget,\n\n\tisWebGLMultisampleRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\nWebGLRenderTargetCube.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\tthis.texture.type = texture.type;\n\tthis.texture.format = texture.format;\n\tthis.texture.encoding = texture.encoding;\n\n\tvar scene = new THREE.Scene();\n\n\tvar shader = {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader:\n\n\t\t\t`\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t\t`,\n\n\t\tfragmentShader:\n\n\t\t\t`\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#define RECIPROCAL_PI 0.31830988618\n\t\t\t#define RECIPROCAL_PI2 0.15915494\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV;\n\n\t\t\t\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\t\t\t\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t\t`\n\t};\n\n\tvar material = new THREE.ShaderMaterial( {\n\n\t\ttype: 'CubemapFromEquirect',\n\n\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\tside: THREE.BackSide,\n\t\tblending: THREE.NoBlending\n\n\t} );\n\n\tmaterial.uniforms.tEquirect.value = texture;\n\n\tvar mesh = new THREE.Mesh( new THREE.BoxBufferGeometry( 5, 5, 5 ), material );\n\n\tscene.add( mesh );\n\n\tvar camera = new THREE.CubeCamera( 1, 10, 1 );\n\n\tcamera.renderTarget = this;\n\tcamera.renderTarget.texture.name = 'CubeCameraTexture';\n\n\tcamera.update( renderer, scene );\n\n\tmesh.geometry.dispose();\n\tmesh.material.dispose();\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( x, y, z ) {\n\n\t\tvar te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#endif\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearCoatInv = 1.0 - clearCoatDHR;\\n\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec3 singleScattering = vec3( 0.0 );\\n\\t\\tvec3 multiScattering = vec3( 0.0 );\\n\\t\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\t\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\\n\\t\\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\\n\\t\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n\\t#else\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\t#ifdef USE_TANGENT\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\t\\tnormal = normalize( vTBN * mapN );\\n\\t\\t#else\\n\\t\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t\\t#endif\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tvar dst = {};\n\n\tfor ( var u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( var p in src[ u ] ) {\n\n\t\t\tvar property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tvar merged = {};\n\n\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( var p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tvar dst = [];\n\n\tfor ( var u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\n// Legacy\n\nvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function () {\n\n\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( hslA );\n\t\t\tcolor.getHSL( hslB );\n\n\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? 35048 : 35044;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, 35044 );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tvar q1 = new Quaternion();\n\t\tvar m1 = new Matrix4();\n\t\tvar target = new Vector3();\n\t\tvar position = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\ttarget.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tattach: function () {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tvar m = new Matrix4();\n\n\t\treturn function attach( object ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tm.getInverse( this.matrixWorld );\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t\tm.multiply( object.parent.matrixWorld );\n\n\t\t\t}\n\n\t\t\tobject.applyMatrix( m );\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0; i < positions.length; i += 3 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis._array = array;\n\tthis._itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis._normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\tthis.versionVAO = 0;\n\n}\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tneedsUpdate: {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this._array;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._array = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\titemSize: {\n\n\t\tget: function () {\n\n\t\t\treturn this._itemSize;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._itemSize = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\tnormalized: {\n\n\t\tget: function () {\n\n\t\t\treturn this._normalized;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._normalized = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tvar tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t// Tangent is vec4, but the '.w' component is a sign value (+1/-1).\n\t\t\tnormalMatrix.applyToBufferAttribute( tangent );\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tbox.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar boxMorphTargets = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tboxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.min );\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( position, i );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvector.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.addAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = this.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar morphArray = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tvar morphAttributes = {};\n\t\tvar hasMorphAttributes = false;\n\n\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) data.data.morphAttributes = morphAttributes;\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments, flipY ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tflipY\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments, flipY = true ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tflipY: flipY\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push(\n\t\t\t\tflipY ?\n\t\t\t\t\t1 - ( iy / gridY ) :\n\t\t\t\t\tiy / gridY\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexTangents = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\tthis.uniformsGroups = [];\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tvar extensions = {};\n\n\tfor ( var key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}(),\n\n\tgetUV: function () {\n\n\t\tvar barycoord = new Vector3();\n\n\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tisFrontFacing: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function isFrontFacing( a, b, c, direction ) {\n\n\t\t\tv0.subVectors( c, b );\n\t\t\tv1.subVectors( a, b );\n\n\t\t\t// strictly front facing\n\t\t\treturn ( v0.cross( v1 ).dot( direction ) < 0 ) ? true : false;\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tisFrontFacing: function ( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar morphA = new Vector3();\n\t\tvar morphB = new Vector3();\n\t\tvar morphC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t\tmorphA.set( 0, 0, 0 );\n\t\t\t\tmorphB.set( 0, 0, 0 );\n\t\t\t\tmorphC.set( 0, 0, 0 );\n\n\t\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\ttempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t\ttempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t\ttempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\t\tmorphA.addScaledVector( tempA.sub( vA ), influence );\n\t\t\t\t\tmorphB.addScaledVector( tempB.sub( vB ), influence );\n\t\t\t\t\tmorphC.addScaledVector( tempC.sub( vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t\tvA.add( morphA );\n\t\t\t\tvB.add( morphB );\n\t\t\t\tvC.add( morphC );\n\n\t\t\t}\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tif ( this.drawMode === TriangleStripDrawMode ) {\n\n\t\t\t\t\t\t\tvar order = 0;\n\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il - 2; i ++ ) {\n\n\t\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\t\tb = i + 1 + order;\n\t\t\t\t\t\t\t\tc = i + 2 - order;\n\n\t\t\t\t\t\t\t\torder = ( order + 1 ) % 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\t// Store the current background texture and its `version`\n\t// so we can recompile the material accordingly.\n\tvar currentBackground = null;\n\tvar currentBackgroundVersion = 0;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tvar vr = renderer.vr;\n\t\tvar session = vr.getSession && vr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.tCube.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\n\t\t\tboxMesh.material.uniforms.tCube.value = texture;\n\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t     currentBackgroundVersion !== texture.version ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\t   currentBackgroundVersion !== background.version ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Takahiro / https://github.com/takahirox\n */\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\n\tvar extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tvar vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tvar bindingStates = {};\n\n\tvar defaultState = createBindingState( null );\n\tvar currentState = defaultState;\n\n\tfunction setup( material, program, geometry, index ) {\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tvar state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry );\n\n\t\t} else {\n\n\t\t\tvar wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tvar wireframe = ( material.wireframe === true );\n\n\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tvar stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tvar state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tvar newAttributes = [];\n\t\tvar enabledAttributes = [];\n\t\tvar attributeDivisors = [];\n\n\t\tfor ( var i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {}\n\n\t\t};\n\n\t}\n\n\t// If we sacrifice some BufferGeometry/Attribute API flexibility\n\t// needsUpdate() and saveCache() can be much simpler. See #16287\n\n\tfunction needsUpdate( geometry ) {\n\n\t\tvar cachedAttributes = currentState.attributes;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( Object.keys( cachedAttributes ).length !== Object.keys( geometryAttributes ).length ) return true;\n\n\t\tfor ( var key in geometryAttributes ) {\n\n\t\t\tvar cachedAttribute = cachedAttributes[ key ];\n\t\t\tvar geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.version !== geometryAttribute.versionVAO ) return true;\n\n\t\t\tif ( cachedAttribute.data.buffer !== geometryAttribute.data ) return true;\n\n\t\t\tif ( geometryAttribute.data &&\n\t\t\t\tcachedAttribute.data.version !== geometryAttribute.data.versionVAO ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry ) {\n\n\t\tvar cache = {};\n\t\tvar attributes = geometry.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar data = {};\n\t\t\tdata.attribute = attribute;\n\t\t\tdata.version = attribute.versionVAO;\n\n\t\t\tdata.data = {};\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data.buffer = attribute.data;\n\t\t\t\tdata.data.version = attribute.data.versionVAO;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tvar newAttributes = currentState.newAttributes;\n\n\t\tfor ( var i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tvar newAttributes = currentState.newAttributes;\n\t\tvar enabledAttributes = currentState.enabledAttributes;\n\t\tvar attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tvar newAttributes = currentState.newAttributes;\n\t\tvar enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( var i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( var programId in programMap ) {\n\n\t\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( var programId in programMap ) {\n\n\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tvar stateMap = programMap[ program.id ];\n\n\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\tvar multiview = isWebGL2 && ( !! extensions.get( 'WEBGL_multiview' ) || !! extensions.get( 'OVR_multiview' ) );\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples,\n\n\t\tmultiview: multiview\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tvar workInfluences = [];\n\n\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = workInfluences[ i ];\n\t\t\tvar index = influence[ 0 ];\n\t\t\tvar value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.removeAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture2dArray = new DataTexture2DArray();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b5f: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\t\tcase 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1Array; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6Array; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tvar status = gl.getShaderParameter( shader, 35713 );\n\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tvar source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures, bindingStates ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\trenderer.vr.multiview ? [ // For VR multiview\n\n\t\t\t\t'uniform mat4 modelViewMatrix2;',\n\t\t\t\t'uniform mat4 projectionMatrix2;',\n\t\t\t\t'uniform mat4 viewMatrix2;',\n\t\t\t\t'uniform mat3 normalMatrix2;',\n\t\t\t\t'uniform vec3 cameraPosition2;',\n\n\t\t\t\t'#define modelViewMatrix (gl_ViewID_OVR==0u?modelViewMatrix:modelViewMatrix2)',\n\t\t\t\t'#define projectionMatrix (gl_ViewID_OVR==0u?projectionMatrix:projectionMatrix2)',\n\t\t\t\t'#define viewMatrix (gl_ViewID_OVR==0u?viewMatrix:viewMatrix2)',\n\t\t\t\t'#define normalMatrix (gl_ViewID_OVR==0u?normalMatrix:normalMatrix2)',\n\t\t\t\t'#define cameraPosition (gl_ViewID_OVR==0u?cameraPosition:cameraPosition2)'\n\n\t\t\t].join( '\\n' ) : '',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\trenderer.vr.multiview ? [ // For VR multiview\n\n\t\t\t\t'uniform vec3 cameraPosition2;',\n\n\t\t\t\t'#define cameraPosition (gl_ViewID_OVR==0u?cameraPosition:cameraPosition2)'\n\n\t\t\t].join( '\\n' ) : '',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tconst v300es = \"#version 300 es\\n\";\n\t\t\tif ( isGLSL3ShaderMaterial ) {\n\n\t\t\t\tprefixVertex = v300es + prefixVertex;\n\t\t\t\tprefixFragment = v300es + prefixFragment;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// GLSL 3.0 conversion\n\t\t\tprefixVertex = [\n\t\t\t\t'#version 300 es\\n',\n\n\t\t\t\trenderer.vr.multiview ? [ // For VR multiview\n\n\t\t\t\t\t'#extension GL_OVR_multiview : require',\n\t\t\t\t\t'layout(num_views = 2) in;'\n\n\t\t\t\t].join( '\\n' ) : '',\n\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define varying in',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t}\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, textures );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities, textures, bindingStates ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\tarray.push( renderer.gammaFactor );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tvar defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete lists[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar cameras = lists[ scene.id ];\n\t\tvar list;\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ scene.id ] = {};\n\t\t\tlists[ scene.id ][ camera.id ] = list;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tlist = cameras[ camera.id ];\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tcameras[ camera.id ] = list;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar nextVersion = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1,\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( var i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tvar hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.shadowsLength !== shadows.length ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\t\t\thash.shadowsLength = shadows.length;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete renderStates[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\tvar activeMipMapLevel = _renderer.getActiveMipMapLevel();\n\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipMapLevel );\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar uboBindings = new WeakMap();\n\tvar uboProgamMap = new WeakMap();\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( 34467 );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tvar mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tvar blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tvar mapping = uboProgamMap.get( program );\n\t\tvar blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tvar useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined';\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tvar scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tvar floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tvar internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tvar textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tvar textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture.image[ 0 ] && texture.image[ 0 ].isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tvar extension;\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, utils.convert( texture.wrapR ) );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\n\t\tvar supportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t\t// if ( window.ImageBitmap && texture.image instanceof ImageBitmap ) {\n\n\t\t\t// \tconsole.info( \"upload texture\", \"ImageBitmap\", texture.id );\n\n\t\t\t// } else if ( texture.image instanceof HTMLImageElement ) {\n\n\t\t\t// \tconsole.info( \"upload texture\", \"HTMLImageElement\", texture.id, texture.image.src );\n\n\t\t\t// }\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( capabilities.isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( capabilities.maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tvar warnedTexture2D = false;\n\tvar warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tvar buffers = {};\n\tvar updateList = {};\n\n\tvar allocatedBindingPoints = [];\n\tvar maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tstate.uniformBlockBinding( uniformsGroup, program );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tvar buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tstate.updateUBOMapping( uniformsGroup, program );\n\n\t\t// update UBO once per frame\n\n\t\tvar frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tvar bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tvar buffer = gl.createBuffer();\n\t\tvar size = uniformsGroup.isRawUniformsGroup ? uniformsGroup.data.byteLength : uniformsGroup.__size;\n\t\tvar usage = uniformsGroup.dynamic ? 35048 : 35044;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( var i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tvar buffer = buffers[ uniformsGroup.id ];\n\t\tvar uniforms = uniformsGroup.uniforms;\n\t\tvar cache = uniformsGroup.__cache;\n\n\t\tif ( uniformsGroup.isRawUniformsGroup ) {\n\n\t\t\tif ( uniformsGroup.autoUpdate || uniformsGroup.needsUpdate ) {\n\n\t\t\t\tgl.bindBuffer( 35345, buffer );\n\n\t\t\t\tgl.bufferSubData( 35345, 0, uniformsGroup.data );\n\n\t\t\t\tgl.bindBuffer( 35345, null );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( var i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tvar uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tvar value = uniform.value;\n\t\t\t\tvar offset = uniform.__offset;\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( uniform.value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = uniform.value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = uniform.value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = uniform.value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = uniform.value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = uniform.value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = uniform.value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = uniform.value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = uniform.value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = uniform.value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tvar value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ index ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar cachedObject = cache[ index ];\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tif ( uniformsGroup.isRawUniformsGroup ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar uniforms = uniformsGroup.uniforms;\n\n\t\tvar offset = 0; // global buffer offset in bytes\n\t\tvar chunkSize = 16; // size of a chunk in bytes\n\t\tvar chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( var i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tvar uniform = uniforms[ i ];\n\t\t\tvar info = getUniformSize( uniform );\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tvar remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - info.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += info.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( uniform ) {\n\n\t\tvar value = uniform.value;\n\n\t\tvar info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tvar uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tvar index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( var id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return 10497;\n\t\tif ( p === ClampToEdgeWrapping ) return 33071;\n\t\tif ( p === MirroredRepeatWrapping ) return 33648;\n\n\t\tif ( p === NearestFilter ) return 9728;\n\t\tif ( p === NearestMipMapNearestFilter ) return 9984;\n\t\tif ( p === NearestMipMapLinearFilter ) return 9986;\n\n\t\tif ( p === LinearFilter ) return 9729;\n\t\tif ( p === LinearMipMapNearestFilter ) return 9985;\n\t\tif ( p === LinearMipMapLinearFilter ) return 9987;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === AddEquation ) return 32774;\n\t\tif ( p === SubtractEquation ) return 32778;\n\t\tif ( p === ReverseSubtractEquation ) return 32779;\n\n\t\tif ( p === ZeroFactor ) return 0;\n\t\tif ( p === OneFactor ) return 1;\n\t\tif ( p === SrcColorFactor ) return 768;\n\t\tif ( p === OneMinusSrcColorFactor ) return 769;\n\t\tif ( p === SrcAlphaFactor ) return 770;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\n\t\tif ( p === DstAlphaFactor ) return 772;\n\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\n\n\t\tif ( p === DstColorFactor ) return 774;\n\t\tif ( p === OneMinusDstColorFactor ) return 775;\n\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return 32775;\n\t\t\t\tif ( p === MaxEquation ) return 32776;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author jsantell / https://www.jsantell.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar cameraLPos = new Vector3();\nvar cameraRPos = new Vector3();\n\n/**\n * Assumes 2 cameras that are parallel and share an X-axis, and that\n * the cameras' projection and world matrices have already been set.\n * And that near and far planes are identical for both cameras.\n * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n */\nfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\tvar projL = cameraL.projectionMatrix.elements;\n\tvar projR = cameraR.projectionMatrix.elements;\n\n\t// VR systems will have identical far and near planes, and\n\t// most likely identical top and bottom frustum extents.\n\t// Use the left camera for these values.\n\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\tvar left = near * leftFov;\n\tvar right = near * rightFov;\n\n\t// Calculate the new camera's position offset from the\n\t// left camera. xOffset should be roughly half `ipd`.\n\tvar zOffset = ipd / ( - leftFov + rightFov );\n\tvar xOffset = zOffset * - leftFov;\n\n\t// TODO: Better way to apply this offset?\n\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\tcamera.translateX( xOffset );\n\tcamera.translateZ( zOffset );\n\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t// Find the union of the frustum values of the cameras and scale\n\t// the values so that the near plane's position does not change in world space,\n\t// although must now be relative to the new union camera.\n\tvar near2 = near + zOffset;\n\tvar far2 = far + zOffset;\n\tvar left2 = left - xOffset;\n\tvar right2 = right + ( ipd - xOffset );\n\tvar top2 = topFov * far / far2 * near2;\n\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar renderWidth, renderHeight;\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar referenceSpaceType = 'local-floor';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.viewport = new Vector4();\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.viewport = new Vector4();\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t// Multiview with opaque framebuffer approach\n\n\tthis.multiview = false;\n\n\tvar multiviewAvailability = null;\n\n\tfunction checkMultiviewAvailability() {\n\n\t\tif ( ! device.getViews ) return false;\n\n\t\tvar views = device.getViews();\n\t\treturn !! views && views.length === 1 && !! views[ 0 ].getAttributes().multiview;\n\n\t}\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize = new Vector2(), currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\trenderWidth = 2 * eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\trenderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\trenderer.getSize( currentSize );\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth, renderHeight, 1 );\n\n\t\t\tcameraL.viewport.set( 0, 0, renderWidth / 2, renderHeight );\n\t\t\tcameraR.viewport.set( renderWidth / 2, 0, renderWidth / 2, renderHeight );\n\n\t\t\tmultiviewAvailability = checkMultiviewAvailability();\n\n\t\t\tif ( multiviewAvailability ) {\n\n\t\t\t\trenderer.setFramebuffer( device.getViews()[ 0 ].framebuffer );\n\t\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() );\n\n\t\t\t}\n\n\t\t\trenderer.animation.stop();\n\t\t\tanimation.start();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t\tif ( multiviewAvailability ) {\n\n\t\t\t\t\trenderer.setFramebuffer( null );\n\t\t\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\t\t\trenderer.animation.start();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t// Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t// Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] === undefined ) triggers[ i ] = false;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateViewportFromBounds( viewport, bounds ) {\n\n\t\tif ( bounds !== null && bounds.length === 4 ) {\n\n\t\t\tviewport.set( bounds[ 0 ] * renderWidth, bounds[ 1 ] * renderHeight, bounds[ 2 ] * renderWidth, bounds[ 3 ] * renderHeight );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = referenceSpaceType === 'local-floor' ? 1.6 : 0;\n\n\t\tif ( isPresenting() === false ) {\n\n\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\tcamera.rotation.set( 0, 0, 0 );\n\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tupdateViewportFromBounds( cameraL.viewport, layer.leftBounds );\n\t\t\tupdateViewportFromBounds( cameraR.viewport, layer.rightBounds );\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t\tif ( isPresenting() ) animation.start();\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n\t// DEPRECATED\n\n\tthis.setFrameOfReferenceType = function () {\n\n\t\tconsole.warn( 'THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t};\n\n}\n\nObject.assign( WebVRManager.prototype, EventDispatcher.prototype );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar gl = renderer.context;\n\n\tvar session = null;\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar referenceSpace = null;\n\tvar referenceSpaceType = 'local-floor';\n\n\tvar pose = null;\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && referenceSpace !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t// Multiview with opaque framebuffer approach\n\n\tthis.multiview = false;\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tif ( inputSources[ i ] === event.inputSource ) {\n\n\t\t\t\tcontrollers[ i ].dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\t\trenderer.animation.start();\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tfunction onRequestReferenceSpace( value ) {\n\n\t\treferenceSpace = value;\n\n\t\tanimation.setContext( session );\n\t\tanimation.start();\n\n\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.updateRenderState( { baseLayer: new XRWebGLLayer( session, gl, { framebufferScaleFactor: framebufferScaleFactor, multiview: this.multiview } ) } );\n\n\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t//\n\n\t\t\tinputSources = session.inputSources;\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.inputSources;\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tvar controller = controllers[ i ];\n\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\t\t\tvar object = poseTarget || camera;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\t\t\tobject.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.getCameraPose = function ( ) {\n\n\t\treturn pose;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar views = pose.views;\n\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\t\t\t\tvar viewMatrix = view.transform.inverse.matrix;\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tcontroller.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new Matrix4();\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getDevice() has been deprecated.' );\n\n\t};\n\n\tthis.setDevice = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: setDevice() has been deprecated.' );\n\n\t};\n\n\tthis.setFrameOfReferenceType = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false,\n\t\t_forceWebVR = parameters.forceWebVR !== undefined ? parameters.forceWebVR : false;\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentActiveCubeFace = 0,\n\t\t_currentActiveMipmapLevel = 0,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n\t\t\txrCompatible: true\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates, uniformsGroups;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils, bindingStates;\n\n\tvar videoTextures;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'OES_vertex_array_object' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, textures, bindingStates );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\tvideoTextures = [];\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( ! _forceWebVR && typeof navigator !== 'undefined' && 'xr' in navigator && 'supportsSession' in navigator.xr ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// For right eye in VR multiview\n\n\tvar multiview = {\n\t\tinProgress: false,\n\t\tmodelViewMatrix: new Matrix4(),\n\t\tnormalMatrix: new Matrix3(),\n\t\tprojectionMatrix: new Matrix4(),\n\t\tcamera: null\n\t};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio );\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( material, program, geometry, index );\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tthis.compileAndUploadMaterials = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t}\n\n\t\t\tif ( object.castShadow ) {\n\n\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tstate.setMaterial( object.material[ i ] );\n\t\t\t\t\t\tsetProgram( camera, scene.fog, object.material[ i ], object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.setMaterial( object.material );\n\t\t\t\t\tsetProgram( camera, scene.fog, object.material, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\tthis.animation = animation;\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tvar renderTarget, forceClear;\n\n\t\t/*if ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}*/\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tvideoTextures.length = 0;\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t// Pre-upload all video textures on Oculus Browser\n\t\tif ( parameters.preuploadVideos ) {\n\n\t\t\tfor ( var i = 0, l = videoTextures.length; i < l; i ++ ) {\n\n\t\t\t\ttextures.setTexture2D( videoTextures[ i ], 0 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tif ( parameters.preuploadVideos && material.map && material.map.isVideoTexture ) {\n\n\t\t\t\t\t\t\tvideoTextures.push( material.map );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t// Multiview with opaque framebuffer approach\n\n\t\t\t\tif ( vr.multiview && ! capabilities.multiview ) {\n\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: Use WebGL 2.0 and WEBGL/OVR_multiview extension support browser for VR multiview with opaque framebuffer approach.' );\n\t\t\t\t\tvr.multiview = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( vr.multiview ) {\n\n\t\t\t\t\tmultiview.camera = cameras[ 1 ];\n\n\t\t\t\t\tmultiview.inProgress = true;\n\n\t\t\t\t\tif ( 'getSession' in vr ) { // WebXR\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( cameras[ 0 ].viewport ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar viewport = vr.getDevice().getViews()[ 0 ].getViewport();\n\t\t\t\t\t\tstate.viewport( _currentViewport.set( viewport.x, viewport.y, viewport.width, viewport.height ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderState.setupLights( multiview.camera );\n\t\t\t\t\trenderObject( object, scene, cameras[ 0 ], geometry, material, group );\n\n\t\t\t\t\tmultiview.inProgress = false;\n\t\t\t\t\tmultiview.camera = null;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( multiview.inProgress ) {\n\n\t\t\tmultiview.modelViewMatrix.multiplyMatrices( multiview.camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tmultiview.normalMatrix.getNormalMatrix( multiview.modelViewMatrix );\n\n\t\t}\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsStateVersion = lights.state.version;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tuniformsGroups: material.uniformsGroups,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\ttextures.resetTextureUnits();\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsStateVersion !== lights.state.version ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( multiview.inProgress ) p_uniforms.setValue( _gl, 'projectionMatrix2', multiview.camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( multiview.inProgress ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition2;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( multiview.camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tif ( multiview.inProgress ) p_uniforms.setValue( _gl, 'viewMatrix2', multiview.camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value.copy( material.color );\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\tif ( multiview.inProgress ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix2', multiview.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix2', multiview.normalMatrix );\n\n\t\t}\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tvar groups = materialProperties.shader.uniformsGroups;\n\t\t\tvar webglProgram = materialProperties.program.program;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, webglProgram );\n\t\t\t\t\tuniformsGroups.bind( group, webglProgram );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value ) _gl.bindFramebuffer( 36160, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipMapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipMapLevel ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipMapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipMapLevel || 0 );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n\t/*\n\tif ( typeof __THREE_DEVTOOLS__ !== undefined ) {\n\t\t__THREE_DEVTOOLS__.dispatchEvent( { type: 'renderer', value: this } );\n\t}\n\t*/\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nObject.assign( FogExp2.prototype, {\n\n\tisFogExp2: true,\n\n\tclone: function () {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nObject.assign( Fog.prototype, {\n\n\tisFog: true,\n\n\tclone: function () {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n\t/*\n\tif ( typeof __THREE_DEVTOOLS__ !== undefined ) {\n\t\t__THREE_DEVTOOLS__.dispatchEvent( { type: 'scene', value: this } );\n\t}\n\t*/\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tisScene: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis._array = array;\n\tthis._stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\tthis.versionVAO = 0;\n\n}\n\nObject.defineProperties( InterleavedBuffer.prototype, {\n\n\tneedsUpdate: {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this._array;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._array = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\tstride: {\n\n\t\tget: function () {\n\n\t\t\treturn this._stride;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._stride = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis._data = interleavedBuffer;\n\tthis._itemSize = itemSize;\n\tthis._offset = offset;\n\n\tthis._normalized = normalized === true;\n\n\tthis.versionVAO = 0;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t},\n\n\tdata: {\n\n\t\tget: function () {\n\n\t\t\treturn this._data;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._data = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\titemSize: {\n\n\t\tget: function () {\n\n\t\t\treturn this._itemSize;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._itemSize = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\toffset: {\n\n\t\tget: function () {\n\n\t\t\treturn this._offset;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._offset = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\tnormalized: {\n\n\t\tget: function () {\n\n\t\t\treturn this._normalized;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._normalized = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t\tviewWorldMatrix.copy( raycaster._camera.matrixWorld );\n\t\t\tthis.modelViewMatrix.multiplyMatrices( raycaster._camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tif ( raycaster._camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t\tworldScale.multiplyScalar( - mvPosition.z );\n\n\t\t\t}\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\tuvA.set( 0, 0 );\n\t\t\tuvB.set( 1, 0 );\n\t\t\tuvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tisLOD: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar vector = new Vector4();\n\n\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\nTubeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tdata.path = this.parameters.path.toJSON();\n\n\treturn data;\n\n};\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\t\t\tbevelOffset = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize + bevelOffset;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\t// special case for the poles\n\n\t\tvar uOffset = 0;\n\n\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t}\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.copy( vertex ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t}\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n *  clearCoat: <float>\n *  clearCoatRoughness: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tvar TypedKeyframeTrack = this.constructor;\n\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tclone: function () {\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new AnimationClip( this.name, this.duration, tracks );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AnimationLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.maxInstancedCount = this.maxInstancedCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis._meshPerAttribute = meshPerAttribute || 1;\n\n\tthis.versionVAO = 0;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ()\t{\n\n\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nObject.defineProperties( InstancedBufferAttribute.prototype, {\n\n\tmeshPerAttribute: {\n\n\t\tget: function () {\n\n\t\t\treturn this._meshPerAttribute;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._meshPerAttribute = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\tvar bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.addAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.drawMode !== undefined ) object.setDrawMode( data.drawMode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t} else {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t}\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nfunction SphericalHarmonics3() {\n\n\tthis.coefficients = [];\n\n\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\tthis.coefficients.push( new Vector3() );\n\n\t}\n\n}\n\nObject.assign( SphericalHarmonics3.prototype, {\n\n\tisSphericalHarmonics3: true,\n\n\tset: function ( coefficients ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tzero: function () {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget = coeff[ 0 ] * 0.282095;\n\n\t\t// band 1\n\t\ttarget += coeff[ 1 ] * 0.488603 * y;\n\t\ttarget += coeff[ 2 ] * 0.488603 * z;\n\t\ttarget += coeff[ 3 ] * 0.488603 * x;\n\n\t\t// band 2\n\t\ttarget += coeff[ 4 ] * 1.092548 * ( x * y );\n\t\ttarget += coeff[ 5 ] * 1.092548 * ( y * z );\n\t\ttarget += coeff[ 6 ] * 0.315392 * ( 3.0 * z * z - 1.0 );\n\t\ttarget += coeff[ 7 ] * 1.092548 * ( x * z );\n\t\ttarget += coeff[ 8 ] * 0.546274 * ( x * x - y * y );\n\n\t\treturn target;\n\n\t},\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget = coeff[ 0 ] * 0.886227; // π * 0.282095\n\n\t\t// band 1\n\t\ttarget += coeff[ 1 ] * 2.0 * 0.511664 * y; // ( 2 * π / 3 ) * 0.488603\n\t\ttarget += coeff[ 2 ] * 2.0 * 0.511664 * z;\n\t\ttarget += coeff[ 3 ] * 2.0 * 0.511664 * x;\n\n\t\t// band 2\n\t\ttarget += coeff[ 4 ] * 2.0 * 0.429043 * x * y; // ( π / 4 ) * 1.092548\n\t\ttarget += coeff[ 5 ] * 2.0 * 0.429043 * y * z;\n\t\ttarget += coeff[ 6 ] * ( 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget += coeff[ 7 ] * 2.0 * 0.429043 * x * z;\n\t\ttarget += coeff[ 8 ] * 0.429043 * ( x * x - y * y ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t},\n\n\tadd: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tscale: function ( s ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( sh, alpha ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcopy: function ( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, i * 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function () {\n\n\t\tvar array = [];\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, i * 3 );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n} );\n\nObject.assign( SphericalHarmonics3, {\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * A LightProbe is a source of indirect-diffuse light\n */\n\nfunction LightProbe( sh, intensity ) {\n\n\tLight.call( this, undefined, intensity );\n\n\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n}\n\nLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: LightProbe,\n\n\tisLightProbe: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.sh.copy( source.sh );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( skyColor );\n\tvar color2 = new Color().set( groundColor );\n\n\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\tvar c0 = Math.sqrt( Math.PI );\n\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n}\n\nHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: HemisphereLightProbe,\n\n\tisHemisphereLightProbe: true,\n\n\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction AmbientLightProbe( color, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( color );\n\n\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n}\n\nAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: AmbientLightProbe,\n\n\tisAmbientLightProbe: true,\n\n\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar fov = 90, aspect = 1;\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\t\tvar clock = new Clock();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.detune = 0;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetDetune: function ( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetDetune: function () {\n\n\t\treturn this.detune;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.panningModel = 'HRTF';\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( orientation.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0; // threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices; // for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = []; // inside: string\n\tthis._parsedPaths = []; // inside: { we don't care, here }\n\tthis._bindings = []; // inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants; // bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null; // for the memory manager\n\tthis._byClipCacheIndex = null; // for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\tthis.paused = false; // true -> zero effective time scale\n\tthis.enabled = true; // false -> zero effective weight\n\n\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nvar id = 0;\n\nfunction UniformsGroup() {\n\n\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\tthis.name = '';\n\n\tthis.dynamic = false;\n\tthis.uniforms = [];\n\n}\n\nUniformsGroup.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: UniformsGroup,\n\n\tisUniformsGroup: true,\n\n\tadd: function ( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( uniform ) {\n\n\t\tvar index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t},\n\n\tsetName: function ( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.dynamic = source.dynamic;\n\n\t\tvar uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( var i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author robertlong / https://github.com/robertlong\n */\n\nfunction RawUniformsGroup( data ) {\n\n\tUniformsGroup.call( this );\n\n\tthis.data = data;\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n}\n\nRawUniformsGroup.prototype = Object.assign( Object.create( UniformsGroup.prototype ), {\n\n\tconstructor: RawUniformsGroup,\n\n\tisRawUniformsGroup: true,\n\n\tadd: function ( _uniform ) {\n\n\t\tconsole.warn( 'THREE.RawUniformsGroup: .add() is unimplemented. Modify .data manually instead.' );\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( _uniform ) {\n\n\t\tconsole.warn( 'THREE.RawUniformsGroup: .add() is unimplemented. Modify .data manually instead.' );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tUniformsGroup.prototype.copy.call( this );\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.data = source.data.slice( 0 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis._meshPerAttribute = meshPerAttribute || 1;\n\n\tthis.versionVAO = 0;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nObject.defineProperties( InstancedInterleavedBuffer.prototype, {\n\n\tmeshPerAttribute: {\n\n\t\tget: function () {\n\n\t\t\treturn this._meshPerAttribute;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._meshPerAttribute = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis._camera = camera;\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis._camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axiz.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n *\n *  This helper must be added as a child of the light\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tthis.type = 'RectAreaLightHelper';\n\n\tthis.light = light;\n\n\tthis.color = color; // optional hardwired color for the helper\n\n\tvar positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tLine.call( this, geometry, material );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Line.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.update = function () {\n\n\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t// prevent hue shift\n\t\tvar c = this.material.color;\n\t\tvar max = Math.max( c.r, c.g, c.b );\n\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t}\n\n};\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction LightProbeHelper( lightProbe, size ) {\n\n\tthis.lightProbe = lightProbe;\n\n\tthis.size = size;\n\n\tvar defines = {};\n\tdefines[ 'GAMMA_OUTPUT' ] = \"\";\n\n\t// material\n\tvar material = new ShaderMaterial( {\n\n\t\tdefines: defines,\n\n\t\tuniforms: {\n\n\t\t\tsh: { value: this.lightProbe.sh.coefficients }, // by reference\n\n\t\t\tintensity: { value: this.lightProbe.intensity }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t'varying vec3 vNormal;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvNormal = normalize( normalMatrix * normal );',\n\n\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t\t'}',\n\n\t\t].join( '\\n' ),\n\n\t\tfragmentShader: [\n\n\t\t\t'#define RECIPROCAL_PI 0.318309886',\n\n\t\t\t'vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {',\n\n\t\t\t'\t// matrix is assumed to be orthogonal',\n\n\t\t\t'\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );',\n\n\t\t\t'}',\n\n\t\t\t'vec3 linearToOutput( in vec3 a ) {',\n\n\t\t\t'\t#ifdef GAMMA_OUTPUT',\n\n\t\t\t'\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\treturn a;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'}',\n\n\t\t\t'// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf',\n\t\t\t'vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {',\n\n\t\t\t'\t// normal is assumed to have unit length',\n\n\t\t\t'\tfloat x = normal.x, y = normal.y, z = normal.z;',\n\n\t\t\t'\t// band 0',\n\t\t\t'\tvec3 result = shCoefficients[ 0 ] * 0.886227;',\n\n\t\t\t'\t// band 1',\n\t\t\t'\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;',\n\t\t\t'\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;',\n\t\t\t'\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;',\n\n\t\t\t'\t// band 2',\n\t\t\t'\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;',\n\t\t\t'\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;',\n\t\t\t'\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );',\n\t\t\t'\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;',\n\t\t\t'\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );',\n\n\t\t\t'\treturn result;',\n\n\t\t\t'}',\n\n\t\t\t'uniform vec3 sh[ 9 ]; // sh coefficients',\n\n\t\t\t'uniform float intensity; // light probe intensity',\n\n\t\t\t'varying vec3 vNormal;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec3 normal = normalize( vNormal );',\n\n\t\t\t'\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );',\n\n\t\t\t'\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );',\n\n\t\t\t'\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;',\n\n\t\t\t'\toutgoingLight = linearToOutput( outgoingLight );',\n\n\t\t\t'\tgl_FragColor = vec4( outgoingLight, 1.0 );',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' )\n\n\t} );\n\n\tvar geometry = new SphereBufferGeometry( 1, 32, 16 );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.onBeforeRender();\n\n}\n\nLightProbeHelper.prototype = Object.create( Mesh.prototype );\nLightProbeHelper.prototype.constructor = LightProbeHelper;\n\nLightProbeHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nLightProbeHelper.prototype.onBeforeRender = function () {\n\n\treturn function update() {\n\n\t\tthis.position.copy( this.lightProbe.position );\n\n\t\tthis.scale.set( 1, 1, 1 ).multiplyScalar( this.size );\n\n\t\tthis.material.uniforms.intensity.value = this.lightProbe.intensity;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\tconstructor: GridHelper,\n\n\tcopy: function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\n\n\tthis.audio = audio;\n\tthis.range = range || 1;\n\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\n\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\n\n\tvar geometry = new BufferGeometry();\n\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\tthis.update();\n\n}\n\nPositionalAudioHelper.prototype = Object.create( Line.prototype );\nPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\nPositionalAudioHelper.prototype.update = function () {\n\n\tvar audio = this.audio;\n\tvar range = this.range;\n\tvar divisionsInnerAngle = this.divisionsInnerAngle;\n\tvar divisionsOuterAngle = this.divisionsOuterAngle;\n\n\tvar coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle );\n\tvar coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle );\n\n\tvar halfConeInnerAngle = coneInnerAngle / 2;\n\tvar halfConeOuterAngle = coneOuterAngle / 2;\n\n\tvar start = 0;\n\tvar count = 0;\n\tvar i, stride;\n\n\tvar geometry = this.geometry;\n\tvar positionAttribute = geometry.attributes.position;\n\n\tgeometry.clearGroups();\n\n\t//\n\n\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\tvar step = ( to - from ) / divisions;\n\n\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\tcount ++;\n\n\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\tstride = start + count;\n\n\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\tcount += 3;\n\n\t\t}\n\n\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\tstart += count;\n\t\tcount = 0;\n\n\t}\n\n\t//\n\n\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t//\n\n\tpositionAttribute.needsUpdate = true;\n\n\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\n\n};\n\nPositionalAudioHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material[ 0 ].dispose();\n\tthis.material[ 1 ].dispose();\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v2 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t},\n\tallocTextureUnit: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t},\n\tsetTexture: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t},\n\tsetTexture2D: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t},\n\tsetTextureCube: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTargetCube.prototype, {\n\n\tactiveCubeFace: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t},\n\tactiveMipMapLevel: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveBlending, AlphaFormat, AlwaysDepth, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, ClosedSplineCurve3, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, BoxGeometry as CubeGeometry, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DirectionalLightShadow, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, Face3, Face4, FaceColors, FaceNormalsHelper, FileLoader, FlatShading, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FrontFaceDirectionCCW, FrontFaceDirectionCW, FrontSide, Frustum, GammaEncoding, Geometry, GeometryUtils, GreaterDepth, GreaterEqualDepth, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, JSONLoader, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, Light, LightProbe, LightProbeHelper, LightShadow, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LogLuvEncoding, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, _Math as Math, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NeverDepth, NoBlending, NoColors, NoToneMapping, NormalBlending, NotEqualDepth, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, ParametricBufferGeometry, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PositionalAudioHelper, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDEncoding, RGBEEncoding, RGBEFormat, RGBFormat, RGBM16Encoding, RGBM7Encoding, RGB_ETC1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RawShaderMaterial, RawUniformsGroup, Ray, Raycaster, RectAreaLight, RectAreaLightHelper, RedFormat, ReinhardToneMapping, RepeatWrapping, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SphericalReflectionMapping, Spline, SplineCurve, SplineCurve3, SpotLight, SpotLightHelper, SpotLightShadow, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StereoCamera, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uncharted2ToneMapping, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedShortType, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VertexNormalsHelper, VideoTexture, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, sRGBEncoding };\n","var e=function(){};e.computeCentroids=function(e){var t,r,n;for(t=0,r=e.faces.length;t<r;t++)(n=e.faces[t]).centroid=new THREE.Vector3(0,0,0),n.centroid.add(e.vertices[n.a]),n.centroid.add(e.vertices[n.b]),n.centroid.add(e.vertices[n.c]),n.centroid.divideScalar(3)},e.roundNumber=function(e,t){return Number(e.toFixed(t))},e.sample=function(e){return e[Math.floor(Math.random()*e.length)]},e.mergeVertexIds=function(e,t){var r=[];if(e.forEach(function(e){t.indexOf(e)>=0&&r.push(e)}),r.length<2)return[];r.includes(e[0])&&r.includes(e[e.length-1])&&e.push(e.shift()),r.includes(t[0])&&r.includes(t[t.length-1])&&t.push(t.shift()),r=[],e.forEach(function(e){t.includes(e)&&r.push(e)});for(var n=r[1],o=r[0],i=e.slice();i[0]!==n;)i.push(i.shift());for(var s=0,a=t.slice();a[0]!==o;)if(a.push(a.shift()),s++>10)throw new Error(\"Unexpected state\");return a.shift(),a.pop(),i=i.concat(a)},e.setPolygonCentroid=function(e,t){var r=new THREE.Vector3,n=t.vertices;e.vertexIds.forEach(function(e){r.add(n[e])}),r.divideScalar(e.vertexIds.length),e.centroid.copy(r)},e.cleanPolygon=function(e,t){for(var r=[],n=t.vertices,o=0;o<e.vertexIds.length;o++){var i,s,a,h=n[e.vertexIds[o]];0===o?(i=e.vertexIds[1],s=e.vertexIds[e.vertexIds.length-1]):o===e.vertexIds.length-1?(i=e.vertexIds[0],s=e.vertexIds[e.vertexIds.length-2]):(i=e.vertexIds[o+1],s=e.vertexIds[o-1]),a=n[s];var c=n[i].clone().sub(h),u=a.clone().sub(h),l=c.angleTo(u);if(l>Math.PI-.01&&l<Math.PI+.01){var p=[];e.neighbours.forEach(function(t){t.vertexIds.includes(e.vertexIds[o])||p.push(t)}),e.neighbours=p}else r.push(e.vertexIds[o])}e.vertexIds=r,this.setPolygonCentroid(e,t)},e.isConvex=function(e,t){var r=t.vertices;if(e.vertexIds.length<3)return!1;for(var n=!0,o=[],i=0;i<e.vertexIds.length;i++){var s,a,h=r[e.vertexIds[i]];0===i?(s=r[e.vertexIds[1]],a=r[e.vertexIds[e.vertexIds.length-1]]):i===e.vertexIds.length-1?(s=r[e.vertexIds[0]],a=r[e.vertexIds[e.vertexIds.length-2]]):(s=r[e.vertexIds[i+1]],a=r[e.vertexIds[i-1]]);var c=s.clone().sub(h),u=a.clone().sub(h),l=c.angleTo(u);if(l===Math.PI||0===l)return!1;var p=c.cross(u).y;o.push(p)}return o.forEach(function(e){0===e&&(n=!1)}),o.forEach(o[0]>0?function(e){e<0&&(n=!1)}:function(e){e>0&&(n=!1)}),n},e.distanceToSquared=function(e,t){var r=e.x-t.x,n=e.y-t.y,o=e.z-t.z;return r*r+n*n+o*o},e.isPointInPoly=function(e,t){for(var r=!1,n=-1,o=e.length,i=o-1;++n<o;i=n)(e[n].z<=t.z&&t.z<e[i].z||e[i].z<=t.z&&t.z<e[n].z)&&t.x<(e[i].x-e[n].x)*(t.z-e[n].z)/(e[i].z-e[n].z)+e[n].x&&(r=!r);return r},e.isVectorInPolygon=function(e,t,r){var n=1e5,o=-1e5,i=[];return t.vertexIds.forEach(function(e){n=Math.min(r[e].y,n),o=Math.max(r[e].y,o),i.push(r[e])}),!!(e.y<o+.5&&e.y>n-.5&&this.isPointInPoly(i,e))},e.triarea2=function(e,t,r){return(r.x-e.x)*(t.z-e.z)-(t.x-e.x)*(r.z-e.z)},e.vequal=function(e,t){return this.distanceToSquared(e,t)<1e-5};var t=function(e){this.content=[],this.scoreFunction=e};t.prototype.push=function(e){this.content.push(e),this.sinkDown(this.content.length-1)},t.prototype.pop=function(){var e=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.bubbleUp(0)),e},t.prototype.remove=function(e){var t=this.content.indexOf(e),r=this.content.pop();t!==this.content.length-1&&(this.content[t]=r,this.scoreFunction(r)<this.scoreFunction(e)?this.sinkDown(t):this.bubbleUp(t))},t.prototype.size=function(){return this.content.length},t.prototype.rescoreElement=function(e){this.sinkDown(this.content.indexOf(e))},t.prototype.sinkDown=function(e){for(var t=this.content[e];e>0;){var r=(e+1>>1)-1,n=this.content[r];if(!(this.scoreFunction(t)<this.scoreFunction(n)))break;this.content[r]=t,this.content[e]=n,e=r}},t.prototype.bubbleUp=function(e){for(var t=this.content.length,r=this.content[e],n=this.scoreFunction(r);;){var o=e+1<<1,i=o-1,s=null,a=void 0;if(i<t)(a=this.scoreFunction(this.content[i]))<n&&(s=i);if(o<t)this.scoreFunction(this.content[o])<(null===s?n:a)&&(s=o);if(null===s)break;this.content[e]=this.content[s],this.content[s]=r,e=s}};var r=function(){};r.init=function(e){for(var t=0;t<e.length;t++){var r=e[t];r.f=0,r.g=0,r.h=0,r.cost=1,r.visited=!1,r.closed=!1,r.parent=null}},r.cleanUp=function(e){for(var t=0;t<e.length;t++){var r=e[t];delete r.f,delete r.g,delete r.h,delete r.cost,delete r.visited,delete r.closed,delete r.parent}},r.heap=function(){return new t(function(e){return e.f})},r.search=function(e,t,r){this.init(e);var n=this.heap();for(n.push(t);n.size()>0;){var o=n.pop();if(o===r){for(var i=o,s=[];i.parent;)s.push(i),i=i.parent;return this.cleanUp(s),s.reverse()}o.closed=!0;for(var a=this.neighbours(e,o),h=0,c=a.length;h<c;h++){var u=a[h];if(!u.closed){var l=o.g+u.cost,p=u.visited;if(!p||l<u.g){if(u.visited=!0,u.parent=o,!u.centroid||!r.centroid)throw new Error(\"Unexpected state\");u.h=u.h||this.heuristic(u.centroid,r.centroid),u.g=l,u.f=u.g+u.h,p?n.rescoreElement(u):n.push(u)}}}}return[]},r.heuristic=function(t,r){return e.distanceToSquared(t,r)},r.neighbours=function(e,t){for(var r=[],n=0;n<t.neighbours.length;n++)r.push(e[t.neighbours[n]]);return r};var n=1,o=function(){};o.buildZone=function(e){var t=this,r=this._buildNavigationMesh(e),n={};n.vertices=r.vertices;var o=this._buildPolygonGroups(r);return n.groups=new Array(o.length),o.forEach(function(e,r){var o={};e.forEach(function(e,t){o[e.id]=t});var i=new Array(e.length);e.forEach(function(e,r){var n=[];e.neighbours.forEach(function(e){return n.push(o[e.id])});var s=[];e.neighbours.forEach(function(r){return s.push(t._getSharedVerticesInOrder(e,r))}),i[r]={id:r,neighbours:n,vertexIds:e.vertexIds,centroid:e.centroid,portals:s}}),n.groups[r]=i}),n},o._buildNavigationMesh=function(t){return e.computeCentroids(t),t.mergeVertices(),this._buildPolygonsFromGeometry(t)},o._buildPolygonGroups=function(e){var t=[],r=function(e){e.neighbours.forEach(function(t){void 0===t.group&&(t.group=e.group,r(t))})};return e.polygons.forEach(function(e){void 0!==e.group?t[e.group].push(e):(e.group=t.length,r(e),t.push([e]))}),t},o._buildPolygonNeighbours=function(e,t){var r=new Set,n=t[e.vertexIds[1]],o=t[e.vertexIds[2]];return t[e.vertexIds[0]].forEach(function(t){t!==e&&(n.includes(t)||o.includes(t))&&r.add(t)}),n.forEach(function(t){t!==e&&o.includes(t)&&r.add(t)}),r},o._buildPolygonsFromGeometry=function(e){for(var t=this,r=[],o=e.vertices,i=e.faceVertexUvs,s=new Array(o.length),a=0;a<o.length;a++)s[a]=[];return e.faces.forEach(function(e){var t={id:n++,vertexIds:[e.a,e.b,e.c],centroid:e.centroid,normal:e.normal,neighbours:null};r.push(t),s[e.a].push(t),s[e.b].push(t),s[e.c].push(t)}),r.forEach(function(e){e.neighbours=t._buildPolygonNeighbours(e,s)}),{polygons:r,vertices:o,faceVertexUvs:i}},o._getSharedVerticesInOrder=function(e,t){var r=e.vertexIds,n=t.vertexIds,o=new Set;if(r.forEach(function(e){n.includes(e)&&o.add(e)}),o.size<2)return[];o.has(r[0])&&o.has(r[r.length-1])&&r.push(r.shift()),o.has(n[0])&&o.has(n[n.length-1])&&n.push(n.shift());var i=[];return r.forEach(function(e){n.includes(e)&&i.push(e)}),i};var i=function(){this.portals=[]};i.prototype.push=function(e,t){void 0===t&&(t=e),this.portals.push({left:e,right:t})},i.prototype.stringPull=function(){var t,r,n,o=this.portals,i=[],s=0,a=0,h=0;r=o[0].left,n=o[0].right,i.push(t=o[0].left);for(var c=1;c<o.length;c++){var u=o[c].left,l=o[c].right;if(e.triarea2(t,n,l)<=0){if(!(e.vequal(t,n)||e.triarea2(t,r,l)>0)){i.push(r),r=t=r,n=t,a=s=a,h=s,c=s;continue}n=l,h=c}if(e.triarea2(t,r,u)>=0){if(!(e.vequal(t,r)||e.triarea2(t,n,u)<0)){i.push(n),r=t=n,n=t,a=s=h,h=s,c=s;continue}r=u,a=c}}return 0!==i.length&&e.vequal(i[i.length-1],o[o.length-1].left)||i.push(o[o.length-1].left),this.path=i,i};var s,a=function(){this.zones={}};a.createZone=function(e){return e.isGeometry?console.warn(\"[three-pathfinding]: Use THREE.BufferGeometry, not THREE.Geometry, to create zone.\"):e=(new THREE.Geometry).fromBufferGeometry(e),o.buildZone(e)},a.prototype.setZoneData=function(e,t){this.zones[e]=t},a.prototype.getRandomNode=function(t,r,n,o){if(!this.zones[t])return new THREE.Vector3;n=n||null,o=o||0;var i=[];return this.zones[t].groups[r].forEach(function(t){n&&o?e.distanceToSquared(n,t.centroid)<o*o&&i.push(t.centroid):i.push(t.centroid)}),e.sample(i)||new THREE.Vector3},a.prototype.getClosestNode=function(t,r,n,o){void 0===o&&(o=!1);var i=this.zones[r].vertices,s=null,a=Infinity;return this.zones[r].groups[n].forEach(function(r){var n=e.distanceToSquared(r.centroid,t);n<a&&(!o||e.isVectorInPolygon(t,r,i))&&(s=r,a=n)}),s},a.prototype.findPath=function(e,t,n,o){var s=this.zones[n].groups[o],a=this.zones[n].vertices,h=this.getClosestNode(e,n,o,!0),c=this.getClosestNode(t,n,o,!0);if(!h||!c)return null;var u=r.search(s,h,c),l=function(e,t){for(var r=0;r<e.neighbours.length;r++)if(e.neighbours[r]===t.id)return e.portals[r]},p=new i;p.push(e);for(var d=0;d<u.length;d++){var f=u[d+1];if(f){var v=l(u[d],f);p.push(a[v[0]],a[v[1]])}}p.push(t),p.stringPull();var g=p.path.map(function(e){return new THREE.Vector3(e.x,e.y,e.z)});return g.shift(),g},a.prototype.getGroup=(s=new THREE.Plane,function(t,r,n){if(void 0===n&&(n=!1),!this.zones[t])return null;for(var o=null,i=Math.pow(50,2),a=this.zones[t],h=0;h<a.groups.length;h++)for(var c=0,u=a.groups[h];c<u.length;c+=1){var l=u[c];if(n&&(s.setFromCoplanarPoints(a.vertices[l.vertexIds[0]],a.vertices[l.vertexIds[1]],a.vertices[l.vertexIds[2]]),Math.abs(s.distanceToPoint(r))<.01&&e.isPointInPoly([a.vertices[l.vertexIds[0]],a.vertices[l.vertexIds[1]],a.vertices[l.vertexIds[2]]],r)))return h;var p=e.distanceToSquared(l.centroid,r);p<i&&(o=h,i=p)}return o}),a.prototype.clampStep=function(){var e,t,r=new THREE.Vector3,n=new THREE.Plane,o=new THREE.Triangle,i=new THREE.Vector3,s=new THREE.Vector3;return function(a,h,c,u,l,p){var d=this.zones[u].vertices,f=this.zones[u].groups[l],v=[c],g={};g[c.id]=0,e=void 0,s.set(0,0,0),t=Infinity,n.setFromCoplanarPoints(d[c.vertexIds[0]],d[c.vertexIds[1]],d[c.vertexIds[2]]),n.projectPoint(h,r),i.copy(r);for(var E=v.pop();E;E=v.pop()){o.set(d[E.vertexIds[0]],d[E.vertexIds[1]],d[E.vertexIds[2]]),o.closestPointToPoint(i,r),r.distanceToSquared(i)<t&&(e=E,s.copy(r),t=r.distanceToSquared(i));var y=g[E];if(!(y>2))for(var x=0;x<E.neighbours.length;x++){var T=f[E.neighbours[x]];T.id in g||(v.push(T),g[T.id]=y+1)}}return p.copy(s),e}}();var h={PLAYER:new THREE.Color(15631215).convertGammaToLinear(2.2).getHex(),TARGET:new THREE.Color(14469912).convertGammaToLinear(2.2).getHex(),PATH:new THREE.Color(41903).convertGammaToLinear(2.2).getHex(),WAYPOINT:new THREE.Color(41903).convertGammaToLinear(2.2).getHex(),CLAMPED_STEP:new THREE.Color(14472114).convertGammaToLinear(2.2).getHex(),CLOSEST_NODE:new THREE.Color(4417387).convertGammaToLinear(2.2).getHex()},c=function(e){function t(){var t=this;e.call(this),this._playerMarker=new THREE.Mesh(new THREE.SphereGeometry(.25,32,32),new THREE.MeshBasicMaterial({color:h.PLAYER})),this._targetMarker=new THREE.Mesh(new THREE.BoxGeometry(.3,.3,.3),new THREE.MeshBasicMaterial({color:h.TARGET})),this._nodeMarker=new THREE.Mesh(new THREE.BoxGeometry(.1,.8,.1),new THREE.MeshBasicMaterial({color:h.CLOSEST_NODE})),this._stepMarker=new THREE.Mesh(new THREE.BoxGeometry(.1,1,.1),new THREE.MeshBasicMaterial({color:h.CLAMPED_STEP})),this._pathMarker=new THREE.Object3D,this._pathLineMaterial=new THREE.LineBasicMaterial({color:h.PATH,linewidth:2}),this._pathPointMaterial=new THREE.MeshBasicMaterial({color:h.WAYPOINT}),this._pathPointGeometry=new THREE.SphereBufferGeometry(.08),this._markers=[this._playerMarker,this._targetMarker,this._nodeMarker,this._stepMarker,this._pathMarker],this._markers.forEach(function(e){e.visible=!1,t.add(e)})}return e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t,t.prototype.setPath=function(e){for(;this._pathMarker.children.length;)this._pathMarker.children[0].visible=!1,this._pathMarker.remove(this._pathMarker.children[0]);e=[this._playerMarker.position].concat(e);for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(e[r].clone().add(new THREE.Vector3(0,.2,0)));this._pathMarker.add(new THREE.Line(t,this._pathLineMaterial));for(var n=0;n<e.length-1;n++){var o=new THREE.Mesh(this._pathPointGeometry,this._pathPointMaterial);o.position.copy(e[n]),o.position.y+=.2,this._pathMarker.add(o)}return this._pathMarker.visible=!0,this},t.prototype.setPlayerPosition=function(e){return this._playerMarker.position.copy(e),this._playerMarker.visible=!0,this},t.prototype.setTargetPosition=function(e){return this._targetMarker.position.copy(e),this._targetMarker.visible=!0,this},t.prototype.setNodePosition=function(e){return this._nodeMarker.position.copy(e),this._nodeMarker.visible=!0,this},t.prototype.setStepPosition=function(e){return this._stepMarker.position.copy(e),this._stepMarker.visible=!0,this},t.prototype.reset=function(){for(;this._pathMarker.children.length;)this._pathMarker.children[0].visible=!1,this._pathMarker.remove(this._pathMarker.children[0]);return this._markers.forEach(function(e){e.visible=!1}),this},t}(THREE.Object3D);export{a as Pathfinding,c as PathfindingHelper};\n//# sourceMappingURL=three-pathfinding.module.js.map\n","module.exports = function() {\n  return require(\"!!/Users/gheric/GitHub/custom-hubs-template/hubs/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\\\"object\\\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\\\"default\\\",{enumerable:!0,value:e}),2&t&&\\\"string\\\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\\\"a\\\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\\\"/custom-hubs-template/\\\",r(r.s=0)}([function(e,t){self.onmessage=e=>{try{const t=function(e){let t=0;const r=[];let n=null;const o=[],a=[];let s=0;if(71!==e[0]||73!==e[1]||70!==e[2]||56!==e[3]||57!==e[4]||97!==e[5])throw new Error(\\\"parseGIF: no GIF89a\\\");{t+=+!!(128&e[10])*Math.pow(2,1+(7&e[10]))*3+13;const u=e.subarray(0,t);for(;e[t]&&59!==e[t];){const l=t,f=e[t];if(33===f){const o=e[++t];if(-1===[1,254,249,255].indexOf(o))throw new Error(\\\"parseGIF: unknown label\\\");for(249===o&&r.push(10*(e[t+3]+(e[t+4]<<8))),255===o&&(s=e[t+15]+(e[t+16]<<8));e[++t];)t+=e[t];249===o&&(n=e.subarray(l,t+1),a.push(n[3]>>2&7))}else{if(44!==f)throw new Error(\\\"parseGIF: unknown blockId\\\");{for(t+=9,t+=+!!(128&e[t])*(3*Math.pow(2,1+(7&e[t])))+1;e[++t];)t+=e[t];const r=e.subarray(l,t+1);o.push(URL.createObjectURL(new Blob([u,n,r])))}}t++}}return{delayTimes:r,loopCnt:s,frames:o,disposals:a}}(new Uint8Array(e.data.payload));self.postMessage({id:e.data.id,result:t})}catch(t){self.postMessage({id:e.data.id,err:t.message})}}}]);\\n//# sourceMappingURL=gifparsing.worker-fdd7eedaaeb0ed5a99b0.js.map\", \"/\" + \"assets/js/gifparsing.worker-fdd7eedaaeb0ed5a99b0.js\");\n};","var createLayout = require('layout-bmfont-text')\nvar inherits = require('inherits')\nvar createIndices = require('quad-indices')\nvar buffer = require('three-buffer-vertex-data')\nvar assign = require('object-assign')\n\nvar vertices = require('./lib/vertices')\nvar utils = require('./lib/utils')\n\nvar Base = THREE.BufferGeometry\n\nmodule.exports = function createTextGeometry (opt) {\n  return new TextGeometry(opt)\n}\n\nfunction TextGeometry (opt) {\n  Base.call(this)\n\n  if (typeof opt === 'string') {\n    opt = { text: opt }\n  }\n\n  // use these as default values for any subsequent\n  // calls to update()\n  this._opt = assign({}, opt)\n\n  // also do an initial setup...\n  if (opt) this.update(opt)\n}\n\ninherits(TextGeometry, Base)\n\nTextGeometry.prototype.update = function (opt) {\n  if (typeof opt === 'string') {\n    opt = { text: opt }\n  }\n\n  // use constructor defaults\n  opt = assign({}, this._opt, opt)\n\n  if (!opt.font) {\n    throw new TypeError('must specify a { font } in options')\n  }\n\n  this.layout = createLayout(opt)\n\n  // get vec2 texcoords\n  var flipY = opt.flipY !== false\n\n  // the desired BMFont data\n  var font = opt.font\n\n  // determine texture size from font file\n  var texWidth = font.common.scaleW\n  var texHeight = font.common.scaleH\n\n  // get visible glyphs\n  var glyphs = this.layout.glyphs.filter(function (glyph) {\n    var bitmap = glyph.data\n    return bitmap.width * bitmap.height > 0\n  })\n\n  // provide visible glyphs for convenience\n  this.visibleGlyphs = glyphs\n\n  // get common vertex data\n  var positions = vertices.positions(glyphs)\n  var uvs = vertices.uvs(glyphs, texWidth, texHeight, flipY)\n  var indices = createIndices({\n    clockwise: true,\n    type: 'uint16',\n    count: glyphs.length\n  })\n\n  // update vertex data\n  buffer.index(this, indices, 1, 'uint16')\n  buffer.attr(this, 'position', positions, 2)\n  buffer.attr(this, 'uv', uvs, 2)\n\n  // update multipage data\n  if (!opt.multipage && 'page' in this.attributes) {\n    // disable multipage rendering\n    this.removeAttribute('page')\n  } else if (opt.multipage) {\n    var pages = vertices.pages(glyphs)\n    // enable multipage rendering\n    buffer.attr(this, 'page', pages, 1)\n  }\n}\n\nTextGeometry.prototype.computeBoundingSphere = function () {\n  if (this.boundingSphere === null) {\n    this.boundingSphere = new THREE.Sphere()\n  }\n\n  var positions = this.attributes.position.array\n  var itemSize = this.attributes.position.itemSize\n  if (!positions || !itemSize || positions.length < 2) {\n    this.boundingSphere.radius = 0\n    this.boundingSphere.center.set(0, 0, 0)\n    return\n  }\n  utils.computeSphere(positions, this.boundingSphere)\n  if (isNaN(this.boundingSphere.radius)) {\n    console.error('THREE.BufferGeometry.computeBoundingSphere(): ' +\n      'Computed radius is NaN. The ' +\n      '\"position\" attribute is likely to have NaN values.')\n  }\n}\n\nTextGeometry.prototype.computeBoundingBox = function () {\n  if (this.boundingBox === null) {\n    this.boundingBox = new THREE.Box3()\n  }\n\n  var bbox = this.boundingBox\n  var positions = this.attributes.position.array\n  var itemSize = this.attributes.position.itemSize\n  if (!positions || !itemSize || positions.length < 2) {\n    bbox.makeEmpty()\n    return\n  }\n  utils.computeBox(positions, bbox)\n}\n","var schema = require('./schema');\n\nvar processSchema = schema.process;\nvar geometries = module.exports.geometries = {};  // Registered geometries.\nvar geometryNames = module.exports.geometryNames = [];  // Names of registered geometries.\nvar THREE = require('../lib/three');\n\n/**\n * Geometry class definition.\n *\n * Geometries extend the geometry component API to create and register geometry types.\n */\nvar Geometry = module.exports.Geometry = function () {};\n\nGeometry.prototype = {\n  /**\n   * Contains the type schema and defaults for the data values.\n   * Data is coerced into the types of the values of the defaults.\n   */\n  schema: {},\n\n  /**\n   * Init handler. Similar to attachedCallback.\n   * Called during shader initialization and is only run once.\n   */\n  init: function (data) {\n    this.geometry = new THREE.Geometry();\n    return this.geometry;\n  },\n\n  /**\n   * Update handler. Similar to attributeChangedCallback.\n   * Called whenever the associated geometry data changes.\n   *\n   * @param {object} data - New geometry data.\n   */\n  update: function (data) { /* no-op */ }\n};\n\n/**\n * Registers a geometry to A-Frame.\n *\n * @param {string} name - Geometry name.\n * @param {object} definition - Geometry property and methods.\n * @returns {object} Geometry.\n */\nmodule.exports.registerGeometry = function (name, definition) {\n  var NewGeometry;\n  var proto = {};\n\n  // Format definition object to prototype object.\n  Object.keys(definition).forEach(function expandDefinition (key) {\n    proto[key] = {\n      value: definition[key],\n      writable: true\n    };\n  });\n\n  if (geometries[name]) {\n    throw new Error('The geometry `' + name + '` has been already registered');\n  }\n  NewGeometry = function () { Geometry.call(this); };\n  NewGeometry.prototype = Object.create(Geometry.prototype, proto);\n  NewGeometry.prototype.name = name;\n  NewGeometry.prototype.constructor = NewGeometry;\n  geometries[name] = {\n    Geometry: NewGeometry,\n    schema: processSchema(NewGeometry.prototype.schema)\n  };\n  geometryNames.push(name);\n  return NewGeometry;\n};\n","/* global Ammo,THREE */\n\nconst EPS = 10e-6;\n\nconst CONSTANTS = require(\"../constants\");\n\n/* @param {object} worldConfig */\nfunction World(worldConfig) {\n  this.collisionConfiguration = null;\n  this.dispatcher = null;\n  this.broadphase = null;\n  this.solver = null;\n  this.physicsWorld = null;\n  this.debugDrawer = null;\n\n  this.object3Ds = new Map();\n  this.collisions = new Map();\n  this.collisionKeys = [];\n\n  this.epsilon = worldConfig.epsilon || EPS;\n  this.debugDrawMode = worldConfig.debugDrawMode || THREE.AmmoDebugConstants.NoDebug;\n  this.maxSubSteps = worldConfig.maxSubSteps || 4;\n  this.fixedTimeStep = worldConfig.fixedTimeStep || 1 / 60;\n  this.collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();\n  this.dispatcher = new Ammo.btCollisionDispatcher(this.collisionConfiguration);\n  this.broadphase = new Ammo.btDbvtBroadphase();\n  this.solver = new Ammo.btSequentialImpulseConstraintSolver();\n  this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(\n    this.dispatcher,\n    this.broadphase,\n    this.solver,\n    this.collisionConfiguration\n  );\n  this.physicsWorld.setForceUpdateAllAabbs(false);\n  const gravity = new Ammo.btVector3(0, CONSTANTS.GRAVITY, 0);\n  if (worldConfig.hasOwnProperty(\"gravity\")) {\n    gravity.setValue(worldConfig.gravity.x, worldConfig.gravity.y, worldConfig.gravity.z);\n  }\n  this.physicsWorld.setGravity(gravity);\n  Ammo.destroy(gravity);\n  this.physicsWorld.getSolverInfo().set_m_numIterations(worldConfig.solverIterations || 10);\n}\n\nWorld.prototype.isDebugEnabled = function() {\n  return this.debugDrawMode !== THREE.AmmoDebugConstants.NoDebug;\n};\n\n/* @param {Ammo.btCollisionObject} body */\nWorld.prototype.addBody = function(body, object3D, group, mask) {\n  this.physicsWorld.addRigidBody(body, group, mask);\n  this.object3Ds.set(Ammo.getPointer(body), object3D);\n};\n\n/* @param {Ammo.btCollisionObject} body */\nWorld.prototype.removeBody = function(body) {\n  this.physicsWorld.removeRigidBody(body);\n  const bodyptr = Ammo.getPointer(body);\n  this.object3Ds.delete(bodyptr);\n  this.collisions.delete(bodyptr);\n  if (this.collisionKeys.indexOf(bodyptr) !== -1) {\n    this.collisionKeys.splice(this.collisionKeys.indexOf(bodyptr), 1);\n  }\n};\n\nWorld.prototype.updateBody = function(body) {\n  if (this.object3Ds.has(Ammo.getPointer(body))) {\n    this.physicsWorld.updateSingleAabb(body);\n  }\n};\n\n/* @param {number} deltaTime */\nWorld.prototype.step = function(deltaTime) {\n  this.physicsWorld.stepSimulation(deltaTime, this.maxSubSteps, this.fixedTimeStep);\n\n  for (let k = 0; k < this.collisionKeys.length; k++) {\n    this.collisions.get(this.collisionKeys[k]).length = 0;\n  }\n\n  const numManifolds = this.dispatcher.getNumManifolds();\n  for (let i = 0; i < numManifolds; i++) {\n    const persistentManifold = this.dispatcher.getManifoldByIndexInternal(i);\n    const numContacts = persistentManifold.getNumContacts();\n    const body0ptr = Ammo.getPointer(persistentManifold.getBody0());\n    const body1ptr = Ammo.getPointer(persistentManifold.getBody1());\n\n    for (let j = 0; j < numContacts; j++) {\n      const manifoldPoint = persistentManifold.getContactPoint(j);\n      const distance = manifoldPoint.getDistance();\n      if (distance <= this.epsilon) {\n        if (!this.collisions.has(body0ptr)) {\n          this.collisions.set(body0ptr, []);\n          this.collisionKeys.push(body0ptr);\n        }\n        if (this.collisions.get(body0ptr).indexOf(body1ptr) === -1) {\n          this.collisions.get(body0ptr).push(body1ptr);\n        }\n        break;\n      }\n    }\n  }\n\n  if (this.debugDrawer) {\n    this.debugDrawer.update();\n  }\n};\n\nWorld.prototype.destroy = function() {\n  Ammo.destroy(this.collisionConfiguration);\n  Ammo.destroy(this.dispatcher);\n  Ammo.destroy(this.broadphase);\n  Ammo.destroy(this.solver);\n  Ammo.destroy(this.physicsWorld);\n  Ammo.destroy(this.debugDrawer);\n};\n\n/**\n * @param {THREE.Scene} scene\n * @param {object} options\n */\nWorld.prototype.getDebugDrawer = function(scene, options) {\n  if (!this.debugDrawer) {\n    options = options || {};\n    options.debugDrawMode = options.debugDrawMode || this.debugDrawMode;\n    this.debugDrawer = new THREE.AmmoDebugDrawer(scene, this.physicsWorld, options);\n  }\n\n  return this.debugDrawer;\n};\n\nmodule.exports = World;\n","/* global Ammo,THREE */\nconst AmmoDebugDrawer = require(\"ammo-debug-drawer\");\nconst threeToAmmo = require(\"three-to-ammo\");\nconst CONSTANTS = require(\"../constants\"),\n  ACTIVATION_STATE = CONSTANTS.ACTIVATION_STATE,\n  COLLISION_FLAG = CONSTANTS.COLLISION_FLAG,\n  SHAPE = CONSTANTS.SHAPE,\n  TYPE = CONSTANTS.TYPE,\n  FIT = CONSTANTS.FIT;\n\nconst ACTIVATION_STATES = [\n  ACTIVATION_STATE.ACTIVE_TAG,\n  ACTIVATION_STATE.ISLAND_SLEEPING,\n  ACTIVATION_STATE.WANTS_DEACTIVATION,\n  ACTIVATION_STATE.DISABLE_DEACTIVATION,\n  ACTIVATION_STATE.DISABLE_SIMULATION\n];\n\nconst RIGID_BODY_FLAGS = {\n  NONE: 0,\n  DISABLE_WORLD_GRAVITY: 1\n};\n\nfunction almostEqualsVector3(epsilon, u, v) {\n  return Math.abs(u.x - v.x) < epsilon && Math.abs(u.y - v.y) < epsilon && Math.abs(u.z - v.z) < epsilon;\n}\n\nfunction almostEqualsBtVector3(epsilon, u, v) {\n  return Math.abs(u.x() - v.x()) < epsilon && Math.abs(u.y() - v.y()) < epsilon && Math.abs(u.z() - v.z()) < epsilon;\n}\n\nfunction almostEqualsQuaternion(epsilon, u, v) {\n  return (\n    (Math.abs(u.x - v.x) < epsilon &&\n      Math.abs(u.y - v.y) < epsilon &&\n      Math.abs(u.z - v.z) < epsilon &&\n      Math.abs(u.w - v.w) < epsilon) ||\n    (Math.abs(u.x + v.x) < epsilon &&\n      Math.abs(u.y + v.y) < epsilon &&\n      Math.abs(u.z + v.z) < epsilon &&\n      Math.abs(u.w + v.w) < epsilon)\n  );\n}\n\n/**\n * Initializes a body component, assigning it to the physics system and binding listeners for\n * parsing the elements geometry.\n */\nfunction Body(bodyConfig, object3D, world) {\n  this.loadedEvent = bodyConfig.loadedEvent ? bodyConfig.loadedEvent : \"\";\n  this.mass = bodyConfig.hasOwnProperty(\"mass\") ? bodyConfig.mass : 1;\n  const worldGravity = world.physicsWorld.getGravity();\n  this.gravity = new Ammo.btVector3(worldGravity.x(), worldGravity.y(), worldGravity.z());\n  if (bodyConfig.gravity) {\n    this.gravity.setValue(bodyConfig.gravity.x, bodyConfig.gravity.y, bodyConfig.gravity.z);\n  }\n  this.linearDamping = bodyConfig.hasOwnProperty(\"linearDamping\") ? bodyConfig.linearDamping : 0.01;\n  this.angularDamping = bodyConfig.hasOwnProperty(\"angularDamping\") ? bodyConfig.angularDamping : 0.01;\n  this.linearSleepingThreshold = bodyConfig.hasOwnProperty(\"linearSleepingThreshold\")\n    ? bodyConfig.linearSleepingThreshold\n    : 1.6;\n  this.angularSleepingThreshold = bodyConfig.hasOwnProperty(\"angularSleepingThreshold\")\n    ? bodyConfig.angularSleepingThreshold\n    : 2.5;\n  this.angularFactor = new THREE.Vector3(1, 1, 1);\n  if (bodyConfig.angularFactor) {\n    this.angularFactor.copy(bodyConfig.angularFactor);\n  }\n  this.activationState =\n    bodyConfig.activationState && ACTIVATION_STATES.indexOf(bodyConfig.activationState) !== -1\n      ? bodyConfig.activationState\n      : ACTIVATION_STATE.ACTIVE_TAG;\n  this.type = bodyConfig.type ? bodyConfig.type : TYPE.DYNAMIC;\n  this.emitCollisionEvents = bodyConfig.hasOwnProperty(\"emitCollisionEvents\") ? bodyConfig.emitCollisionEvents : false;\n  this.disableCollision = bodyConfig.hasOwnProperty(\"disableCollision\") ? bodyConfig.disableCollision : false;\n  this.collisionFilterGroup = bodyConfig.hasOwnProperty(\"collisionFilterGroup\") ? bodyConfig.collisionFilterGroup : 1; //32-bit mask\n  this.collisionFilterMask = bodyConfig.hasOwnProperty(\"collisionFilterMask\") ? bodyConfig.collisionFilterMask : 1; //32-bit mask\n  this.scaleAutoUpdate = bodyConfig.hasOwnProperty(\"scaleAutoUpdate\") ? bodyConfig.scaleAutoUpdate : true;\n\n  this.object3D = object3D;\n  this.world = world;\n  this.shapes = [];\n\n  this._initBody();\n}\n\n/**\n * Parses an element's geometry and component metadata to create an Ammo body instance for the component.\n */\nBody.prototype._initBody = (function() {\n  const pos = new THREE.Vector3();\n  const quat = new THREE.Quaternion();\n  const boundingBox = new THREE.Box3();\n\n  return function() {\n    this.localScaling = new Ammo.btVector3();\n\n    const obj = this.object3D;\n    obj.getWorldPosition(pos);\n    obj.getWorldQuaternion(quat);\n\n    this.prevScale = new THREE.Vector3(1, 1, 1);\n    this.prevNumChildShapes = 0;\n\n    this.msTransform = new Ammo.btTransform();\n    this.msTransform.setIdentity();\n    this.rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w);\n\n    this.msTransform.getOrigin().setValue(pos.x, pos.y, pos.z);\n    this.msTransform.setRotation(this.rotation);\n\n    this.motionState = new Ammo.btDefaultMotionState(this.msTransform);\n\n    this.localInertia = new Ammo.btVector3(0, 0, 0);\n\n    this.compoundShape = new Ammo.btCompoundShape(true);\n\n    this.rbInfo = new Ammo.btRigidBodyConstructionInfo(\n      this.mass,\n      this.motionState,\n      this.compoundShape,\n      this.localInertia\n    );\n    this.physicsBody = new Ammo.btRigidBody(this.rbInfo);\n    this.physicsBody.setActivationState(ACTIVATION_STATES.indexOf(this.activationState) + 1);\n    this.physicsBody.setSleepingThresholds(this.linearSleepingThreshold, this.angularSleepingThreshold);\n\n    this.physicsBody.setDamping(this.linearDamping, this.angularDamping);\n\n    const angularFactor = new Ammo.btVector3(this.angularFactor.x, this.angularFactor.y, this.angularFactor.z);\n    this.physicsBody.setAngularFactor(angularFactor);\n    Ammo.destroy(angularFactor);\n\n    if (!almostEqualsBtVector3(0.001, this.gravity, this.world.physicsWorld.getGravity())) {\n      this.physicsBody.setGravity(this.gravity);\n      this.physicsBody.setFlags(RIGID_BODY_FLAGS.DISABLE_WORLD_GRAVITY);\n    }\n\n    this.updateCollisionFlags();\n\n    this.world.addBody(this.physicsBody, this.object3D, this.collisionFilterGroup, this.collisionFilterMask);\n\n    if (this.emitCollisionEvents) {\n      this.world.addEventListener(this.physicsBody);\n    }\n  };\n})();\n\n/**\n * Updates the body when shapes have changed. Should be called whenever shapes are added/removed or scale is changed.\n */\nBody.prototype.updateShapes = (function() {\n  const needsPolyhedralInitialization = [SHAPE.HULL, SHAPE.HACD, SHAPE.VHACD];\n  return function() {\n    let updated = false;\n\n    const obj = this.object3D;\n    if (this.scaleAutoUpdate && this.prevScale && !almostEqualsVector3(0.001, obj.scale, this.prevScale)) {\n      this.prevScale.copy(obj.scale);\n      updated = true;\n\n      this.localScaling.setValue(this.prevScale.x, this.prevScale.y, this.prevScale.z);\n      this.compoundShape.setLocalScaling(this.localScaling);\n    }\n\n    if (this.shapesChanged) {\n      this.shapesChanged = false;\n      updated = true;\n      if (this.type === TYPE.DYNAMIC) {\n        this.updateMass();\n      }\n\n      this.world.updateBody(this.physicsBody);\n    }\n\n    //call initializePolyhedralFeatures for hull shapes if debug is turned on and/or scale changes\n    if (this.world.isDebugEnabled() && (updated || !this.polyHedralFeaturesInitialized)) {\n      for (let i = 0; i < this.shapes.length; i++) {\n        const collisionShape = this.shapes[i];\n        if (needsPolyhedralInitialization.indexOf(collisionShape.type) !== -1) {\n          collisionShape.initializePolyhedralFeatures(0);\n        }\n      }\n      this.polyHedralFeaturesInitialized = true;\n    }\n  };\n})();\n\n/**\n * Update the configuration of the body.\n */\nBody.prototype.update = function(bodyConfig) {\n  if (\n    (bodyConfig.type && bodyConfig.type !== this.type) ||\n    (bodyConfig.disableCollision && bodyConfig.disableCollision !== this.disableCollision)\n  ) {\n    if (bodyConfig.type) this.type = bodyConfig.type;\n    if (bodyConfig.disableCollision) this.disableCollision = bodyConfig.disableCollision;\n    this.updateCollisionFlags();\n  }\n\n  if (bodyConfig.activationState && bodyConfig.activationState !== this.activationState) {\n    this.activationState = bodyConfig.activationState;\n    this.physicsBody.forceActivationState(ACTIVATION_STATES.indexOf(this.activationState) + 1);\n    if (this.activationState === ACTIVATION_STATE.ACTIVE_TAG) {\n      this.physicsBody.activate(true);\n    }\n  }\n\n  if (\n    (bodyConfig.collisionFilterGroup && bodyConfig.collisionFilterGroup !== this.collisionFilterGroup) ||\n    (bodyConfig.collisionFilterMask && bodyConfig.collisionFilterMask !== this.collisionFilterMask)\n  ) {\n    if (bodyConfig.collisionFilterGroup) this.collisionFilterGroup = bodyConfig.collisionFilterGroup;\n    if (bodyConfig.collisionFilterMask) this.collisionFilterMask = bodyConfig.collisionFilterMask;\n    const broadphaseProxy = this.physicsBody.getBroadphaseProxy();\n    broadphaseProxy.set_m_collisionFilterGroup(this.collisionFilterGroup);\n    broadphaseProxy.set_m_collisionFilterMask(this.collisionFilterMask);\n    this.world.broadphase\n      .getOverlappingPairCache()\n      .removeOverlappingPairsContainingProxy(broadphaseProxy, this.world.dispatcher);\n  }\n\n  if (\n    (bodyConfig.linearDamping && bodyConfig.linearDamping != this.linearDamping) ||\n    (bodyConfig.angularDamping && bodyConfig.angularDamping != this.angularDamping)\n  ) {\n    if (bodyConfig.linearDamping) this.linearDamping = bodyConfig.linearDamping;\n    if (bodyConfig.angularDamping) this.angularDamping = bodyConfig.angularDamping;\n    this.physicsBody.setDamping(this.linearDamping, this.angularDamping);\n  }\n\n  if (bodyConfig.gravity) {\n    this.gravity.setValue(bodyConfig.gravity.x, bodyConfig.gravity.y, bodyConfig.gravity.z);\n    if (!almostEqualsBtVector3(0.001, this.gravity, this.physicsBody.getGravity())) {\n      if (!almostEqualsBtVector3(0.001, this.gravity, this.world.physicsWorld.getGravity())) {\n        this.physicsBody.setFlags(RIGID_BODY_FLAGS.DISABLE_WORLD_GRAVITY);\n      } else {\n        this.physicsBody.setFlags(RIGID_BODY_FLAGS.NONE);\n      }\n      this.physicsBody.setGravity(this.gravity);\n    }\n  }\n\n  if (\n    (bodyConfig.linearSleepingThreshold && bodyConfig.linearSleepingThreshold != this.linearSleepingThreshold) ||\n    (bodyConfig.angularSleepingThreshold && bodyConfig.angularSleepingThreshold != this.angularSleepingThreshold)\n  ) {\n    if (bodyConfig.linearSleepingThreshold) this.linearSleepingThreshold = bodyConfig.linearSleepingThreshold;\n    if (bodyConfig.angularSleepingThreshold) this.angularSleepingThreshold = bodyConfig.angularSleepingThreshold;\n    this.physicsBody.setSleepingThresholds(this.linearSleepingThreshold, this.angularSleepingThreshold);\n  }\n\n  if (bodyConfig.angularFactor && !almostEqualsVector3(0.001, bodyConfig.angularFactor, this.angularFactor)) {\n    this.angularFactor.copy(bodyConfig.angularFactor);\n    const angularFactor = new Ammo.btVector3(this.angularFactor.x, this.angularFactor.y, this.angularFactor.z);\n    this.physicsBody.setAngularFactor(angularFactor);\n    Ammo.destroy(angularFactor);\n  }\n\n  //TODO: support dynamic update for other properties\n};\n\n/**\n * Removes the component and all physics and scene side effects.\n */\nBody.prototype.destroy = function() {\n  if (this.triMesh) Ammo.destroy(this.triMesh);\n  if (this.localScaling) Ammo.destroy(this.localScaling);\n\n  for (let i = 0; i < this.shapes.length; i++) {\n    this.compoundShape.removeChildShape([i]);\n  }\n  if (this.compoundShape) Ammo.destroy(this.compoundShape);\n\n  this.world.removeBody(this.physicsBody);\n  Ammo.destroy(this.physicsBody);\n  delete this.physicsBody;\n  Ammo.destroy(this.rbInfo);\n  Ammo.destroy(this.msTransform);\n  Ammo.destroy(this.motionState);\n  Ammo.destroy(this.localInertia);\n  Ammo.destroy(this.rotation);\n  Ammo.destroy(this.gravity);\n};\n\n/**\n * Updates the rigid body's position, velocity, and rotation, based on the scene.\n */\nBody.prototype.syncToPhysics = (function() {\n  const q = new THREE.Quaternion();\n  const v = new THREE.Vector3();\n  const q2 = new THREE.Vector3();\n  const v2 = new THREE.Vector3();\n  return function(setCenterOfMassTransform) {\n    const body = this.physicsBody;\n    if (!body) return;\n\n    this.motionState.getWorldTransform(this.msTransform);\n\n    this.object3D.getWorldPosition(v);\n    this.object3D.getWorldQuaternion(q);\n\n    const position = this.msTransform.getOrigin();\n    v2.set(position.x(), position.y(), position.z());\n\n    const quaternion = this.msTransform.getRotation();\n    q2.set(quaternion.x(), quaternion.y(), quaternion.z(), quaternion.w());\n\n    if (!almostEqualsVector3(0.001, v, v2) || !almostEqualsQuaternion(0.001, q, q2)) {\n      if (!this.physicsBody.isActive()) {\n        this.physicsBody.activate(true);\n      }\n      this.msTransform.getOrigin().setValue(v.x, v.y, v.z);\n      this.rotation.setValue(q.x, q.y, q.z, q.w);\n      this.msTransform.setRotation(this.rotation);\n      this.motionState.setWorldTransform(this.msTransform);\n\n      if (this.type === TYPE.STATIC || setCenterOfMassTransform) {\n        this.physicsBody.setCenterOfMassTransform(this.msTransform);\n      }\n    }\n  };\n})();\n\n/**\n * Updates the scene object's position and rotation, based on the physics simulation.\n */\nBody.prototype.syncFromPhysics = (function() {\n  const v = new THREE.Vector3(),\n    q1 = new THREE.Quaternion(),\n    q2 = new THREE.Quaternion();\n  return function() {\n    this.motionState.getWorldTransform(this.msTransform);\n    const position = this.msTransform.getOrigin();\n    const quaternion = this.msTransform.getRotation();\n\n    const body = this.physicsBody;\n\n    if (!body) return;\n\n    q1.set(quaternion.x(), quaternion.y(), quaternion.z(), quaternion.w());\n    this.object3D.parent.getWorldQuaternion(q2);\n    q1.multiply(q2.inverse());\n    this.object3D.quaternion.copy(q1);\n\n    v.set(position.x(), position.y(), position.z());\n    this.object3D.parent.worldToLocal(v);\n    this.object3D.position.copy(v);\n  };\n})();\n\nBody.prototype.addShape = function(collisionShape) {\n  if (collisionShape.type === SHAPE.MESH && this.type !== TYPE.STATIC) {\n    console.warn(\"non-static mesh colliders not supported\");\n    return;\n  }\n\n  this.shapes.push(collisionShape);\n  this.compoundShape.addChildShape(collisionShape.localTransform, collisionShape);\n  this.shapesChanged = true;\n  this.updateShapes();\n};\n\nBody.prototype.removeShape = function(collisionShape) {\n  const index = this.shapes.indexOf(collisionShape);\n  if (this.compoundShape && index !== -1) {\n    this.compoundShape.removeChildShape(this.shapes[index]);\n    this.shapesChanged = true;\n    this.shapes.splice(index, 1);\n    this.updateShapes();\n  }\n};\n\nBody.prototype.updateMass = function() {\n  const shape = this.physicsBody.getCollisionShape();\n  const mass = this.type === TYPE.STATIC ? 0 : this.mass;\n  shape.calculateLocalInertia(mass, this.localInertia);\n  this.physicsBody.setMassProps(mass, this.localInertia);\n  this.physicsBody.updateInertiaTensor();\n};\n\nBody.prototype.updateCollisionFlags = function() {\n  let flags = this.disableCollision ? 4 : 0;\n  switch (this.type) {\n    case TYPE.STATIC:\n      flags |= COLLISION_FLAG.STATIC_OBJECT;\n      break;\n    case TYPE.KINEMATIC:\n      flags |= COLLISION_FLAG.KINEMATIC_OBJECT;\n      break;\n    default:\n      this.physicsBody.applyGravity();\n      break;\n  }\n  this.physicsBody.setCollisionFlags(flags);\n\n  this.updateMass();\n\n  // TODO: enable CCD if dynamic?\n  // this.physicsBody.setCcdMotionThreshold(0.001);\n  // this.physicsBody.setCcdSweptSphereRadius(0.001);\n\n  this.world.updateBody(this.physicsBody);\n};\n\nBody.prototype.getVelocity = function() {\n  return this.physicsBody.getLinearVelocity();\n};\n\nmodule.exports = Body;\n","/* global Ammo */\nconst CONSTRAINT = require(\"../constants\").CONSTRAINT;\nconst CONSTRAINTS = [\n  CONSTRAINT.LOCK,\n  CONSTRAINT.FIXED,\n  CONSTRAINT.SPRING,\n  CONSTRAINT.SLIDER,\n  CONSTRAINT.HINGE,\n  CONSTRAINT.CONE_TWIST,\n  CONSTRAINT.POINT_TO_POINT\n];\n\n/**\n * @return {Ammo.btTypedConstraint}\n */\nfunction Constraint(constraintConfig, body, targetBody, world) {\n  this.physicsConstraint;\n\n  this.world = world;\n\n  const type =\n    constraintConfig.type && CONSTRAINTS.indexOf(constraintConfig.type) ? constraintConfig.type : CONSTRAINT.LOCK;\n\n  const bodyTransform = body.physicsBody\n    .getCenterOfMassTransform()\n    .inverse()\n    .op_mul(targetBody.physicsBody.getWorldTransform());\n  const targetTransform = new Ammo.btTransform();\n  targetTransform.setIdentity();\n\n  switch (type) {\n    case CONSTRAINT.LOCK: {\n      this.physicsConstraint = new Ammo.btGeneric6DofConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform,\n        true\n      );\n      const zero = new Ammo.btVector3(0, 0, 0);\n      //TODO: allow these to be configurable\n      this.physicsConstraint.setLinearLowerLimit(zero);\n      this.physicsConstraint.setLinearUpperLimit(zero);\n      this.physicsConstraint.setAngularLowerLimit(zero);\n      this.physicsConstraint.setAngularUpperLimit(zero);\n      Ammo.destroy(zero);\n      break;\n    }\n    //TODO: test and verify all other constraint types\n    case CONSTRAINT.FIXED: {\n      //btFixedConstraint does not seem to debug render\n      bodyTransform.setRotation(body.physicsBody.getWorldTransform().getRotation());\n      targetTransform.setRotation(targetBody.physicsBody.getWorldTransform().getRotation());\n      this.physicsConstraint = new Ammo.btFixedConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform\n      );\n      break;\n    }\n    case CONSTRAINT.SPRING: {\n      this.physicsConstraint = new Ammo.btGeneric6DofSpringConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform,\n        true\n      );\n      //TODO: enableSpring, setStiffness and setDamping\n      break;\n    }\n    case CONSTRAINT.SLIDER: {\n      //TODO: support setting linear and angular limits\n      this.physicsConstraint = new Ammo.btSliderConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform,\n        true\n      );\n      this.physicsConstraint.setLowerLinLimit(-1);\n      this.physicsConstraint.setUpperLinLimit(1);\n      // this.physicsConstraint.setLowerAngLimit();\n      // this.physicsConstraint.setUpperAngLimit();\n      break;\n    }\n    case CONSTRAINT.HINGE: {\n      if (!constraintConfig.pivot) {\n        throw new Error(\"pivot must be defined for type: hinge\");\n      }\n      if (!constraintConfig.targetPivot) {\n        throw new Error(\"targetPivot must be defined for type: hinge\");\n      }\n      if (!constraintConfig.axis) {\n        throw new Error(\"axis must be defined for type: hinge\");\n      }\n      if (!constraintConfig.targetAxis) {\n        throw new Error(\"targetAxis must be defined for type: hinge\");\n      }\n\n      const pivot = new Ammo.btVector3(constraintConfig.pivot.x, constraintConfig.pivot.y, constraintConfig.pivot.z);\n      const targetPivot = new Ammo.btVector3(\n        constraintConfig.targetPivot.x,\n        constraintConfig.targetPivot.y,\n        constraintConfig.targetPivot.z\n      );\n\n      const axis = new Ammo.btVector3(constraintConfig.axis.x, constraintConfig.axis.y, constraintConfig.axis.z);\n      const targetAxis = new Ammo.btVector3(\n        constraintConfig.targetAxis.x,\n        constraintConfig.targetAxis.y,\n        constraintConfig.targetAxis.z\n      );\n\n      this.physicsConstraint = new Ammo.btHingeConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        pivot,\n        targetPivot,\n        axis,\n        targetAxis,\n        true\n      );\n\n      Ammo.destroy(pivot);\n      Ammo.destroy(targetPivot);\n      Ammo.destroy(axis);\n      Ammo.destroy(targetAxis);\n      break;\n    }\n    case CONSTRAINT.CONE_TWIST: {\n      if (!constraintConfig.pivot) {\n        throw new Error(\"pivot must be defined for type: cone-twist\");\n      }\n      if (!constraintConfig.targetPivot) {\n        throw new Error(\"targetPivot must be defined for type: cone-twist\");\n      }\n\n      const pivotTransform = new Ammo.btTransform();\n      pivotTransform.setIdentity();\n      pivotTransform\n        .getOrigin()\n        .setValue(constraintConfig.targetPivot.x, constraintConfig.targetPivot.y, constraintConfig.targetPivot.z);\n      this.physicsConstraint = new Ammo.btConeTwistConstraint(body.physicsBody, pivotTransform);\n      Ammo.destroy(pivotTransform);\n      break;\n    }\n    case CONSTRAINT.POINT_TO_POINT: {\n      if (!constraintConfig.pivot) {\n        throw new Error(\"pivot must be defined for type: point-to-point\");\n      }\n      if (!constraintConfig.targetPivot) {\n        throw new Error(\"targetPivot must be defined for type: point-to-point\");\n      }\n\n      const pivot = new Ammo.btVector3(constraintConfig.pivot.x, constraintConfig.pivot.y, constraintConfig.pivot.z);\n      const targetPivot = new Ammo.btVector3(\n        constraintConfig.targetPivot.x,\n        constraintConfig.targetPivot.y,\n        constraintConfig.targetPivot.z\n      );\n\n      this.physicsConstraint = new Ammo.btPoint2PointConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        pivot,\n        targetPivot\n      );\n\n      Ammo.destroy(pivot);\n      Ammo.destroy(targetPivot);\n      break;\n    }\n  }\n\n  Ammo.destroy(bodyTransform);\n  Ammo.destroy(targetTransform);\n\n  this.world.physicsWorld.addConstraint(this.physicsConstraint, false);\n}\n\nConstraint.prototype.destroy = function() {\n  if (!this.physicsConstraint) return;\n\n  this.world.physicsWorld.removeConstraint(this.physicsConstraint);\n  Ammo.destroy(this.physicsConstraint);\n  this.physicsConstraint = null;\n};\n\nmodule.exports = Constraint;\n","module.exports = function() {\n  return require(\"!!/Users/gheric/GitHub/custom-hubs-template/hubs/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(r){var n={};function t(e){if(n[e])return n[e].exports;var a=n[e]={i:e,l:!1,exports:{}};return r[e].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=r,t.c=n,t.d=function(r,n,e){t.o(r,n)||Object.defineProperty(r,n,{enumerable:!0,get:e})},t.r=function(r){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(r,\\\"__esModule\\\",{value:!0})},t.t=function(r,n){if(1&n&&(r=t(r)),8&n)return r;if(4&n&&\\\"object\\\"==typeof r&&r&&r.__esModule)return r;var e=Object.create(null);if(t.r(e),Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:r}),2&n&&\\\"string\\\"!=typeof r)for(var a in r)t.d(e,a,function(n){return r[n]}.bind(null,a));return e},t.n=function(r){var n=r&&r.__esModule?function(){return r.default}:function(){return r};return t.d(n,\\\"a\\\",n),n},t.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},t.p=\\\"/custom-hubs-template/\\\",t(t.s=3)}([function(r,n,t){\\\"use strict\\\";var e=t(4),a=t(7),o=[].slice,l=[\\\"keyword\\\",\\\"gray\\\",\\\"hex\\\"],i={};Object.keys(a).forEach(function(r){i[o.call(a[r].labels).sort().join(\\\"\\\")]=r});var s={};function u(r,n){if(!(this instanceof u))return new u(r,n);if(n&&n in l&&(n=null),n&&!(n in a))throw new Error(\\\"Unknown model: \\\"+n);var t,h;if(null==r)this.model=\\\"rgb\\\",this.color=[0,0,0],this.valpha=1;else if(r instanceof u)this.model=r.model,this.color=r.color.slice(),this.valpha=r.valpha;else if(\\\"string\\\"==typeof r){var c=e.get(r);if(null===c)throw new Error(\\\"Unable to parse color from string: \\\"+r);this.model=c.model,h=a[this.model].channels,this.color=c.value.slice(0,h),this.valpha=\\\"number\\\"==typeof c.value[h]?c.value[h]:1}else if(r.length){this.model=n||\\\"rgb\\\",h=a[this.model].channels;var g=o.call(r,0,h);this.color=f(g,h),this.valpha=\\\"number\\\"==typeof r[h]?r[h]:1}else if(\\\"number\\\"==typeof r)r&=16777215,this.model=\\\"rgb\\\",this.color=[r>>16&255,r>>8&255,255&r],this.valpha=1;else{this.valpha=1;var b=Object.keys(r);\\\"alpha\\\"in r&&(b.splice(b.indexOf(\\\"alpha\\\"),1),this.valpha=\\\"number\\\"==typeof r.alpha?r.alpha:0);var p=b.sort().join(\\\"\\\");if(!(p in i))throw new Error(\\\"Unable to parse color from object: \\\"+JSON.stringify(r));this.model=i[p];var v=a[this.model].labels,d=[];for(t=0;t<v.length;t++)d.push(r[v[t]]);this.color=f(d)}if(s[this.model])for(h=a[this.model].channels,t=0;t<h;t++){var m=s[this.model][t];m&&(this.color[t]=m(this.color[t]))}this.valpha=Math.max(0,Math.min(1,this.valpha)),Object.freeze&&Object.freeze(this)}function h(r,n,t){return(r=Array.isArray(r)?r:[r]).forEach(function(r){(s[r]||(s[r]=[]))[n]=t}),r=r[0],function(e){var a;return arguments.length?(t&&(e=t(e)),(a=this[r]()).color[n]=e,a):(a=this[r]().color[n],t&&(a=t(a)),a)}}function c(r){return function(n){return Math.max(0,Math.min(r,n))}}function f(r,n){for(var t=0;t<n;t++)\\\"number\\\"!=typeof r[t]&&(r[t]=0);return r}u.prototype={toString:function(){return this.string()},toJSON:function(){return this[this.model]()},string:function(r){var n=this.model in e.to?this:this.rgb(),t=1===(n=n.round(\\\"number\\\"==typeof r?r:1)).valpha?n.color:n.color.concat(this.valpha);return e.to[n.model](t)},percentString:function(r){var n=this.rgb().round(\\\"number\\\"==typeof r?r:1),t=1===n.valpha?n.color:n.color.concat(this.valpha);return e.to.rgb.percent(t)},array:function(){return 1===this.valpha?this.color.slice():this.color.concat(this.valpha)},object:function(){for(var r={},n=a[this.model].channels,t=a[this.model].labels,e=0;e<n;e++)r[t[e]]=this.color[e];return 1!==this.valpha&&(r.alpha=this.valpha),r},unitArray:function(){var r=this.rgb().color;return r[0]/=255,r[1]/=255,r[2]/=255,1!==this.valpha&&r.push(this.valpha),r},unitObject:function(){var r=this.rgb().object();return r.r/=255,r.g/=255,r.b/=255,1!==this.valpha&&(r.alpha=this.valpha),r},round:function(r){return r=Math.max(r||0,0),new u(this.color.map(function(r){return function(n){return function(r,n){return Number(r.toFixed(n))}(n,r)}}(r)).concat(this.valpha),this.model)},alpha:function(r){return arguments.length?new u(this.color.concat(Math.max(0,Math.min(1,r))),this.model):this.valpha},red:h(\\\"rgb\\\",0,c(255)),green:h(\\\"rgb\\\",1,c(255)),blue:h(\\\"rgb\\\",2,c(255)),hue:h([\\\"hsl\\\",\\\"hsv\\\",\\\"hsl\\\",\\\"hwb\\\",\\\"hcg\\\"],0,function(r){return(r%360+360)%360}),saturationl:h(\\\"hsl\\\",1,c(100)),lightness:h(\\\"hsl\\\",2,c(100)),saturationv:h(\\\"hsv\\\",1,c(100)),value:h(\\\"hsv\\\",2,c(100)),chroma:h(\\\"hcg\\\",1,c(100)),gray:h(\\\"hcg\\\",2,c(100)),white:h(\\\"hwb\\\",1,c(100)),wblack:h(\\\"hwb\\\",2,c(100)),cyan:h(\\\"cmyk\\\",0,c(100)),magenta:h(\\\"cmyk\\\",1,c(100)),yellow:h(\\\"cmyk\\\",2,c(100)),black:h(\\\"cmyk\\\",3,c(100)),x:h(\\\"xyz\\\",0,c(100)),y:h(\\\"xyz\\\",1,c(100)),z:h(\\\"xyz\\\",2,c(100)),l:h(\\\"lab\\\",0,c(100)),a:h(\\\"lab\\\",1),b:h(\\\"lab\\\",2),keyword:function(r){return arguments.length?new u(r):a[this.model].keyword(this.color)},hex:function(r){return arguments.length?new u(r):e.to.hex(this.rgb().round().color)},rgbNumber:function(){var r=this.rgb().color;return(255&r[0])<<16|(255&r[1])<<8|255&r[2]},luminosity:function(){for(var r=this.rgb().color,n=[],t=0;t<r.length;t++){var e=r[t]/255;n[t]=e<=.03928?e/12.92:Math.pow((e+.055)/1.055,2.4)}return.2126*n[0]+.7152*n[1]+.0722*n[2]},contrast:function(r){var n=this.luminosity(),t=r.luminosity();return n>t?(n+.05)/(t+.05):(t+.05)/(n+.05)},level:function(r){var n=this.contrast(r);return n>=7.1?\\\"AAA\\\":n>=4.5?\\\"AA\\\":\\\"\\\"},isDark:function(){var r=this.rgb().color;return(299*r[0]+587*r[1]+114*r[2])/1e3<128},isLight:function(){return!this.isDark()},negate:function(){for(var r=this.rgb(),n=0;n<3;n++)r.color[n]=255-r.color[n];return r},lighten:function(r){var n=this.hsl();return n.color[2]+=n.color[2]*r,n},darken:function(r){var n=this.hsl();return n.color[2]-=n.color[2]*r,n},saturate:function(r){var n=this.hsl();return n.color[1]+=n.color[1]*r,n},desaturate:function(r){var n=this.hsl();return n.color[1]-=n.color[1]*r,n},whiten:function(r){var n=this.hwb();return n.color[1]+=n.color[1]*r,n},blacken:function(r){var n=this.hwb();return n.color[2]+=n.color[2]*r,n},grayscale:function(){var r=this.rgb().color,n=.3*r[0]+.59*r[1]+.11*r[2];return u.rgb(n,n,n)},fade:function(r){return this.alpha(this.valpha-this.valpha*r)},opaquer:function(r){return this.alpha(this.valpha+this.valpha*r)},rotate:function(r){var n=this.hsl(),t=n.color[0];return t=(t=(t+r)%360)<0?360+t:t,n.color[0]=t,n},mix:function(r,n){if(!r||!r.rgb)throw new Error('Argument to \\\"mix\\\" was not a Color instance, but rather an instance of '+typeof r);var t=r.rgb(),e=this.rgb(),a=void 0===n?.5:n,o=2*a-1,l=t.alpha()-e.alpha(),i=((o*l==-1?o:(o+l)/(1+o*l))+1)/2,s=1-i;return u.rgb(i*t.red()+s*e.red(),i*t.green()+s*e.green(),i*t.blue()+s*e.blue(),t.alpha()*a+e.alpha()*(1-a))}},Object.keys(a).forEach(function(r){if(-1===l.indexOf(r)){var n=a[r].channels;u.prototype[r]=function(){if(this.model===r)return new u(this);if(arguments.length)return new u(arguments,r);var t,e=\\\"number\\\"==typeof arguments[n]?n:this.valpha;return new u((t=a[this.model][r].raw(this.color),Array.isArray(t)?t:[t]).concat(e),r)},u[r]=function(t){return\\\"number\\\"==typeof t&&(t=f(o.call(arguments),n)),new u(t,r)}}}),r.exports=u},function(r,n){r.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},function(r,n,t){var e=t(1),a={};for(var o in e)e.hasOwnProperty(o)&&(a[e[o]]=o);var l=r.exports={rgb:{channels:3,labels:\\\"rgb\\\"},hsl:{channels:3,labels:\\\"hsl\\\"},hsv:{channels:3,labels:\\\"hsv\\\"},hwb:{channels:3,labels:\\\"hwb\\\"},cmyk:{channels:4,labels:\\\"cmyk\\\"},xyz:{channels:3,labels:\\\"xyz\\\"},lab:{channels:3,labels:\\\"lab\\\"},lch:{channels:3,labels:\\\"lch\\\"},hex:{channels:1,labels:[\\\"hex\\\"]},keyword:{channels:1,labels:[\\\"keyword\\\"]},ansi16:{channels:1,labels:[\\\"ansi16\\\"]},ansi256:{channels:1,labels:[\\\"ansi256\\\"]},hcg:{channels:3,labels:[\\\"h\\\",\\\"c\\\",\\\"g\\\"]},apple:{channels:3,labels:[\\\"r16\\\",\\\"g16\\\",\\\"b16\\\"]},gray:{channels:1,labels:[\\\"gray\\\"]}};for(var i in l)if(l.hasOwnProperty(i)){if(!(\\\"channels\\\"in l[i]))throw new Error(\\\"missing channels property: \\\"+i);if(!(\\\"labels\\\"in l[i]))throw new Error(\\\"missing channel labels property: \\\"+i);if(l[i].labels.length!==l[i].channels)throw new Error(\\\"channel and label counts mismatch: \\\"+i);var s=l[i].channels,u=l[i].labels;delete l[i].channels,delete l[i].labels,Object.defineProperty(l[i],\\\"channels\\\",{value:s}),Object.defineProperty(l[i],\\\"labels\\\",{value:u})}l.rgb.hsl=function(r){var n,t,e=r[0]/255,a=r[1]/255,o=r[2]/255,l=Math.min(e,a,o),i=Math.max(e,a,o),s=i-l;return i===l?n=0:e===i?n=(a-o)/s:a===i?n=2+(o-e)/s:o===i&&(n=4+(e-a)/s),(n=Math.min(60*n,360))<0&&(n+=360),t=(l+i)/2,[n,100*(i===l?0:t<=.5?s/(i+l):s/(2-i-l)),100*t]},l.rgb.hsv=function(r){var n,t,e,a,o,l=r[0]/255,i=r[1]/255,s=r[2]/255,u=Math.max(l,i,s),h=u-Math.min(l,i,s),c=function(r){return(u-r)/6/h+.5};return 0===h?a=o=0:(o=h/u,n=c(l),t=c(i),e=c(s),l===u?a=e-t:i===u?a=1/3+n-e:s===u&&(a=2/3+t-n),a<0?a+=1:a>1&&(a-=1)),[360*a,100*o,100*u]},l.rgb.hwb=function(r){var n=r[0],t=r[1],e=r[2];return[l.rgb.hsl(r)[0],100*(1/255*Math.min(n,Math.min(t,e))),100*(e=1-1/255*Math.max(n,Math.max(t,e)))]},l.rgb.cmyk=function(r){var n,t=r[0]/255,e=r[1]/255,a=r[2]/255;return[100*((1-t-(n=Math.min(1-t,1-e,1-a)))/(1-n)||0),100*((1-e-n)/(1-n)||0),100*((1-a-n)/(1-n)||0),100*n]},l.rgb.keyword=function(r){var n=a[r];if(n)return n;var t,o,l,i=1/0;for(var s in e)if(e.hasOwnProperty(s)){var u=e[s],h=(o=r,l=u,Math.pow(o[0]-l[0],2)+Math.pow(o[1]-l[1],2)+Math.pow(o[2]-l[2],2));h<i&&(i=h,t=s)}return t},l.keyword.rgb=function(r){return e[r]},l.rgb.xyz=function(r){var n=r[0]/255,t=r[1]/255,e=r[2]/255;return[100*(.4124*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.3576*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.1805*(e=e>.04045?Math.pow((e+.055)/1.055,2.4):e/12.92)),100*(.2126*n+.7152*t+.0722*e),100*(.0193*n+.1192*t+.9505*e)]},l.rgb.lab=function(r){var n=l.rgb.xyz(r),t=n[0],e=n[1],a=n[2];return e/=100,a/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(e=e>.008856?Math.pow(e,1/3):7.787*e+16/116)-16,500*(t-e),200*(e-(a=a>.008856?Math.pow(a,1/3):7.787*a+16/116))]},l.hsl.rgb=function(r){var n,t,e,a,o,l=r[0]/360,i=r[1]/100,s=r[2]/100;if(0===i)return[o=255*s,o,o];n=2*s-(t=s<.5?s*(1+i):s+i-s*i),a=[0,0,0];for(var u=0;u<3;u++)(e=l+1/3*-(u-1))<0&&e++,e>1&&e--,o=6*e<1?n+6*(t-n)*e:2*e<1?t:3*e<2?n+(t-n)*(2/3-e)*6:n,a[u]=255*o;return a},l.hsl.hsv=function(r){var n=r[0],t=r[1]/100,e=r[2]/100,a=t,o=Math.max(e,.01);return t*=(e*=2)<=1?e:2-e,a*=o<=1?o:2-o,[n,100*(0===e?2*a/(o+a):2*t/(e+t)),100*((e+t)/2)]},l.hsv.rgb=function(r){var n=r[0]/60,t=r[1]/100,e=r[2]/100,a=Math.floor(n)%6,o=n-Math.floor(n),l=255*e*(1-t),i=255*e*(1-t*o),s=255*e*(1-t*(1-o));switch(e*=255,a){case 0:return[e,s,l];case 1:return[i,e,l];case 2:return[l,e,s];case 3:return[l,i,e];case 4:return[s,l,e];case 5:return[e,l,i]}},l.hsv.hsl=function(r){var n,t,e,a=r[0],o=r[1]/100,l=r[2]/100,i=Math.max(l,.01);return e=(2-o)*l,t=o*i,[a,100*(t=(t/=(n=(2-o)*i)<=1?n:2-n)||0),100*(e/=2)]},l.hwb.rgb=function(r){var n,t,e,a,o,l,i,s=r[0]/360,u=r[1]/100,h=r[2]/100,c=u+h;switch(c>1&&(u/=c,h/=c),e=6*s-(n=Math.floor(6*s)),0!=(1&n)&&(e=1-e),a=u+e*((t=1-h)-u),n){default:case 6:case 0:o=t,l=a,i=u;break;case 1:o=a,l=t,i=u;break;case 2:o=u,l=t,i=a;break;case 3:o=u,l=a,i=t;break;case 4:o=a,l=u,i=t;break;case 5:o=t,l=u,i=a}return[255*o,255*l,255*i]},l.cmyk.rgb=function(r){var n=r[0]/100,t=r[1]/100,e=r[2]/100,a=r[3]/100;return[255*(1-Math.min(1,n*(1-a)+a)),255*(1-Math.min(1,t*(1-a)+a)),255*(1-Math.min(1,e*(1-a)+a))]},l.xyz.rgb=function(r){var n,t,e,a=r[0]/100,o=r[1]/100,l=r[2]/100;return t=-.9689*a+1.8758*o+.0415*l,e=.0557*a+-.204*o+1.057*l,n=(n=3.2406*a+-1.5372*o+-.4986*l)>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,t=t>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,e=e>.0031308?1.055*Math.pow(e,1/2.4)-.055:12.92*e,[255*(n=Math.min(Math.max(0,n),1)),255*(t=Math.min(Math.max(0,t),1)),255*(e=Math.min(Math.max(0,e),1))]},l.xyz.lab=function(r){var n=r[0],t=r[1],e=r[2];return t/=100,e/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,[116*(t=t>.008856?Math.pow(t,1/3):7.787*t+16/116)-16,500*(n-t),200*(t-(e=e>.008856?Math.pow(e,1/3):7.787*e+16/116))]},l.lab.xyz=function(r){var n,t,e,a=r[0];n=r[1]/500+(t=(a+16)/116),e=t-r[2]/200;var o=Math.pow(t,3),l=Math.pow(n,3),i=Math.pow(e,3);return t=o>.008856?o:(t-16/116)/7.787,n=l>.008856?l:(n-16/116)/7.787,e=i>.008856?i:(e-16/116)/7.787,[n*=95.047,t*=100,e*=108.883]},l.lab.lch=function(r){var n,t=r[0],e=r[1],a=r[2];return(n=360*Math.atan2(a,e)/2/Math.PI)<0&&(n+=360),[t,Math.sqrt(e*e+a*a),n]},l.lch.lab=function(r){var n,t=r[0],e=r[1];return n=r[2]/360*2*Math.PI,[t,e*Math.cos(n),e*Math.sin(n)]},l.rgb.ansi16=function(r){var n=r[0],t=r[1],e=r[2],a=1 in arguments?arguments[1]:l.rgb.hsv(r)[2];if(0===(a=Math.round(a/50)))return 30;var o=30+(Math.round(e/255)<<2|Math.round(t/255)<<1|Math.round(n/255));return 2===a&&(o+=60),o},l.hsv.ansi16=function(r){return l.rgb.ansi16(l.hsv.rgb(r),r[2])},l.rgb.ansi256=function(r){var n=r[0],t=r[1],e=r[2];return n===t&&t===e?n<8?16:n>248?231:Math.round((n-8)/247*24)+232:16+36*Math.round(n/255*5)+6*Math.round(t/255*5)+Math.round(e/255*5)},l.ansi16.rgb=function(r){var n=r%10;if(0===n||7===n)return r>50&&(n+=3.5),[n=n/10.5*255,n,n];var t=.5*(1+~~(r>50));return[(1&n)*t*255,(n>>1&1)*t*255,(n>>2&1)*t*255]},l.ansi256.rgb=function(r){if(r>=232){var n=10*(r-232)+8;return[n,n,n]}var t;return r-=16,[Math.floor(r/36)/5*255,Math.floor((t=r%36)/6)/5*255,t%6/5*255]},l.rgb.hex=function(r){var n=(((255&Math.round(r[0]))<<16)+((255&Math.round(r[1]))<<8)+(255&Math.round(r[2]))).toString(16).toUpperCase();return\\\"000000\\\".substring(n.length)+n},l.hex.rgb=function(r){var n=r.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!n)return[0,0,0];var t=n[0];3===n[0].length&&(t=t.split(\\\"\\\").map(function(r){return r+r}).join(\\\"\\\"));var e=parseInt(t,16);return[e>>16&255,e>>8&255,255&e]},l.rgb.hcg=function(r){var n,t=r[0]/255,e=r[1]/255,a=r[2]/255,o=Math.max(Math.max(t,e),a),l=Math.min(Math.min(t,e),a),i=o-l;return n=i<=0?0:o===t?(e-a)/i%6:o===e?2+(a-t)/i:4+(t-e)/i+4,n/=6,[360*(n%=1),100*i,100*(i<1?l/(1-i):0)]},l.hsl.hcg=function(r){var n=r[1]/100,t=r[2]/100,e=1,a=0;return(e=t<.5?2*n*t:2*n*(1-t))<1&&(a=(t-.5*e)/(1-e)),[r[0],100*e,100*a]},l.hsv.hcg=function(r){var n=r[1]/100,t=r[2]/100,e=n*t,a=0;return e<1&&(a=(t-e)/(1-e)),[r[0],100*e,100*a]},l.hcg.rgb=function(r){var n=r[0]/360,t=r[1]/100,e=r[2]/100;if(0===t)return[255*e,255*e,255*e];var a,o=[0,0,0],l=n%1*6,i=l%1,s=1-i;switch(Math.floor(l)){case 0:o[0]=1,o[1]=i,o[2]=0;break;case 1:o[0]=s,o[1]=1,o[2]=0;break;case 2:o[0]=0,o[1]=1,o[2]=i;break;case 3:o[0]=0,o[1]=s,o[2]=1;break;case 4:o[0]=i,o[1]=0,o[2]=1;break;default:o[0]=1,o[1]=0,o[2]=s}return a=(1-t)*e,[255*(t*o[0]+a),255*(t*o[1]+a),255*(t*o[2]+a)]},l.hcg.hsv=function(r){var n=r[1]/100,t=n+r[2]/100*(1-n),e=0;return t>0&&(e=n/t),[r[0],100*e,100*t]},l.hcg.hsl=function(r){var n=r[1]/100,t=r[2]/100*(1-n)+.5*n,e=0;return t>0&&t<.5?e=n/(2*t):t>=.5&&t<1&&(e=n/(2*(1-t))),[r[0],100*e,100*t]},l.hcg.hwb=function(r){var n=r[1]/100,t=n+r[2]/100*(1-n);return[r[0],100*(t-n),100*(1-t)]},l.hwb.hcg=function(r){var n=r[1]/100,t=1-r[2]/100,e=t-n,a=0;return e<1&&(a=(t-e)/(1-e)),[r[0],100*e,100*a]},l.apple.rgb=function(r){return[r[0]/65535*255,r[1]/65535*255,r[2]/65535*255]},l.rgb.apple=function(r){return[r[0]/255*65535,r[1]/255*65535,r[2]/255*65535]},l.gray.rgb=function(r){return[r[0]/100*255,r[0]/100*255,r[0]/100*255]},l.gray.hsl=l.gray.hsv=function(r){return[0,0,r[0]]},l.gray.hwb=function(r){return[0,100,r[0]]},l.gray.cmyk=function(r){return[0,0,0,r[0]]},l.gray.lab=function(r){return[r[0],0,0]},l.gray.hex=function(r){var n=255&Math.round(r[0]/100*255),t=((n<<16)+(n<<8)+n).toString(16).toUpperCase();return\\\"000000\\\".substring(t.length)+t},l.rgb.gray=function(r){return[(r[0]+r[1]+r[2])/3/255*100]}},function(r,n,t){\\\"use strict\\\";t.r(n);var e=t(0),a=t.n(e);function o(r,n,t,e,a,o,l){try{var i=r[o](l),s=i.value}catch(r){return void t(r)}i.done?n(s):Promise.resolve(s).then(e,a)}function l(r){return function(){var n=this,t=arguments;return new Promise(function(e,a){var l=r.apply(n,t);function i(r){o(l,e,a,i,s,\\\"next\\\",r)}function s(r){o(l,e,a,i,s,\\\"throw\\\",r)}i(void 0)})}}self.onmessage=function(){var r=l(function*(r){const n=yield function(r,n){const t=\\\"action\\\"===r?a()(\\\"#ff3464\\\"):a()(\\\"#2F80ED\\\"),e=a()(n).hsl(),o=t.hsl(),i=e.hue()-o.hue(),s=e.saturationl()/o.saturationl(),u=e.lightness()/o.lightness();return h=l(function*(r){const n=(()=>{const r=(r,n)=>Math.abs(r-n)<5;return(n,t,e)=>r(n,t)&&r(t,e)&&r(n,e)})(),t={};for(let e=0,o=r.length;e<o;e+=4){const o=r[e],l=r[e+1],h=r[e+2];if(!n(o,l,h)){const n=o+1e3*l+1e6*h;if(!t[n]){let r=a()({r:o,g:l,b:h}).hsl();(r=r.rotate(i)).color[1]*=s,r.color[2]*=u;const[e,c,f]=r.rgb().array();t[n]=[e,c,f]}const[c,f,g]=t[n];r[e]=c,r[e+1]=f,r[e+2]=g}}return r}),function(r){return h.apply(this,arguments)};var h}(r.data.type,r.data.color)(new Uint8ClampedArray(r.data.payload));self.postMessage({id:r.data.id,result:n})});return function(n){return r.apply(this,arguments)}}()},function(r,n,t){var e=t(1),a=t(5),o={};for(var l in e)e.hasOwnProperty(l)&&(o[e[l]]=l);var i=r.exports={to:{},get:{}};function s(r,n,t){return Math.min(Math.max(n,r),t)}function u(r){var n=r.toString(16).toUpperCase();return n.length<2?\\\"0\\\"+n:n}i.get=function(r){var n,t;switch(r.substring(0,3).toLowerCase()){case\\\"hsl\\\":n=i.get.hsl(r),t=\\\"hsl\\\";break;case\\\"hwb\\\":n=i.get.hwb(r),t=\\\"hwb\\\";break;default:n=i.get.rgb(r),t=\\\"rgb\\\"}return n?{model:t,value:n}:null},i.get.rgb=function(r){if(!r)return null;var n,t,a,o=[0,0,0,1];if(n=r.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i)){for(a=n[2],n=n[1],t=0;t<3;t++){var l=2*t;o[t]=parseInt(n.slice(l,l+2),16)}a&&(o[3]=Math.round(parseInt(a,16)/255*100)/100)}else if(n=r.match(/^#([a-f0-9]{3,4})$/i)){for(a=(n=n[1])[3],t=0;t<3;t++)o[t]=parseInt(n[t]+n[t],16);a&&(o[3]=Math.round(parseInt(a+a,16)/255*100)/100)}else if(n=r.match(/^rgba?\\\\(\\\\s*([+-]?\\\\d+)\\\\s*,\\\\s*([+-]?\\\\d+)\\\\s*,\\\\s*([+-]?\\\\d+)\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$/)){for(t=0;t<3;t++)o[t]=parseInt(n[t+1],0);n[4]&&(o[3]=parseFloat(n[4]))}else{if(!(n=r.match(/^rgba?\\\\(\\\\s*([+-]?[\\\\d\\\\.]+)\\\\%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$/)))return(n=r.match(/(\\\\D+)/))?\\\"transparent\\\"===n[1]?[0,0,0,0]:(o=e[n[1]])?(o[3]=1,o):null:null;for(t=0;t<3;t++)o[t]=Math.round(2.55*parseFloat(n[t+1]));n[4]&&(o[3]=parseFloat(n[4]))}for(t=0;t<3;t++)o[t]=s(o[t],0,255);return o[3]=s(o[3],0,1),o},i.get.hsl=function(r){if(!r)return null;var n=r.match(/^hsla?\\\\(\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$/);if(n){var t=parseFloat(n[4]);return[(parseFloat(n[1])+360)%360,s(parseFloat(n[2]),0,100),s(parseFloat(n[3]),0,100),s(isNaN(t)?1:t,0,1)]}return null},i.get.hwb=function(r){if(!r)return null;var n=r.match(/^hwb\\\\(\\\\s*([+-]?\\\\d*[\\\\.]?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$/);if(n){var t=parseFloat(n[4]);return[(parseFloat(n[1])%360+360)%360,s(parseFloat(n[2]),0,100),s(parseFloat(n[3]),0,100),s(isNaN(t)?1:t,0,1)]}return null},i.to.hex=function(){var r=a(arguments);return\\\"#\\\"+u(r[0])+u(r[1])+u(r[2])+(r[3]<1?u(Math.round(255*r[3])):\\\"\\\")},i.to.rgb=function(){var r=a(arguments);return r.length<4||1===r[3]?\\\"rgb(\\\"+Math.round(r[0])+\\\", \\\"+Math.round(r[1])+\\\", \\\"+Math.round(r[2])+\\\")\\\":\\\"rgba(\\\"+Math.round(r[0])+\\\", \\\"+Math.round(r[1])+\\\", \\\"+Math.round(r[2])+\\\", \\\"+r[3]+\\\")\\\"},i.to.rgb.percent=function(){var r=a(arguments),n=Math.round(r[0]/255*100),t=Math.round(r[1]/255*100),e=Math.round(r[2]/255*100);return r.length<4||1===r[3]?\\\"rgb(\\\"+n+\\\"%, \\\"+t+\\\"%, \\\"+e+\\\"%)\\\":\\\"rgba(\\\"+n+\\\"%, \\\"+t+\\\"%, \\\"+e+\\\"%, \\\"+r[3]+\\\")\\\"},i.to.hsl=function(){var r=a(arguments);return r.length<4||1===r[3]?\\\"hsl(\\\"+r[0]+\\\", \\\"+r[1]+\\\"%, \\\"+r[2]+\\\"%)\\\":\\\"hsla(\\\"+r[0]+\\\", \\\"+r[1]+\\\"%, \\\"+r[2]+\\\"%, \\\"+r[3]+\\\")\\\"},i.to.hwb=function(){var r=a(arguments),n=\\\"\\\";return r.length>=4&&1!==r[3]&&(n=\\\", \\\"+r[3]),\\\"hwb(\\\"+r[0]+\\\", \\\"+r[1]+\\\"%, \\\"+r[2]+\\\"%\\\"+n+\\\")\\\"},i.to.keyword=function(r){return o[r.slice(0,3)]}},function(r,n,t){\\\"use strict\\\";var e=t(6),a=Array.prototype.concat,o=Array.prototype.slice,l=r.exports=function(r){for(var n=[],t=0,l=r.length;t<l;t++){var i=r[t];e(i)?n=a.call(n,o.call(i)):n.push(i)}return n};l.wrap=function(r){return function(){return r(l(arguments))}}},function(r,n){r.exports=function(r){return!(!r||\\\"string\\\"==typeof r)&&(r instanceof Array||Array.isArray(r)||r.length>=0&&(r.splice instanceof Function||Object.getOwnPropertyDescriptor(r,r.length-1)&&\\\"String\\\"!==r.constructor.name))}},function(r,n,t){var e=t(2),a=t(8),o={};Object.keys(e).forEach(function(r){o[r]={},Object.defineProperty(o[r],\\\"channels\\\",{value:e[r].channels}),Object.defineProperty(o[r],\\\"labels\\\",{value:e[r].labels});var n=a(r);Object.keys(n).forEach(function(t){var e=n[t];o[r][t]=function(r){var n=function(n){if(null==n)return n;arguments.length>1&&(n=Array.prototype.slice.call(arguments));var t=r(n);if(\\\"object\\\"==typeof t)for(var e=t.length,a=0;a<e;a++)t[a]=Math.round(t[a]);return t};return\\\"conversion\\\"in r&&(n.conversion=r.conversion),n}(e),o[r][t].raw=function(r){var n=function(n){return null==n?n:(arguments.length>1&&(n=Array.prototype.slice.call(arguments)),r(n))};return\\\"conversion\\\"in r&&(n.conversion=r.conversion),n}(e)})}),r.exports=o},function(r,n,t){var e=t(2);function a(r){var n=function(){for(var r={},n=Object.keys(e),t=n.length,a=0;a<t;a++)r[n[a]]={distance:-1,parent:null};return r}(),t=[r];for(n[r].distance=0;t.length;)for(var a=t.pop(),o=Object.keys(e[a]),l=o.length,i=0;i<l;i++){var s=o[i],u=n[s];-1===u.distance&&(u.distance=n[a].distance+1,u.parent=a,t.unshift(s))}return n}function o(r,n){return function(t){return n(r(t))}}function l(r,n){for(var t=[n[r].parent,r],a=e[n[r].parent][r],l=n[r].parent;n[l].parent;)t.unshift(n[l].parent),a=o(e[n[l].parent][l],a),l=n[l].parent;return a.conversion=t,a}r.exports=function(r){for(var n=a(r),t={},e=Object.keys(n),o=e.length,i=0;i<o;i++){var s=e[i];null!==n[s].parent&&(t[s]=l(s,n))}return t}}]);\\n//# sourceMappingURL=color-shift.worker-4115b9f1812ee8b680e7.js.map\", \"/\" + \"assets/js/color-shift.worker-4115b9f1812ee8b680e7.js\");\n};","/**\n * @author fernandojsg / http://fernandojsg.com\n * @author Don McCurdy / https://www.donmccurdy.com\n * @author Takahiro / https://github.com/takahirox\n */\n\nimport {\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tDoubleSide,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLinearFilter,\n\tLinearMipMapLinearFilter,\n\tLinearMipMapNearestFilter,\n\tMath as _Math,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipMapLinearFilter,\n\tNearestMipMapNearestFilter,\n\tPropertyBinding,\n\tRGBAFormat,\n\tRepeatWrapping,\n\tScene,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector3\n} from \"../../../build/three.module.js\";\n\n//------------------------------------------------------------------------------\n// Constants\n//------------------------------------------------------------------------------\nvar WEBGL_CONSTANTS = {\n\tPOINTS: 0x0000,\n\tLINES: 0x0001,\n\tLINE_LOOP: 0x0002,\n\tLINE_STRIP: 0x0003,\n\tTRIANGLES: 0x0004,\n\tTRIANGLE_STRIP: 0x0005,\n\tTRIANGLE_FAN: 0x0006,\n\n\tUNSIGNED_BYTE: 0x1401,\n\tUNSIGNED_SHORT: 0x1403,\n\tFLOAT: 0x1406,\n\tUNSIGNED_INT: 0x1405,\n\tARRAY_BUFFER: 0x8892,\n\tELEMENT_ARRAY_BUFFER: 0x8893,\n\n\tNEAREST: 0x2600,\n\tLINEAR: 0x2601,\n\tNEAREST_MIPMAP_NEAREST: 0x2700,\n\tLINEAR_MIPMAP_NEAREST: 0x2701,\n\tNEAREST_MIPMAP_LINEAR: 0x2702,\n\tLINEAR_MIPMAP_LINEAR: 0x2703,\n\n\tCLAMP_TO_EDGE: 33071,\n\tMIRRORED_REPEAT: 33648,\n\tREPEAT: 10497\n};\n\nvar THREE_TO_WEBGL = {};\n\nTHREE_TO_WEBGL[ NearestFilter ] = WEBGL_CONSTANTS.NEAREST;\nTHREE_TO_WEBGL[ NearestMipMapNearestFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[ NearestMipMapLinearFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_LINEAR;\nTHREE_TO_WEBGL[ LinearFilter ] = WEBGL_CONSTANTS.LINEAR;\nTHREE_TO_WEBGL[ LinearMipMapNearestFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[ LinearMipMapLinearFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_LINEAR;\n\nTHREE_TO_WEBGL[ ClampToEdgeWrapping ] = WEBGL_CONSTANTS.CLAMP_TO_EDGE;\nTHREE_TO_WEBGL[ RepeatWrapping ] = WEBGL_CONSTANTS.REPEAT;\nTHREE_TO_WEBGL[ MirroredRepeatWrapping ] = WEBGL_CONSTANTS.MIRRORED_REPEAT;\n\nvar PATH_PROPERTIES = {\n\tscale: 'scale',\n\tposition: 'translation',\n\tquaternion: 'rotation',\n\tmorphTargetInfluences: 'weights'\n};\n\nvar DEFAULT_OPTIONS = {\n\tmode: \"glb\",\n\ttrs: true,\n\tonlyVisible: true,\n\ttruncateDrawRange: true,\n\tanimations: [],\n\tforceIndices: false,\n\tforcePowerOfTwoTextures: false,\n\tincludeCustomExtensions: false\n};\n\n//------------------------------------------------------------------------------\n// GLTF Exporter\n//------------------------------------------------------------------------------\nvar GLTFExporter = function () {};\n\nGLTFExporter.prototype = {\n\n\tconstructor: GLTFExporter,\n\n\t/**\n\t * Parse scenes and generate an object containing the glTF JSON, buffers, and images.\n\t * @param  {Scene or [THREE.Scenes]} input   Scene or Array of THREE.Scenes\n\t * @param  {Function} onDone  Callback on completed\n\t * @param  {Function} onError Callback on error\n\t * @param  {Object} options options\n\t */\n\tparseChunks: function ( input, onDone, onError, options ) {\n\n\t\toptions = Object.assign( {}, DEFAULT_OPTIONS, options );\n\n\t\tif ( options.animations.length > 0 ) {\n\n\t\t\t// Only TRS properties, and not matrices, may be targeted by animation.\n\t\t\toptions.trs = true;\n\n\t\t}\n\n\t\tvar outputJSON = {\n\n\t\t\tasset: {\n\n\t\t\t\tversion: \"2.0\",\n\t\t\t\tgenerator: \"GLTFExporter\"\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar outputBuffers = [];\n\t\tvar outputImages = [];\n\n\t\tvar byteOffset = 0;\n\t\tvar buffers = [];\n\t\tvar pending = [];\n\t\tvar nodeMap = new Map();\n\t\tvar skins = [];\n\t\tvar extensionsUsed = {};\n\t\tvar cachedData = {\n\n\t\t\tmeshes: new Map(),\n\t\t\tattributes: new Map(),\n\t\t\tattributesRelative: new Map(),\n\t\t\tattributesNormalized: new Map(),\n\t\t\tmaterials: new Map(),\n\t\t\ttextures: new Map(),\n\t\t\timages: new Map()\n\n\t\t};\n\n\t\tvar cachedCanvas;\n\n\t\tvar uids = new Map();\n\t\tvar uid = 0;\n\n\t\t/**\n\t\t * Assign and return a temporal unique id for an object\n\t\t * especially which doesn't have .uuid\n\t\t * @param  {Object} object\n\t\t * @return {Integer}\n\t\t */\n\t\tfunction getUID( object ) {\n\n\t\t\tif ( ! uids.has( object ) ) uids.set( object, uid ++ );\n\n\t\t\treturn uids.get( object );\n\n\t\t}\n\n\t\t/**\n\t\t * Compare two arrays\n\t\t * @param  {Array} array1 Array 1 to compare\n\t\t * @param  {Array} array2 Array 2 to compare\n\t\t * @return {Boolean}        Returns true if both arrays are equal\n\t\t */\n\t\tfunction equalArray( array1, array2 ) {\n\n\t\t\treturn ( array1.length === array2.length ) && array1.every( function ( element, index ) {\n\n\t\t\t\treturn element === array2[ index ];\n\n\t\t\t} );\n\n\t\t}\n\n\t\t/**\n\t\t * Get the min and max vectors from the given attribute\n\t\t * @param  {BufferAttribute} attribute Attribute to find the min/max in range from start to start + count\n\t\t * @param  {Integer} start\n\t\t * @param  {Integer} count\n\t\t * @return {Object} Object containing the `min` and `max` values (As an array of attribute.itemSize components)\n\t\t */\n\t\tfunction getMinMax( attribute, start, count ) {\n\n\t\t\tvar output = {\n\n\t\t\t\tmin: new Array( attribute.itemSize ).fill( Number.POSITIVE_INFINITY ),\n\t\t\t\tmax: new Array( attribute.itemSize ).fill( Number.NEGATIVE_INFINITY )\n\n\t\t\t};\n\n\t\t\tfor ( var i = start; i < start + count; i ++ ) {\n\n\t\t\t\tfor ( var a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\t\t\tvar value = attribute.array[ i * attribute.itemSize + a ];\n\t\t\t\t\toutput.min[ a ] = Math.min( output.min[ a ], value );\n\t\t\t\t\toutput.max[ a ] = Math.max( output.max[ a ], value );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t}\n\n\t\t/**\n\t\t * Checks if image size is POT.\n\t\t *\n\t\t * @param {Image} image The image to be checked.\n\t\t * @returns {Boolean} Returns true if image size is POT.\n\t\t *\n\t\t */\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\t/**\n\t\t * Checks if normal attribute values are normalized.\n\t\t *\n\t\t * @param {BufferAttribute} normal\n\t\t * @returns {Boolean}\n\t\t *\n\t\t */\n\t\tfunction isNormalizedNormalAttribute( normal ) {\n\n\t\t\tif ( cachedData.attributesNormalized.has( normal ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\tvar v = new Vector3();\n\n\t\t\tfor ( var i = 0, il = normal.count; i < il; i ++ ) {\n\n\t\t\t\t// 0.0005 is from glTF-validator\n\t\t\t\tif ( Math.abs( v.fromArray( normal.array, i * 3 ).length() - 1.0 ) > 0.0005 ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t/**\n\t\t * Creates normalized normal buffer attribute.\n\t\t *\n\t\t * @param {BufferAttribute} normal\n\t\t * @returns {BufferAttribute}\n\t\t *\n\t\t */\n\t\tfunction createNormalizedNormalAttribute( normal ) {\n\n\t\t\tif ( cachedData.attributesNormalized.has( normal ) ) {\n\n\t\t\t\treturn cachedData.attributesNormalized.get( normal );\n\n\t\t\t}\n\n\t\t\tvar attribute = normal.clone();\n\n\t\t\tvar v = new Vector3();\n\n\t\t\tfor ( var i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\t\tv.fromArray( attribute.array, i * 3 );\n\n\t\t\t\tif ( v.x === 0 && v.y === 0 && v.z === 0 ) {\n\n\t\t\t\t\t// if values can't be normalized set (1, 0, 0)\n\t\t\t\t\tv.setX( 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.normalize();\n\n\t\t\t\t}\n\n\t\t\t\tv.toArray( attribute.array, i * 3 );\n\n\t\t\t}\n\n\t\t\tcachedData.attributesNormalized.set( normal, attribute );\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\tfunction getFileNameFromUri( uri ) {\n\n\t\t\tvar parts = uri.split( '#' ).shift().split( '?' ).shift().split( '/' ).pop().split( '.' );\n\n\t\t\tif ( parts.length > 1 ) {\n\n\t\t\t\tparts.pop();\n\n\t\t\t}\n\n\t\t\treturn parts.join();\n\n\t\t}\n\n\t\t/**\n\t\t * Serializes a userData.\n\t\t *\n\t\t * @param {THREE.Object3D|THREE.Material} object\n\t\t * @param {Object} gltfProperty\n\t\t */\n\t\tfunction serializeUserData( object, gltfProperty ) {\n\n\t\t\tif ( Object.keys( object.userData ).length === 0 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar json = JSON.parse( JSON.stringify( object.userData ) );\n\n\t\t\t\tif ( options.includeCustomExtensions && json.gltfExtensions ) {\n\n\t\t\t\t\tif ( gltfProperty.extensions === undefined ) {\n\n\t\t\t\t\t\tgltfProperty.extensions = {};\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var extensionName in json.gltfExtensions ) {\n\n\t\t\t\t\t\tgltfProperty.extensions[ extensionName ] = json.gltfExtensions[ extensionName ];\n\t\t\t\t\t\textensionsUsed[ extensionName ] = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete json.gltfExtensions;\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( json ).length > 0 ) {\n\n\t\t\t\t\tgltfProperty.extras = json;\n\n\t\t\t\t}\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: userData of \\'' + object.name + '\\' ' +\n\t\t\t\t\t'won\\'t be serialized because of JSON.stringify error - ' + error.message );\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Applies a texture transform, if present, to the map definition. Requires\n\t\t * the KHR_texture_transform extension.\n\t\t */\n\t\tfunction applyTextureTransform( mapDef, texture ) {\n\n\t\t\tvar didTransform = false;\n\t\t\tvar transformDef = {};\n\n\t\t\tif ( texture.offset.x !== 0 || texture.offset.y !== 0 ) {\n\n\t\t\t\ttransformDef.offset = texture.offset.toArray();\n\t\t\t\tdidTransform = true;\n\n\t\t\t}\n\n\t\t\tif ( texture.rotation !== 0 ) {\n\n\t\t\t\ttransformDef.rotation = texture.rotation;\n\t\t\t\tdidTransform = true;\n\n\t\t\t}\n\n\t\t\tif ( texture.repeat.x !== 1 || texture.repeat.y !== 1 ) {\n\n\t\t\t\ttransformDef.scale = texture.repeat.toArray();\n\t\t\t\tdidTransform = true;\n\n\t\t\t}\n\n\t\t\tif ( didTransform ) {\n\n\t\t\t\tmapDef.extensions = mapDef.extensions || {};\n\t\t\t\tmapDef.extensions[ 'KHR_texture_transform' ] = transformDef;\n\t\t\t\textensionsUsed[ 'KHR_texture_transform' ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Process a buffer to append to the default one.\n\t\t * @param  {ArrayBuffer} buffer\n\t\t * @return {Integer}\n\t\t */\n\t\tfunction processBuffer( buffer ) {\n\n\t\t\tif ( ! outputJSON.buffers ) {\n\n\t\t\t\toutputJSON.buffers = [ { byteLength: 0 } ];\n\n\t\t\t}\n\n\t\t\t// All buffers are merged before export.\n\t\t\tbuffers.push( buffer );\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\t/**\n\t\t * Process and generate a BufferView\n\t\t * @param  {BufferAttribute} attribute\n\t\t * @param  {number} componentType\n\t\t * @param  {number} start\n\t\t * @param  {number} count\n\t\t * @param  {number} target (Optional) Target usage of the BufferView\n\t\t * @return {Object}\n\t\t */\n\t\tfunction processBufferView( attribute, componentType, start, count, target ) {\n\n\t\t\tif ( ! outputJSON.bufferViews ) {\n\n\t\t\t\toutputJSON.bufferViews = [];\n\n\t\t\t}\n\n\t\t\t// Create a new dataview and dump the attribute's array into it\n\n\t\t\tvar componentSize;\n\n\t\t\tif ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\n\n\t\t\t\tcomponentSize = 1;\n\n\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\n\n\t\t\t\tcomponentSize = 2;\n\n\t\t\t} else {\n\n\t\t\t\tcomponentSize = 4;\n\n\t\t\t}\n\n\t\t\tvar byteLength = GLTFExporter.Utils.getPaddedBufferSize( count * attribute.itemSize * componentSize );\n\t\t\tvar dataView = new DataView( new ArrayBuffer( byteLength ) );\n\t\t\tvar offset = 0;\n\n\t\t\tfor ( var i = start; i < start + count; i ++ ) {\n\n\t\t\t\tfor ( var a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\t\t\t// @TODO Fails on InterleavedBufferAttribute, and could probably be\n\t\t\t\t\t// optimized for normal BufferAttribute.\n\t\t\t\t\tvar value = attribute.array[ i * attribute.itemSize + a ];\n\n\t\t\t\t\tif ( componentType === WEBGL_CONSTANTS.FLOAT ) {\n\n\t\t\t\t\t\tdataView.setFloat32( offset, value, true );\n\n\t\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_INT ) {\n\n\t\t\t\t\t\tdataView.setUint32( offset, value, true );\n\n\t\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\n\n\t\t\t\t\t\tdataView.setUint16( offset, value, true );\n\n\t\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\n\n\t\t\t\t\t\tdataView.setUint8( offset, value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += componentSize;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar gltfBufferView = {\n\n\t\t\t\tbuffer: processBuffer( dataView.buffer ),\n\t\t\t\tbyteOffset: byteOffset,\n\t\t\t\tbyteLength: byteLength\n\n\t\t\t};\n\n\t\t\tif ( target !== undefined ) gltfBufferView.target = target;\n\n\t\t\tif ( target === WEBGL_CONSTANTS.ARRAY_BUFFER ) {\n\n\t\t\t\t// Only define byteStride for vertex attributes.\n\t\t\t\tgltfBufferView.byteStride = attribute.itemSize * componentSize;\n\n\t\t\t}\n\n\t\t\tbyteOffset += byteLength;\n\n\t\t\toutputJSON.bufferViews.push( gltfBufferView );\n\n\t\t\t// @TODO Merge bufferViews where possible.\n\t\t\tvar output = {\n\n\t\t\t\tid: outputJSON.bufferViews.length - 1,\n\t\t\t\tbyteLength: 0\n\n\t\t\t};\n\n\t\t\treturn output;\n\n\t\t}\n\n\t\t/**\n\t\t * Process and generate a BufferView from an image Blob.\n\t\t * @param {Blob} blob\n\t\t * @return {Promise<Integer>}\n\t\t */\n\t\tfunction processBufferViewImage( blob ) {\n\n\t\t\tif ( ! outputJSON.bufferViews ) {\n\n\t\t\t\toutputJSON.bufferViews = [];\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tvar reader = new window.FileReader();\n\t\t\t\treader.readAsArrayBuffer( blob );\n\t\t\t\treader.onloadend = function () {\n\n\t\t\t\t\tvar buffer = GLTFExporter.Utils.getPaddedArrayBuffer( reader.result );\n\n\t\t\t\t\tvar bufferView = {\n\t\t\t\t\t\tbuffer: processBuffer( buffer ),\n\t\t\t\t\t\tbyteOffset: byteOffset,\n\t\t\t\t\t\tbyteLength: buffer.byteLength\n\t\t\t\t\t};\n\n\t\t\t\t\tbyteOffset += buffer.byteLength;\n\n\t\t\t\t\toutputJSON.bufferViews.push( bufferView );\n\n\t\t\t\t\tresolve( outputJSON.bufferViews.length - 1 );\n\n\t\t\t\t};\n\n\t\t\t} );\n\n\t\t}\n\n\t\t/**\n\t\t * Process attribute to generate an accessor\n\t\t * @param  {BufferAttribute} attribute Attribute to process\n\t\t * @param  {BufferGeometry} geometry (Optional) Geometry used for truncated draw range\n\t\t * @param  {Integer} start (Optional)\n\t\t * @param  {Integer} count (Optional)\n\t\t * @return {Integer}           Index of the processed accessor on the \"accessors\" array\n\t\t */\n\t\tfunction processAccessor( attribute, geometry, start, count ) {\n\n\t\t\tvar types = {\n\n\t\t\t\t1: 'SCALAR',\n\t\t\t\t2: 'VEC2',\n\t\t\t\t3: 'VEC3',\n\t\t\t\t4: 'VEC4',\n\t\t\t\t16: 'MAT4'\n\n\t\t\t};\n\n\t\t\tvar componentType;\n\n\t\t\t// Detect the component type of the attribute array (float, uint or ushort)\n\t\t\tif ( attribute.array.constructor === Float32Array ) {\n\n\t\t\t\tcomponentType = WEBGL_CONSTANTS.FLOAT;\n\n\t\t\t} else if ( attribute.array.constructor === Uint32Array ) {\n\n\t\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_INT;\n\n\t\t\t} else if ( attribute.array.constructor === Uint16Array ) {\n\n\t\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_SHORT;\n\n\t\t\t} else if ( attribute.array.constructor === Uint8Array ) {\n\n\t\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_BYTE;\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Unsupported bufferAttribute component type.' );\n\n\t\t\t}\n\n\t\t\tif ( start === undefined ) start = 0;\n\t\t\tif ( count === undefined ) count = attribute.count;\n\n\t\t\t// @TODO Indexed buffer geometry with drawRange not supported yet\n\t\t\tif ( options.truncateDrawRange && geometry !== undefined && geometry.index === null ) {\n\n\t\t\t\tvar end = start + count;\n\t\t\t\tvar end2 = geometry.drawRange.count === Infinity\n\t\t\t\t\t? attribute.count\n\t\t\t\t\t: geometry.drawRange.start + geometry.drawRange.count;\n\n\t\t\t\tstart = Math.max( start, geometry.drawRange.start );\n\t\t\t\tcount = Math.min( end, end2 ) - start;\n\n\t\t\t\tif ( count < 0 ) count = 0;\n\n\t\t\t}\n\n\t\t\t// Skip creating an accessor if the attribute doesn't have data to export\n\t\t\tif ( count === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar minMax = getMinMax( attribute, start, count );\n\n\t\t\tvar bufferViewTarget;\n\n\t\t\t// If geometry isn't provided, don't infer the target usage of the bufferView. For\n\t\t\t// animation samplers, target must not be set.\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tbufferViewTarget = attribute === geometry.index ? WEBGL_CONSTANTS.ELEMENT_ARRAY_BUFFER : WEBGL_CONSTANTS.ARRAY_BUFFER;\n\n\t\t\t}\n\n\t\t\tvar bufferView = processBufferView( attribute, componentType, start, count, bufferViewTarget );\n\n\t\t\tvar gltfAccessor = {\n\n\t\t\t\tbufferView: bufferView.id,\n\t\t\t\tbyteOffset: bufferView.byteOffset,\n\t\t\t\tcomponentType: componentType,\n\t\t\t\tcount: count,\n\t\t\t\tmax: minMax.max,\n\t\t\t\tmin: minMax.min,\n\t\t\t\ttype: types[ attribute.itemSize ]\n\n\t\t\t};\n\n\t\t\tif ( ! outputJSON.accessors ) {\n\n\t\t\t\toutputJSON.accessors = [];\n\n\t\t\t}\n\n\t\t\toutputJSON.accessors.push( gltfAccessor );\n\n\t\t\treturn outputJSON.accessors.length - 1;\n\n\t\t}\n\n\t\tfunction transformImage( image, mimeType, flipY, onError, onDone ) {\n\n\t\t\tvar shouldResize = options.forcePowerOfTwoTextures && ! isPowerOfTwo( image );\n\n\n\t\t\tif ( ! shouldResize && ! flipY ) {\n\n\t\t\t\tfetch( image.src )\n\t\t\t\t\t.then( function ( response ) {\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\t} )\n\t\t\t\t\t.then( onDone )\n\t\t\t\t\t.catch( onError );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar canvas = cachedCanvas = cachedCanvas || document.createElement( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tif ( shouldResize ) {\n\n\t\t\t\tconsole.warn( 'GLTFExporter: Resized non-power-of-two image.', image );\n\n\t\t\t\tcanvas.width = _Math.floorPowerOfTwo( canvas.width );\n\t\t\t\tcanvas.height = _Math.floorPowerOfTwo( canvas.height );\n\n\t\t\t}\n\n\t\t\tvar ctx = canvas.getContext( '2d' );\n\n\t\t\tif ( flipY === true ) {\n\n\t\t\t\tctx.translate( 0, canvas.height );\n\t\t\t\tctx.scale( 1, - 1 );\n\n\t\t\t}\n\n\t\t\tctx.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\tcanvas.toBlob( onDone, mimeType );\n\n\t\t}\n\n\t\t/**\n\t\t * Process image\n\t\t * @param  {Image} image to process\n\t\t * @param  {Integer} format of the image (e.g. THREE.RGBFormat, RGBAFormat etc)\n\t\t * @param  {Boolean} flipY before writing out the image\n\t\t * @return {Integer}     Index of the processed texture in the \"images\" array\n\t\t */\n\t\tfunction processImage( image, format, flipY ) {\n\n\t\t\tif ( ! cachedData.images.has( image ) ) {\n\n\t\t\t\tcachedData.images.set( image, {} );\n\n\t\t\t}\n\n\t\t\tvar cachedImages = cachedData.images.get( image );\n\t\t\tvar mimeType = format === RGBAFormat ? 'image/png' : 'image/jpeg';\n\t\t\tvar key = mimeType + \":flipY/\" + flipY.toString();\n\n\t\t\tif ( cachedImages[ key ] !== undefined ) {\n\n\t\t\t\treturn cachedImages[ key ];\n\n\t\t\t}\n\n\t\t\tif ( ! outputJSON.images ) {\n\n\t\t\t\toutputJSON.images = [];\n\n\t\t\t}\n\n\t\t\tvar gltfImage = { mimeType: mimeType };\n\t\t\tvar index = outputJSON.images.length;\n\n\t\t\tif ( options.mode === \"glb\" ) {\n\n\t\t\t\tpending.push( new Promise( function ( resolve, reject ) {\n\n\t\t\t\t\ttransformImage( image, mimeType, flipY, reject, function ( blob ) {\n\n\t\t\t\t\t\tprocessBufferViewImage( blob ).then( function ( bufferViewIndex ) {\n\n\t\t\t\t\t\t\tgltfImage.bufferView = bufferViewIndex;\n\n\t\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\t} ).catch( reject );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} ) );\n\n\t\t\t} else {\n\n\t\t\t\tvar fileName = getFileNameFromUri( image.src );\n\t\t\t\tvar extension = mimeType === \"image/png\" ? \".png\" : \".jpg\";\n\t\t\t\tgltfImage.uri = fileName + index + extension;\n\n\t\t\t\tpending.push( new Promise( function ( resolve, reject ) {\n\n\t\t\t\t\ttransformImage( image, mimeType, flipY, reject, function ( blob ) {\n\n\t\t\t\t\t\toutputImages[ index ] = blob;\n\n\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t} );\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\toutputJSON.images.push( gltfImage );\n\n\t\t\tcachedImages[ key ] = index;\n\n\t\t\treturn index;\n\n\t\t}\n\n\t\t/**\n\t\t * Process sampler\n\t\t * @param  {Texture} map Texture to process\n\t\t * @return {Integer}     Index of the processed texture in the \"samplers\" array\n\t\t */\n\t\tfunction processSampler( map ) {\n\n\t\t\tif ( ! outputJSON.samplers ) {\n\n\t\t\t\toutputJSON.samplers = [];\n\n\t\t\t}\n\n\t\t\tvar gltfSampler = {\n\n\t\t\t\tmagFilter: THREE_TO_WEBGL[ map.magFilter ],\n\t\t\t\tminFilter: THREE_TO_WEBGL[ map.minFilter ],\n\t\t\t\twrapS: THREE_TO_WEBGL[ map.wrapS ],\n\t\t\t\twrapT: THREE_TO_WEBGL[ map.wrapT ]\n\n\t\t\t};\n\n\t\t\toutputJSON.samplers.push( gltfSampler );\n\n\t\t\treturn outputJSON.samplers.length - 1;\n\n\t\t}\n\n\t\t/**\n\t\t * Process texture\n\t\t * @param  {Texture} map Map to process\n\t\t * @return {Integer}     Index of the processed texture in the \"textures\" array\n\t\t */\n\t\tfunction processTexture( map ) {\n\n\t\t\tif ( cachedData.textures.has( map ) ) {\n\n\t\t\t\treturn cachedData.textures.get( map );\n\n\t\t\t}\n\n\t\t\tif ( ! outputJSON.textures ) {\n\n\t\t\t\toutputJSON.textures = [];\n\n\t\t\t}\n\n\t\t\tvar gltfTexture = {\n\n\t\t\t\tsampler: processSampler( map ),\n\t\t\t\tsource: processImage( map.image, map.format, map.flipY )\n\n\t\t\t};\n\n\t\t\toutputJSON.textures.push( gltfTexture );\n\n\t\t\tvar index = outputJSON.textures.length - 1;\n\t\t\tcachedData.textures.set( map, index );\n\n\t\t\treturn index;\n\n\t\t}\n\n\t\t/**\n\t\t * Process material\n\t\t * @param  {THREE.Material} material Material to process\n\t\t * @return {Integer}      Index of the processed material in the \"materials\" array\n\t\t */\n\t\tfunction processMaterial( material ) {\n\n\t\t\tif ( cachedData.materials.has( material ) ) {\n\n\t\t\t\treturn cachedData.materials.get( material );\n\n\t\t\t}\n\n\t\t\tif ( ! outputJSON.materials ) {\n\n\t\t\t\toutputJSON.materials = [];\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tconsole.warn( 'GLTFExporter: THREE.ShaderMaterial not supported.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// @QUESTION Should we avoid including any attribute that has the default value?\n\t\t\tvar gltfMaterial = {\n\n\t\t\t\tpbrMetallicRoughness: {}\n\n\t\t\t};\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\tgltfMaterial.extensions = { KHR_materials_unlit: {} };\n\n\t\t\t\textensionsUsed[ 'KHR_materials_unlit' ] = true;\n\n\t\t\t} else if ( ! material.isMeshStandardMaterial ) {\n\n\t\t\t\tconsole.warn( 'GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.' );\n\n\t\t\t}\n\n\t\t\t// pbrMetallicRoughness.baseColorFactor\n\t\t\tvar color = material.color.toArray().concat( [ material.opacity ] );\n\n\t\t\tif ( ! equalArray( color, [ 1, 1, 1, 1 ] ) ) {\n\n\t\t\t\tgltfMaterial.pbrMetallicRoughness.baseColorFactor = color;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial ) {\n\n\t\t\t\tgltfMaterial.pbrMetallicRoughness.metallicFactor = material.metalness;\n\t\t\t\tgltfMaterial.pbrMetallicRoughness.roughnessFactor = material.roughness;\n\n\t\t\t} else if ( material.isMeshBasicMaterial ) {\n\n\t\t\t\tgltfMaterial.pbrMetallicRoughness.metallicFactor = 0.0;\n\t\t\t\tgltfMaterial.pbrMetallicRoughness.roughnessFactor = 0.9;\n\n\t\t\t} else {\n\n\t\t\t\tgltfMaterial.pbrMetallicRoughness.metallicFactor = 0.5;\n\t\t\t\tgltfMaterial.pbrMetallicRoughness.roughnessFactor = 0.5;\n\n\t\t\t}\n\n\t\t\t// pbrMetallicRoughness.metallicRoughnessTexture\n\t\t\tif ( material.metalnessMap || material.roughnessMap ) {\n\n\t\t\t\tif ( material.metalnessMap === material.roughnessMap ) {\n\n\t\t\t\t\tvar metalRoughMapDef = { index: processTexture( material.metalnessMap ) };\n\t\t\t\t\tapplyTextureTransform( metalRoughMapDef, material.metalnessMap );\n\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.metallicRoughnessTexture = metalRoughMapDef;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Ignoring metalnessMap and roughnessMap because they are not the same Texture.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// pbrMetallicRoughness.baseColorTexture\n\t\t\tif ( material.map ) {\n\n\t\t\t\tvar baseColorMapDef = { index: processTexture( material.map ) };\n\t\t\t\tapplyTextureTransform( baseColorMapDef, material.map );\n\t\t\t\tgltfMaterial.pbrMetallicRoughness.baseColorTexture = baseColorMapDef;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isLineBasicMaterial ||\n\t\t\t\tmaterial.isPointsMaterial ) {\n\n\t\t\t} else {\n\n\t\t\t\t// emissiveFactor\n\t\t\t\tvar emissive = material.emissive.clone().multiplyScalar( material.emissiveIntensity ).toArray();\n\n\t\t\t\tif ( ! equalArray( emissive, [ 0, 0, 0 ] ) ) {\n\n\t\t\t\t\tgltfMaterial.emissiveFactor = emissive;\n\n\t\t\t\t}\n\n\t\t\t\t// emissiveTexture\n\t\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\t\tvar emissiveMapDef = { index: processTexture( material.emissiveMap ) };\n\t\t\t\t\tapplyTextureTransform( emissiveMapDef, material.emissiveMap );\n\t\t\t\t\tgltfMaterial.emissiveTexture = emissiveMapDef;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normalTexture\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tvar normalMapDef = { index: processTexture( material.normalMap ) };\n\n\t\t\t\tif ( material.normalScale.x !== - 1 ) {\n\n\t\t\t\t\tif ( material.normalScale.x !== material.normalScale.y ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Normal scale components are different, ignoring Y and exporting X.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnormalMapDef.scale = material.normalScale.x;\n\n\t\t\t\t}\n\n\t\t\t\tapplyTextureTransform( normalMapDef, material.normalMap );\n\n\t\t\t\tgltfMaterial.normalTexture = normalMapDef;\n\n\t\t\t}\n\n\t\t\t// occlusionTexture\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tvar occlusionMapDef = {\n\t\t\t\t\tindex: processTexture( material.aoMap ),\n\t\t\t\t\ttexCoord: 1\n\t\t\t\t};\n\n\t\t\t\tif ( material.aoMapIntensity !== 1.0 ) {\n\n\t\t\t\t\tocclusionMapDef.strength = material.aoMapIntensity;\n\n\t\t\t\t}\n\n\t\t\t\tapplyTextureTransform( occlusionMapDef, material.aoMap );\n\n\t\t\t\tgltfMaterial.occlusionTexture = occlusionMapDef;\n\n\t\t\t}\n\n\t\t\t// alphaMode\n\t\t\tif ( material.transparent || material.alphaTest > 0.0 ) {\n\n\t\t\t\tgltfMaterial.alphaMode = material.opacity < 1.0 ? 'BLEND' : 'MASK';\n\n\t\t\t\t// Write alphaCutoff if it's non-zero and different from the default (0.5).\n\t\t\t\tif ( material.alphaTest > 0.0 && material.alphaTest !== 0.5 ) {\n\n\t\t\t\t\tgltfMaterial.alphaCutoff = material.alphaTest;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// doubleSided\n\t\t\tif ( material.side === DoubleSide ) {\n\n\t\t\t\tgltfMaterial.doubleSided = true;\n\n\t\t\t}\n\n\t\t\tif ( material.name !== '' ) {\n\n\t\t\t\tgltfMaterial.name = material.name;\n\n\t\t\t}\n\n\t\t\tserializeUserData( material, gltfMaterial );\n\n\t\t\toutputJSON.materials.push( gltfMaterial );\n\n\t\t\tvar index = outputJSON.materials.length - 1;\n\t\t\tcachedData.materials.set( material, index );\n\n\t\t\treturn index;\n\n\t\t}\n\n\t\t/**\n\t\t * Process mesh\n\t\t * @param  {THREE.Mesh} mesh Mesh to process\n\t\t * @return {Integer}      Index of the processed mesh in the \"meshes\" array\n\t\t */\n\t\tfunction processMesh( mesh ) {\n\n\t\t\tvar cacheKey = mesh.geometry.uuid + ':' + mesh.material.uuid;\n\t\t\tif ( cachedData.meshes.has( cacheKey ) ) {\n\n\t\t\t\treturn cachedData.meshes.get( cacheKey );\n\n\t\t\t}\n\n\t\t\tvar geometry = mesh.geometry;\n\n\t\t\tvar mode;\n\n\t\t\t// Use the correct mode\n\t\t\tif ( mesh.isLineSegments ) {\n\n\t\t\t\tmode = WEBGL_CONSTANTS.LINES;\n\n\t\t\t} else if ( mesh.isLineLoop ) {\n\n\t\t\t\tmode = WEBGL_CONSTANTS.LINE_LOOP;\n\n\t\t\t} else if ( mesh.isLine ) {\n\n\t\t\t\tmode = WEBGL_CONSTANTS.LINE_STRIP;\n\n\t\t\t} else if ( mesh.isPoints ) {\n\n\t\t\t\tmode = WEBGL_CONSTANTS.POINTS;\n\n\t\t\t} else {\n\n\t\t\t\tif ( ! geometry.isBufferGeometry ) {\n\n\t\t\t\t\tconsole.warn( 'GLTFExporter: Exporting THREE.Geometry will increase file size. Use BufferGeometry instead.' );\n\n\t\t\t\t\tvar geometryTemp = new BufferGeometry();\n\t\t\t\t\tgeometryTemp.fromGeometry( geometry );\n\t\t\t\t\tgeometry = geometryTemp;\n\n\t\t\t\t}\n\n\t\t\t\tif ( mesh.drawMode === TriangleFanDrawMode ) {\n\n\t\t\t\t\tconsole.warn( 'GLTFExporter: TriangleFanDrawMode and wireframe incompatible.' );\n\t\t\t\t\tmode = WEBGL_CONSTANTS.TRIANGLE_FAN;\n\n\t\t\t\t} else if ( mesh.drawMode === TriangleStripDrawMode ) {\n\n\t\t\t\t\tmode = mesh.material.wireframe ? WEBGL_CONSTANTS.LINE_STRIP : WEBGL_CONSTANTS.TRIANGLE_STRIP;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmode = mesh.material.wireframe ? WEBGL_CONSTANTS.LINES : WEBGL_CONSTANTS.TRIANGLES;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar gltfMesh = {};\n\n\t\t\tvar attributes = {};\n\t\t\tvar primitives = [];\n\t\t\tvar targets = [];\n\n\t\t\t// Conversion between attributes names in threejs and gltf spec\n\t\t\tvar nameConversion = {\n\n\t\t\t\tuv: 'TEXCOORD_0',\n\t\t\t\tuv2: 'TEXCOORD_1',\n\t\t\t\tcolor: 'COLOR_0',\n\t\t\t\tskinWeight: 'WEIGHTS_0',\n\t\t\t\tskinIndex: 'JOINTS_0'\n\n\t\t\t};\n\n\t\t\tvar originalNormal = geometry.getAttribute( 'normal' );\n\n\t\t\tif ( originalNormal !== undefined && ! isNormalizedNormalAttribute( originalNormal ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one.' );\n\n\t\t\t\tgeometry.addAttribute( 'normal', createNormalizedNormalAttribute( originalNormal ) );\n\n\t\t\t}\n\n\t\t\t// @QUESTION Detect if .vertexColors = THREE.VertexColors?\n\t\t\t// For every attribute create an accessor\n\t\t\tvar modifiedAttribute = null;\n\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t// Ignore morph target attributes, which are exported later.\n\t\t\t\tif ( attributeName.substr( 0, 5 ) === 'morph' ) continue;\n\n\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\tattributeName = nameConversion[ attributeName ] || attributeName.toUpperCase();\n\n\t\t\t\t// Prefix all geometry attributes except the ones specifically\n\t\t\t\t// listed in the spec; non-spec attributes are considered custom.\n\t\t\t\tvar validVertexAttributes =\n\t\t\t\t\t\t/^(POSITION|NORMAL|TANGENT|TEXCOORD_\\d+|COLOR_\\d+|JOINTS_\\d+|WEIGHTS_\\d+)$/;\n\t\t\t\tif ( ! validVertexAttributes.test( attributeName ) ) {\n\n\t\t\t\t\tattributeName = '_' + attributeName;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedData.attributes.has( getUID( attribute ) ) ) {\n\n\t\t\t\t\tattributes[ attributeName ] = cachedData.attributes.get( getUID( attribute ) );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// JOINTS_0 must be UNSIGNED_BYTE or UNSIGNED_SHORT.\n\t\t\t\tmodifiedAttribute = null;\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tif ( attributeName === 'JOINTS_0' &&\n\t\t\t\t\t! ( array instanceof Uint16Array ) &&\n\t\t\t\t\t! ( array instanceof Uint8Array ) ) {\n\n\t\t\t\t\tconsole.warn( 'GLTFExporter: Attribute \"skinIndex\" converted to type UNSIGNED_SHORT.' );\n\t\t\t\t\tmodifiedAttribute = new BufferAttribute( new Uint16Array( array ), attribute.itemSize, attribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tvar accessor = processAccessor( modifiedAttribute || attribute, geometry );\n\t\t\t\tif ( accessor !== null ) {\n\n\t\t\t\t\tattributes[ attributeName ] = accessor;\n\t\t\t\t\tcachedData.attributes.set( getUID( attribute ), accessor );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( originalNormal !== undefined ) geometry.addAttribute( 'normal', originalNormal );\n\n\t\t\t// Skip if no exportable attributes found\n\t\t\tif ( Object.keys( attributes ).length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Morph targets\n\t\t\tif ( mesh.morphTargetInfluences !== undefined && mesh.morphTargetInfluences.length > 0 ) {\n\n\t\t\t\tvar weights = [];\n\t\t\t\tvar targetNames = [];\n\t\t\t\tvar reverseDictionary = {};\n\n\t\t\t\tif ( mesh.morphTargetDictionary !== undefined ) {\n\n\t\t\t\t\tfor ( var key in mesh.morphTargetDictionary ) {\n\n\t\t\t\t\t\treverseDictionary[ mesh.morphTargetDictionary[ key ] ] = key;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < mesh.morphTargetInfluences.length; ++ i ) {\n\n\t\t\t\t\tvar target = {};\n\n\t\t\t\t\tvar warned = false;\n\n\t\t\t\t\tfor ( var attributeName in geometry.morphAttributes ) {\n\n\t\t\t\t\t\t// glTF 2.0 morph supports only POSITION/NORMAL/TANGENT.\n\t\t\t\t\t\t// Three.js doesn't support TANGENT yet.\n\n\t\t\t\t\t\tif ( attributeName !== 'position' && attributeName !== 'normal' ) {\n\n\t\t\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Only POSITION and NORMAL morph are supported.' );\n\t\t\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar attribute = geometry.morphAttributes[ attributeName ][ i ];\n\t\t\t\t\t\tvar gltfAttributeName = attributeName.toUpperCase();\n\n\t\t\t\t\t\t// Three.js morph attribute has absolute values while the one of glTF has relative values.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// glTF 2.0 Specification:\n\t\t\t\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#morph-targets\n\n\t\t\t\t\t\tvar baseAttribute = geometry.attributes[ attributeName ];\n\n\t\t\t\t\t\tif ( cachedData.attributesRelative.has( getUID( attribute ) ) ) {\n\n\t\t\t\t\t\t\ttarget[ gltfAttributeName ] = cachedData.attributesRelative.get( getUID( attribute ) );\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Clones attribute not to override\n\t\t\t\t\t\tvar relativeAttribute = attribute.clone();\n\n\t\t\t\t\t\tfor ( var j = 0, jl = attribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\trelativeAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tattribute.getX( j ) - baseAttribute.getX( j ),\n\t\t\t\t\t\t\t\tattribute.getY( j ) - baseAttribute.getY( j ),\n\t\t\t\t\t\t\t\tattribute.getZ( j ) - baseAttribute.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget[ gltfAttributeName ] = processAccessor( relativeAttribute, geometry );\n\t\t\t\t\t\tcachedData.attributesRelative.set( getUID( baseAttribute ), target[ gltfAttributeName ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargets.push( target );\n\n\t\t\t\t\tweights.push( mesh.morphTargetInfluences[ i ] );\n\t\t\t\t\tif ( mesh.morphTargetDictionary !== undefined ) targetNames.push( reverseDictionary[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tgltfMesh.weights = weights;\n\n\t\t\t\tif ( targetNames.length > 0 ) {\n\n\t\t\t\t\tgltfMesh.extras = {};\n\t\t\t\t\tgltfMesh.extras.targetNames = targetNames;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar forceIndices = options.forceIndices;\n\t\t\tvar isMultiMaterial = Array.isArray( mesh.material );\n\n\t\t\tif ( isMultiMaterial && geometry.groups.length === 0 ) return null;\n\n\t\t\tif ( ! forceIndices && geometry.index === null && isMultiMaterial ) {\n\n\t\t\t\t// temporal workaround.\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Creating index for non-indexed multi-material mesh.' );\n\t\t\t\tforceIndices = true;\n\n\t\t\t}\n\n\t\t\tvar didForceIndices = false;\n\n\t\t\tif ( geometry.index === null && forceIndices ) {\n\n\t\t\t\tvar indices = [];\n\n\t\t\t\tfor ( var i = 0, il = geometry.attributes.position.count; i < il; i ++ ) {\n\n\t\t\t\t\tindices[ i ] = i;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\n\t\t\t\tdidForceIndices = true;\n\n\t\t\t}\n\n\t\t\tvar materials = isMultiMaterial ? mesh.material : [ mesh.material ];\n\t\t\tvar groups = isMultiMaterial ? geometry.groups : [ { materialIndex: 0, start: undefined, count: undefined } ];\n\n\t\t\tfor ( var i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tvar primitive = {\n\t\t\t\t\tmode: mode,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t};\n\n\t\t\t\tserializeUserData( geometry, primitive );\n\n\t\t\t\tif ( targets.length > 0 ) primitive.targets = targets;\n\n\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\tvar cacheKey = getUID( geometry.index );\n\n\t\t\t\t\tif ( groups[ i ].start !== undefined || groups[ i ].count !== undefined ) {\n\n\t\t\t\t\t\tcacheKey += ':' + groups[ i ].start + ':' + groups[ i ].count;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cachedData.attributes.has( cacheKey ) ) {\n\n\t\t\t\t\t\tprimitive.indices = cachedData.attributes.get( cacheKey );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprimitive.indices = processAccessor( geometry.index, geometry, groups[ i ].start, groups[ i ].count );\n\t\t\t\t\t\tcachedData.attributes.set( cacheKey, primitive.indices );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.indices === null ) delete primitive.indices;\n\n\t\t\t\t}\n\n\t\t\t\tvar material = processMaterial( materials[ groups[ i ].materialIndex ] );\n\n\t\t\t\tif ( material !== null ) {\n\n\t\t\t\t\tprimitive.material = material;\n\n\t\t\t\t}\n\n\t\t\t\tprimitives.push( primitive );\n\n\t\t\t}\n\n\t\t\tif ( didForceIndices ) {\n\n\t\t\t\tgeometry.setIndex( null );\n\n\t\t\t}\n\n\t\t\tgltfMesh.primitives = primitives;\n\n\t\t\tif ( ! outputJSON.meshes ) {\n\n\t\t\t\toutputJSON.meshes = [];\n\n\t\t\t}\n\n\t\t\toutputJSON.meshes.push( gltfMesh );\n\n\t\t\tvar index = outputJSON.meshes.length - 1;\n\t\t\tcachedData.meshes.set( cacheKey, index );\n\n\t\t\treturn index;\n\n\t\t}\n\n\t\t/**\n\t\t * Process camera\n\t\t * @param  {THREE.Camera} camera Camera to process\n\t\t * @return {Integer}      Index of the processed mesh in the \"camera\" array\n\t\t */\n\t\tfunction processCamera( camera ) {\n\n\t\t\tif ( ! outputJSON.cameras ) {\n\n\t\t\t\toutputJSON.cameras = [];\n\n\t\t\t}\n\n\t\t\tvar isOrtho = camera.isOrthographicCamera;\n\n\t\t\tvar gltfCamera = {\n\n\t\t\t\ttype: isOrtho ? 'orthographic' : 'perspective'\n\n\t\t\t};\n\n\t\t\tif ( isOrtho ) {\n\n\t\t\t\tgltfCamera.orthographic = {\n\n\t\t\t\t\txmag: camera.right * 2,\n\t\t\t\t\tymag: camera.top * 2,\n\t\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tgltfCamera.perspective = {\n\n\t\t\t\t\taspectRatio: camera.aspect,\n\t\t\t\t\tyfov: _Math.degToRad( camera.fov ),\n\t\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( camera.name !== '' ) {\n\n\t\t\t\tgltfCamera.name = camera.type;\n\n\t\t\t}\n\n\t\t\toutputJSON.cameras.push( gltfCamera );\n\n\t\t\treturn outputJSON.cameras.length - 1;\n\n\t\t}\n\n\t\t/**\n\t\t * Creates glTF animation entry from AnimationClip object.\n\t\t *\n\t\t * Status:\n\t\t * - Only properties listed in PATH_PROPERTIES may be animated.\n\t\t *\n\t\t * @param {THREE.AnimationClip} clip\n\t\t * @param {THREE.Object3D} root\n\t\t * @return {number}\n\t\t */\n\t\tfunction processAnimation( clip, root ) {\n\n\t\t\tif ( ! outputJSON.animations ) {\n\n\t\t\t\toutputJSON.animations = [];\n\n\t\t\t}\n\n\t\t\tclip = GLTFExporter.Utils.mergeMorphTargetTracks( clip.clone(), root );\n\n\t\t\tvar tracks = clip.tracks;\n\t\t\tvar channels = [];\n\t\t\tvar samplers = [];\n\n\t\t\tfor ( var i = 0; i < tracks.length; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ];\n\t\t\t\tvar trackBinding = PropertyBinding.parseTrackName( track.name );\n\t\t\t\tvar trackNode = PropertyBinding.findNode( root, trackBinding.nodeName );\n\t\t\t\tvar trackProperty = PATH_PROPERTIES[ trackBinding.propertyName ];\n\n\t\t\t\tif ( trackBinding.objectName === 'bones' ) {\n\n\t\t\t\t\tif ( trackNode.isSkinnedMesh === true ) {\n\n\t\t\t\t\t\ttrackNode = trackNode.skeleton.getBoneByName( trackBinding.objectIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttrackNode = undefined;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! trackNode || ! trackProperty ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Could not export animation track \"%s\".', track.name );\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar inputItemSize = 1;\n\t\t\t\tvar outputItemSize = track.values.length / track.times.length;\n\n\t\t\t\tif ( trackProperty === PATH_PROPERTIES.morphTargetInfluences ) {\n\n\t\t\t\t\toutputItemSize /= trackNode.morphTargetInfluences.length;\n\n\t\t\t\t}\n\n\t\t\t\tvar interpolation;\n\n\t\t\t\t// @TODO export CubicInterpolant(InterpolateSmooth) as CUBICSPLINE\n\n\t\t\t\t// Detecting glTF cubic spline interpolant by checking factory method's special property\n\t\t\t\t// GLTFCubicSplineInterpolant is a custom interpolant and track doesn't return\n\t\t\t\t// valid value from .getInterpolation().\n\t\t\t\tif ( track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline === true ) {\n\n\t\t\t\t\tinterpolation = 'CUBICSPLINE';\n\n\t\t\t\t\t// itemSize of CUBICSPLINE keyframe is 9\n\t\t\t\t\t// (VEC3 * 3: inTangent, splineVertex, and outTangent)\n\t\t\t\t\t// but needs to be stored as VEC3 so dividing by 3 here.\n\t\t\t\t\toutputItemSize /= 3;\n\n\t\t\t\t} else if ( track.getInterpolation() === InterpolateDiscrete ) {\n\n\t\t\t\t\tinterpolation = 'STEP';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinterpolation = 'LINEAR';\n\n\t\t\t\t}\n\n\t\t\t\tsamplers.push( {\n\n\t\t\t\t\tinput: processAccessor( new BufferAttribute( track.times, inputItemSize ) ),\n\t\t\t\t\toutput: processAccessor( new BufferAttribute( track.values, outputItemSize ) ),\n\t\t\t\t\tinterpolation: interpolation\n\n\t\t\t\t} );\n\n\t\t\t\tchannels.push( {\n\n\t\t\t\t\tsampler: samplers.length - 1,\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tnode: nodeMap.get( trackNode ),\n\t\t\t\t\t\tpath: trackProperty\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\toutputJSON.animations.push( {\n\n\t\t\t\tname: clip.name || 'clip_' + outputJSON.animations.length,\n\t\t\t\tsamplers: samplers,\n\t\t\t\tchannels: channels\n\n\t\t\t} );\n\n\t\t\treturn outputJSON.animations.length - 1;\n\n\t\t}\n\n\t\tfunction processSkin( object ) {\n\n\t\t\tvar node = outputJSON.nodes[ nodeMap.get( object ) ];\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar rootJoint = object.skeleton.bones[ 0 ];\n\n\t\t\tif ( rootJoint === undefined ) return null;\n\n\t\t\tvar joints = [];\n\t\t\tvar inverseBindMatrices = new Float32Array( skeleton.bones.length * 16 );\n\n\t\t\tfor ( var i = 0; i < skeleton.bones.length; ++ i ) {\n\n\t\t\t\tjoints.push( nodeMap.get( skeleton.bones[ i ] ) );\n\n\t\t\t\tskeleton.boneInverses[ i ].toArray( inverseBindMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( outputJSON.skins === undefined ) {\n\n\t\t\t\toutputJSON.skins = [];\n\n\t\t\t}\n\n\t\t\toutputJSON.skins.push( {\n\n\t\t\t\tinverseBindMatrices: processAccessor( new BufferAttribute( inverseBindMatrices, 16 ) ),\n\t\t\t\tjoints: joints,\n\t\t\t\tskeleton: nodeMap.get( rootJoint )\n\n\t\t\t} );\n\n\t\t\tvar skinIndex = node.skin = outputJSON.skins.length - 1;\n\n\t\t\treturn skinIndex;\n\n\t\t}\n\n\t\tfunction processLight( light ) {\n\n\t\t\tvar lightDef = {};\n\n\t\t\tif ( light.name ) lightDef.name = light.name;\n\n\t\t\tlightDef.color = light.color.toArray();\n\n\t\t\tlightDef.intensity = light.intensity;\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tlightDef.type = 'directional';\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tlightDef.type = 'point';\n\t\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tlightDef.type = 'spot';\n\t\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\n\t\t\t\tlightDef.spot = {};\n\t\t\t\tlightDef.spot.innerConeAngle = ( light.penumbra - 1.0 ) * light.angle * - 1.0;\n\t\t\t\tlightDef.spot.outerConeAngle = light.angle;\n\n\t\t\t}\n\n\t\t\tif ( light.decay !== undefined && light.decay !== 2 ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, '\n\t\t\t\t\t+ 'and expects light.decay=2.' );\n\n\t\t\t}\n\n\t\t\tif ( light.target\n\t\t\t\t\t&& ( light.target.parent !== light\n\t\t\t\t\t || light.target.position.x !== 0\n\t\t\t\t\t || light.target.position.y !== 0\n\t\t\t\t\t || light.target.position.z !== - 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Light direction may be lost. For best results, '\n\t\t\t\t\t+ 'make light.target a child of the light with position 0,0,-1.' );\n\n\t\t\t}\n\n\t\t\tvar lights = outputJSON.extensions[ 'KHR_lights_punctual' ].lights;\n\t\t\tlights.push( lightDef );\n\t\t\treturn lights.length - 1;\n\n\t\t}\n\n\t\t/**\n\t\t * Process Object3D node\n\t\t * @param  {THREE.Object3D} node Object3D to processNode\n\t\t * @return {Integer}      Index of the node in the nodes list\n\t\t */\n\t\tfunction processNode( object ) {\n\n\t\t\tif ( ! outputJSON.nodes ) {\n\n\t\t\t\toutputJSON.nodes = [];\n\n\t\t\t}\n\n\t\t\tvar gltfNode = {};\n\n\t\t\tif ( options.trs ) {\n\n\t\t\t\tvar rotation = object.quaternion.toArray();\n\t\t\t\tvar position = object.position.toArray();\n\t\t\t\tvar scale = object.scale.toArray();\n\n\t\t\t\tif ( ! equalArray( rotation, [ 0, 0, 0, 1 ] ) ) {\n\n\t\t\t\t\tgltfNode.rotation = rotation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! equalArray( position, [ 0, 0, 0 ] ) ) {\n\n\t\t\t\t\tgltfNode.translation = position;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! equalArray( scale, [ 1, 1, 1 ] ) ) {\n\n\t\t\t\t\tgltfNode.scale = scale;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.matrixAutoUpdate ) {\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! equalArray( object.matrix.elements, [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ] ) ) {\n\n\t\t\t\t\tgltfNode.matrix = object.matrix.elements;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// We don't export empty strings name because it represents no-name in Three.js.\n\t\t\tif ( object.name !== '' ) {\n\n\t\t\t\tgltfNode.name = String( object.name );\n\n\t\t\t}\n\n\t\t\tserializeUserData( object, gltfNode );\n\n\t\t\tif ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tvar mesh = processMesh( object );\n\n\t\t\t\tif ( mesh !== null ) {\n\n\t\t\t\t\tgltfNode.mesh = mesh;\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isCamera ) {\n\n\t\t\t\tgltfNode.camera = processCamera( object );\n\n\t\t\t} else if ( object.isDirectionalLight || object.isPointLight || object.isSpotLight ) {\n\n\t\t\t\tif ( ! extensionsUsed[ 'KHR_lights_punctual' ] ) {\n\n\t\t\t\t\toutputJSON.extensions = outputJSON.extensions || {};\n\t\t\t\t\toutputJSON.extensions[ 'KHR_lights_punctual' ] = { lights: [] };\n\t\t\t\t\textensionsUsed[ 'KHR_lights_punctual' ] = true;\n\n\t\t\t\t}\n\n\t\t\t\tgltfNode.extensions = gltfNode.extensions || {};\n\t\t\t\tgltfNode.extensions[ 'KHR_lights_punctual' ] = { light: processLight( object ) };\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Only directional, point, and spot lights are supported.', object );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tskins.push( object );\n\n\t\t\t}\n\n\t\t\tif ( object.children.length > 0 ) {\n\n\t\t\t\tvar children = [];\n\n\t\t\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = object.children[ i ];\n\n\t\t\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\t\t\tvar node = processNode( child );\n\n\t\t\t\t\t\tif ( node !== null ) {\n\n\t\t\t\t\t\t\tchildren.push( node );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( children.length > 0 ) {\n\n\t\t\t\t\tgltfNode.children = children;\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\toutputJSON.nodes.push( gltfNode );\n\n\t\t\tvar nodeIndex = outputJSON.nodes.length - 1;\n\t\t\tnodeMap.set( object, nodeIndex );\n\n\t\t\treturn nodeIndex;\n\n\t\t}\n\n\t\t/**\n\t\t * Process Scene\n\t\t * @param  {Scene} node Scene to process\n\t\t */\n\t\tfunction processScene( scene ) {\n\n\t\t\tif ( ! outputJSON.scenes ) {\n\n\t\t\t\toutputJSON.scenes = [];\n\t\t\t\toutputJSON.scene = 0;\n\n\t\t\t}\n\n\t\t\tvar gltfScene = {\n\n\t\t\t\tnodes: []\n\n\t\t\t};\n\n\t\t\tif ( scene.name !== '' ) {\n\n\t\t\t\tgltfScene.name = scene.name;\n\n\t\t\t}\n\n\t\t\tif ( scene.userData && Object.keys( scene.userData ).length > 0 ) {\n\n\t\t\t\tgltfScene.extras = serializeUserData( scene );\n\n\t\t\t}\n\n\t\t\toutputJSON.scenes.push( gltfScene );\n\n\t\t\tvar nodes = [];\n\n\t\t\tfor ( var i = 0, l = scene.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = scene.children[ i ];\n\n\t\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\t\tvar node = processNode( child );\n\n\t\t\t\t\tif ( node !== null ) {\n\n\t\t\t\t\t\tnodes.push( node );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodes.length > 0 ) {\n\n\t\t\t\tgltfScene.nodes = nodes;\n\n\t\t\t}\n\n\t\t\tserializeUserData( scene, gltfScene );\n\n\t\t}\n\n\t\t/**\n\t\t * Creates a Scene to hold a list of objects and parse it\n\t\t * @param  {Array} objects List of objects to process\n\t\t */\n\t\tfunction processObjects( objects ) {\n\n\t\t\tvar scene = new Scene();\n\t\t\tscene.name = 'AuxScene';\n\n\t\t\tfor ( var i = 0; i < objects.length; i ++ ) {\n\n\t\t\t\t// We push directly to children instead of calling `add` to prevent\n\t\t\t\t// modify the .parent and break its original scene and hierarchy\n\t\t\t\tscene.children.push( objects[ i ] );\n\n\t\t\t}\n\n\t\t\tprocessScene( scene );\n\n\t\t}\n\n\t\tfunction processInput( input ) {\n\n\t\t\tinput = input instanceof Array ? input : [ input ];\n\n\t\t\tvar objectsWithoutScene = [];\n\n\t\t\tfor ( var i = 0; i < input.length; i ++ ) {\n\n\t\t\t\tif ( input[ i ] instanceof Scene ) {\n\n\t\t\t\t\tprocessScene( input[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobjectsWithoutScene.push( input[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( objectsWithoutScene.length > 0 ) {\n\n\t\t\t\tprocessObjects( objectsWithoutScene );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < skins.length; ++ i ) {\n\n\t\t\t\tprocessSkin( skins[ i ] );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < options.animations.length; ++ i ) {\n\n\t\t\t\tprocessAnimation( options.animations[ i ], input[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction postProcessBuffers() {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tif ( outputJSON.buffers && outputJSON.buffers.length > 0 ) {\n\n\t\t\t\t\t// Merge buffers\n\t\t\t\t\tvar blob = new Blob( buffers, { type: 'application/octet-stream' } );\n\n\t\t\t\t\t// Update bytelength of the single buffer.\n\t\t\t\t\toutputJSON.buffers[ 0 ].byteLength = blob.size;\n\n\t\t\t\t\tif ( options.mode === \"gltf\" ) {\n\n\t\t\t\t\t\toutputJSON.buffers[ 0 ].uri = \"scene.bin\";\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputBuffers.push( blob );\n\n\t\t\t\t}\n\n\t\t\t\tresolve();\n\n\t\t\t} );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tprocessInput( input );\n\n\t\t} catch ( e ) {\n\n\t\t\tonError( e );\n\n\t\t}\n\n\t\tPromise.all( pending ).then( postProcessBuffers ).then( function () {\n\n\t\t\t// Declare extensions.\n\t\t\tvar extensionsUsedList = Object.keys( extensionsUsed );\n\t\t\tif ( extensionsUsedList.length > 0 ) outputJSON.extensionsUsed = extensionsUsedList;\n\n\t\t\tonDone( {\n\t\t\t\tjson: outputJSON,\n\t\t\t\tbuffers: outputBuffers,\n\t\t\t\timages: outputImages\n\t\t\t} );\n\n\t\t} ).catch( onError );\n\n\t},\n\n\t/**\n\t * Given a chunks object returned by GLTFLoader.parseChunks, create a blob storing a valid .glb.\n\t * @param  {Object} chunks  chunks object returned by GLTFLoader.parseChunks\n\t * @param  {Function} onDone  Callback on completed\n\t * @param  {Function} onError  Callback on error\n\t */\n\tcreateGLBBlob: function ( chunks, onDone, onError ) {\n\n\t\tif ( chunks.buffers.length > 1 ) {\n\n\t\t\tonError( new Error( \"GLTFExporter: exportGLB expects 0 or 1 buffers.\" ) );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\n\t\tvar GLB_HEADER_BYTES = 12;\n\t\tvar GLB_HEADER_MAGIC = 0x46546C67;\n\t\tvar GLB_VERSION = 2;\n\n\t\tvar GLB_CHUNK_PREFIX_BYTES = 8;\n\t\tvar GLB_CHUNK_TYPE_JSON = 0x4E4F534A;\n\t\tvar GLB_CHUNK_TYPE_BIN = 0x004E4942;\n\n\t\tfunction readBinArrayBuffer( blob ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tvar reader = new window.FileReader();\n\n\t\t\t\treader.readAsArrayBuffer( blob );\n\t\t\t\treader.onloadend = function () {\n\n\t\t\t\t\tvar binaryChunk = GLTFExporter.Utils.getPaddedArrayBuffer( reader.result );\n\t\t\t\t\tresolve( binaryChunk );\n\n\t\t\t\t};\n\n\t\t\t\treader.onerror = reject;\n\n\t\t\t} );\n\n\t\t}\n\n\t\t/**\n\t\t * Converts a string to an ArrayBuffer.\n\t\t * @param  {string} text\n\t\t * @return {ArrayBuffer}\n\t\t */\n\t\tfunction stringToArrayBuffer( text ) {\n\n\t\t\tif ( window.TextEncoder !== undefined ) {\n\n\t\t\t\treturn new TextEncoder().encode( text ).buffer;\n\n\t\t\t}\n\n\t\t\tvar array = new Uint8Array( new ArrayBuffer( text.length ) );\n\n\t\t\tfor ( var i = 0, il = text.length; i < il; i ++ ) {\n\n\t\t\t\tvar value = text.charCodeAt( i );\n\n\t\t\t\t// Replacing multi-byte character with space(0x20).\n\t\t\t\tarray[ i ] = value > 0xFF ? 0x20 : value;\n\n\t\t\t}\n\n\t\t\treturn array.buffer;\n\n\t\t}\n\n\t\tvar pending = [];\n\t\tvar blobParts = [];\n\n\t\t// GLB header.\n\t\tvar header = new ArrayBuffer( GLB_HEADER_BYTES );\n\t\tvar headerView = new DataView( header );\n\t\theaderView.setUint32( 0, GLB_HEADER_MAGIC, true );\n\t\theaderView.setUint32( 4, GLB_VERSION, true );\n\n\t\tblobParts.push( header );\n\n\t\t// JSON chunk.\n\t\tvar jsonChunk = GLTFExporter.Utils.getPaddedArrayBuffer( stringToArrayBuffer( JSON.stringify( chunks.json ) ), 0x20 );\n\t\tvar jsonChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\tjsonChunkPrefix.setUint32( 0, jsonChunk.byteLength, true );\n\t\tjsonChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_JSON, true );\n\n\t\tblobParts.push( jsonChunkPrefix, jsonChunk );\n\n\t\tif ( chunks.buffers.length !== 0 ) {\n\n\t\t\tvar pendingBinChunk = readBinArrayBuffer( chunks.buffers[ 0 ] ).then( function ( binaryChunk ) {\n\n\t\t\t\tvar binaryChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\t\t\tbinaryChunkPrefix.setUint32( 0, binaryChunk.byteLength, true );\n\t\t\t\tbinaryChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_BIN, true );\n\n\t\t\t\tvar totalByteLength = GLB_HEADER_BYTES\n\t\t\t\t\t+ jsonChunkPrefix.byteLength + jsonChunk.byteLength\n\t\t\t\t\t+ binaryChunkPrefix.byteLength + binaryChunk.byteLength;\n\t\t\t\theaderView.setUint32( 8, totalByteLength, true );\n\n\t\t\t\tblobParts.push( binaryChunkPrefix, binaryChunk );\n\n\t\t\t} );\n\n\t\t\tpending.push( pendingBinChunk );\n\n\t\t}\n\n\t\tPromise.all( pending ).then( function ( ) {\n\n\t\t\tvar glbBlob = new Blob( blobParts, { type: 'application/octet-stream' } );\n\t\t\tonDone( glbBlob );\n\n\t\t} ).catch( onError );\n\n\t},\n\n\t/**\n\t * Parse scenes and generate GLTF output\n\t * @param  {Scene or [THREE.Scenes]} input   Scene or Array of THREE.Scenes\n\t * @param  {Function} onDone  Callback on completed\n\t * @param  {Function} onError  Callback on error\n\t * @param  {Object} options options\n\t */\n\tparse: function ( input, onDone, onError, options ) {\n\n\t\tif ( typeof onError === \"object\" ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: .parse() now expects ( input, onDone, onError, options ).' );\n\n\t\t}\n\n\t\tif ( options && options.binary !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: options.binary has been deprecated. Use options.mode = \"glb\" instead.' );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tthis.parseChunks( input, function ( chunks ) {\n\n\t\t\tif ( options.mode === \"gltf\" ) {\n\n\t\t\t\tonDone( chunks );\n\n\t\t\t} else {\n\n\t\t\t\tscope.createGLBBlob( chunks, onDone, onError );\n\n\t\t\t}\n\n\t\t}, onError, options );\n\n\t}\n\n};\n\nGLTFExporter.Utils = {\n\n\t/**\n\t * Get the required size + padding for a buffer, rounded to the next 4-byte boundary.\n\t * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment\n\t *\n\t * @param {Integer} bufferSize The size the original buffer.\n\t * @returns {Integer} new buffer size with required padding.\n\t *\n\t */\n\tgetPaddedBufferSize( bufferSize ) {\n\n\t\treturn Math.ceil( bufferSize / 4 ) * 4;\n\n\t},\n\n\t/**\n\t * Returns a buffer aligned to 4-byte boundary.\n\t *\n\t * @param {ArrayBuffer} arrayBuffer Buffer to pad\n\t * @param {Integer} paddingByte (Optional)\n\t * @returns {ArrayBuffer} The same buffer if it's already aligned to 4-byte boundary or a new buffer\n\t */\n\tgetPaddedArrayBuffer( arrayBuffer, paddingByte ) {\n\n\t\tpaddingByte = paddingByte || 0;\n\n\t\tvar paddedLength = GLTFExporter.Utils.getPaddedBufferSize( arrayBuffer.byteLength );\n\n\t\tif ( paddedLength !== arrayBuffer.byteLength ) {\n\n\t\t\tvar array = new Uint8Array( paddedLength );\n\t\t\tarray.set( new Uint8Array( arrayBuffer ) );\n\n\t\t\tif ( paddingByte !== 0 ) {\n\n\t\t\t\tfor ( var i = arrayBuffer.byteLength; i < paddedLength; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = paddingByte;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn array.buffer;\n\n\t\t}\n\n\t\treturn arrayBuffer;\n\n\t},\n\n\tinsertKeyframe: function ( track, time ) {\n\n\t\tvar tolerance = 0.001; // 1ms\n\t\tvar valueSize = track.getValueSize();\n\n\t\tvar times = new track.TimeBufferType( track.times.length + 1 );\n\t\tvar values = new track.ValueBufferType( track.values.length + valueSize );\n\t\tvar interpolant = track.createInterpolant( new track.ValueBufferType( valueSize ) );\n\n\t\tvar index;\n\n\t\tif ( track.times.length === 0 ) {\n\n\t\t\ttimes[ 0 ] = time;\n\n\t\t\tfor ( var i = 0; i < valueSize; i ++ ) {\n\n\t\t\t\tvalues[ i ] = 0;\n\n\t\t\t}\n\n\t\t\tindex = 0;\n\n\t\t} else if ( time < track.times[ 0 ] ) {\n\n\t\t\tif ( Math.abs( track.times[ 0 ] - time ) < tolerance ) return 0;\n\n\t\t\ttimes[ 0 ] = time;\n\t\t\ttimes.set( track.times, 1 );\n\n\t\t\tvalues.set( interpolant.evaluate( time ), 0 );\n\t\t\tvalues.set( track.values, valueSize );\n\n\t\t\tindex = 0;\n\n\t\t} else if ( time > track.times[ track.times.length - 1 ] ) {\n\n\t\t\tif ( Math.abs( track.times[ track.times.length - 1 ] - time ) < tolerance ) {\n\n\t\t\t\treturn track.times.length - 1;\n\n\t\t\t}\n\n\t\t\ttimes[ times.length - 1 ] = time;\n\t\t\ttimes.set( track.times, 0 );\n\n\t\t\tvalues.set( track.values, 0 );\n\t\t\tvalues.set( interpolant.evaluate( time ), track.values.length );\n\n\t\t\tindex = times.length - 1;\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < track.times.length; i ++ ) {\n\n\t\t\t\tif ( Math.abs( track.times[ i ] - time ) < tolerance ) return i;\n\n\t\t\t\tif ( track.times[ i ] < time && track.times[ i + 1 ] > time ) {\n\n\t\t\t\t\ttimes.set( track.times.slice( 0, i + 1 ), 0 );\n\t\t\t\t\ttimes[ i + 1 ] = time;\n\t\t\t\t\ttimes.set( track.times.slice( i + 1 ), i + 2 );\n\n\t\t\t\t\tvalues.set( track.values.slice( 0, ( i + 1 ) * valueSize ), 0 );\n\t\t\t\t\tvalues.set( interpolant.evaluate( time ), ( i + 1 ) * valueSize );\n\t\t\t\t\tvalues.set( track.values.slice( ( i + 1 ) * valueSize ), ( i + 2 ) * valueSize );\n\n\t\t\t\t\tindex = i + 1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttrack.times = times;\n\t\ttrack.values = values;\n\n\t\treturn index;\n\n\t},\n\n\tmergeMorphTargetTracks: function ( clip, root ) {\n\n\t\tvar tracks = [];\n\t\tvar mergedTracks = {};\n\t\tvar sourceTracks = clip.tracks;\n\n\t\tfor ( var i = 0; i < sourceTracks.length; ++ i ) {\n\n\t\t\tvar sourceTrack = sourceTracks[ i ];\n\t\t\tvar sourceTrackBinding = PropertyBinding.parseTrackName( sourceTrack.name );\n\t\t\tvar sourceTrackNode = PropertyBinding.findNode( root, sourceTrackBinding.nodeName );\n\n\t\t\tif ( sourceTrackBinding.propertyName !== 'morphTargetInfluences' || sourceTrackBinding.propertyIndex === undefined ) {\n\n\t\t\t\t// Tracks that don't affect morph targets, or that affect all morph targets together, can be left as-is.\n\t\t\t\ttracks.push( sourceTrack );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodDiscrete\n\t\t\t\t&& sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodLinear ) {\n\n\t\t\t\tif ( sourceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\t\t// This should never happen, because glTF morph target animations\n\t\t\t\t\t// affect all targets already.\n\t\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.' );\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead.' );\n\n\t\t\t\tsourceTrack = sourceTrack.clone();\n\t\t\t\tsourceTrack.setInterpolation( InterpolateLinear );\n\n\t\t\t}\n\n\t\t\tvar targetCount = sourceTrackNode.morphTargetInfluences.length;\n\t\t\tvar targetIndex = sourceTrackNode.morphTargetDictionary[ sourceTrackBinding.propertyIndex ];\n\n\t\t\tif ( targetIndex === undefined ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Morph target name not found: ' + sourceTrackBinding.propertyIndex );\n\n\t\t\t}\n\n\t\t\tvar mergedTrack;\n\n\t\t\t// If this is the first time we've seen this object, create a new\n\t\t\t// track to store merged keyframe data for each morph target.\n\t\t\tif ( mergedTracks[ sourceTrackNode.uuid ] === undefined ) {\n\n\t\t\t\tmergedTrack = sourceTrack.clone();\n\n\t\t\t\tvar values = new mergedTrack.ValueBufferType( targetCount * mergedTrack.times.length );\n\n\t\t\t\tfor ( var j = 0; j < mergedTrack.times.length; j ++ ) {\n\n\t\t\t\t\tvalues[ j * targetCount + targetIndex ] = mergedTrack.values[ j ];\n\n\t\t\t\t}\n\n\t\t\t\tmergedTrack.name = '.morphTargetInfluences';\n\t\t\t\tmergedTrack.values = values;\n\n\t\t\t\tmergedTracks[ sourceTrackNode.uuid ] = mergedTrack;\n\t\t\t\ttracks.push( mergedTrack );\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar mergedKeyframeIndex = 0;\n\t\t\tvar sourceKeyframeIndex = 0;\n\t\t\tvar sourceInterpolant = sourceTrack.createInterpolant( new sourceTrack.ValueBufferType( 1 ) );\n\n\t\t\tmergedTrack = mergedTracks[ sourceTrackNode.uuid ];\n\n\t\t\t// For every existing keyframe of the merged track, write a (possibly\n\t\t\t// interpolated) value from the source track.\n\t\t\tfor ( var j = 0; j < mergedTrack.times.length; j ++ ) {\n\n\t\t\t\tmergedTrack.values[ j * targetCount + targetIndex ] = sourceInterpolant.evaluate( mergedTrack.times[ j ] );\n\n\t\t\t}\n\n\t\t\t// For every existing keyframe of the source track, write a (possibly\n\t\t\t// new) keyframe to the merged track. Values from the previous loop may\n\t\t\t// be written again, but keyframes are de-duplicated.\n\t\t\tfor ( var j = 0; j < sourceTrack.times.length; j ++ ) {\n\n\t\t\t\tvar keyframeIndex = this.insertKeyframe( mergedTrack, sourceTrack.times[ j ] );\n\t\t\t\tmergedTrack.values[ keyframeIndex * targetCount + targetIndex ] = sourceTrack.values[ j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\treturn clip;\n\n\t}\n\n};\n\nexport { GLTFExporter };\n","var AEntity = require('../../core/a-entity');\nvar components = require('../../core/component').components;\nvar registerElement = require('../../core/a-register-element').registerElement;\nvar utils = require('../../utils/');\n\nvar debug = utils.debug;\nvar setComponentProperty = utils.entity.setComponentProperty;\nvar log = debug('extras:primitives:debug');\nvar warn = debug('extras:primitives:warn');\n\nvar primitives = module.exports.primitives = {};\n\nmodule.exports.registerPrimitive = function registerPrimitive (name, definition) {\n  name = name.toLowerCase();\n  log('Registering <%s>', name);\n\n  // Deprecation warning for defaultAttributes usage.\n  if (definition.defaultAttributes) {\n    warn(\"The 'defaultAttributes' object is deprecated. Use 'defaultComponents' instead.\");\n  }\n\n  var primitive = registerElement(name, {\n    prototype: Object.create(AEntity.prototype, {\n      defaultComponentsFromPrimitive: {\n        value: definition.defaultComponents || definition.defaultAttributes || {}\n      },\n      deprecated: {value: definition.deprecated || null},\n      deprecatedMappings: {value: definition.deprecatedMappings || {}},\n      mappings: {value: definition.mappings || {}},\n\n      createdCallback: {\n        value: function () {\n          if (definition.deprecated) { console.warn(definition.deprecated); }\n          this.resolveMappingCollisions();\n        }\n      },\n\n      /**\n       * If a mapping collides with a registered component name\n       * it renames the mapping to componentname-property\n       */\n      resolveMappingCollisions: {\n        value: function () {\n          var mappings = this.mappings;\n          var self = this;\n          Object.keys(mappings).forEach(function resolveCollision (key) {\n            var newAttribute;\n            if (key !== key.toLowerCase()) { warn('Mapping keys should be specified in lower case. The mapping key ' + key + ' may not be recognized'); }\n            if (components[key]) {\n              newAttribute = mappings[key].replace('.', '-');\n              mappings[newAttribute] = mappings[key];\n              delete mappings[key];\n              console.warn('The primitive ' + self.tagName.toLowerCase() + ' has a mapping collision. ' +\n                           'The attribute ' + key + ' has the same name as a registered component and' +\n                           ' has been renamed to ' + newAttribute);\n            }\n          });\n        }\n      },\n\n      getExtraComponents: {\n        value: function () {\n          var attr;\n          var data;\n          var i;\n          var mapping;\n          var mixins;\n          var path;\n          var self = this;\n\n          // Gather component data from default components.\n          data = utils.clone(this.defaultComponentsFromPrimitive);\n\n          // Factor in mixins to overwrite default components.\n          mixins = this.getAttribute('mixin');\n          if (mixins) {\n            mixins = mixins.trim().split(' ');\n            mixins.forEach(function applyMixin (mixinId) {\n              var mixinComponents = self.sceneEl.querySelector('#' + mixinId).componentCache;\n              Object.keys(mixinComponents).forEach(function setComponent (name) {\n                data[name] = extend(data[name], mixinComponents[name]);\n              });\n            });\n          }\n\n          // Gather component data from mappings.\n          for (i = 0; i < this.attributes.length; i++) {\n            attr = this.attributes[i];\n            mapping = this.mappings[attr.name];\n            if (mapping) {\n              path = utils.entity.getComponentPropertyPath(mapping);\n              if (path.constructor === Array) {\n                data[path[0]] = data[path[0]] || {};\n                data[path[0]][path[1]] = attr.value.trim();\n              } else {\n                data[path] = attr.value.trim();\n              }\n              continue;\n            }\n          }\n\n          return data;\n\n          /**\n           * For the base to be extensible, both objects must be pure JavaScript objects.\n           * The function assumes that base is undefined, or null or a pure object.\n           */\n          function extend (base, extension) {\n            if (isUndefined(base)) {\n              return copy(extension);\n            }\n            if (isUndefined(extension)) {\n              return copy(base);\n            }\n            if (isPureObject(base) && isPureObject(extension)) {\n              return utils.extendDeep(base, extension);\n            }\n            return copy(extension);\n          }\n\n          function isUndefined (value) {\n            return typeof value === 'undefined';\n          }\n\n          function copy (value) {\n            if (isPureObject(value)) {\n              return utils.extendDeep({}, value);\n            }\n            return value;\n          }\n\n          function isPureObject (value) {\n            return value !== null && value.constructor === Object;\n          }\n        }\n      },\n\n      /**\n       * Sync to attribute to component property whenever mapped attribute changes.\n       * If attribute is mapped to a component property, set the component property using\n       * the attribute value.\n       */\n      attributeChangedCallback: {\n        value: function (attr, oldVal, value) {\n          var componentName = this.mappings[attr];\n\n          if (attr in this.deprecatedMappings) {\n            console.warn(this.deprecatedMappings[attr]);\n          }\n\n          if (!attr || !componentName) { return; }\n\n          // Set value.\n          setComponentProperty(this, componentName, value);\n        }\n      }\n    })\n  });\n\n  // Store.\n  primitives[name] = primitive;\n  return primitive;\n};\n\n/**\n * Add component mappings using schema.\n */\nfunction addComponentMapping (componentName, mappings) {\n  var schema = components[componentName].schema;\n  Object.keys(schema).map(function (prop) {\n    // Hyphenate where there is camelCase.\n    var attrName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    // If there is a mapping collision, prefix with component name and hyphen.\n    if (mappings[attrName] !== undefined) { attrName = componentName + '-' + prop; }\n    mappings[attrName] = componentName + '.' + prop;\n  });\n}\n\n/**\n * Helper to define a primitive, building mappings using a component schema.\n */\nfunction definePrimitive (tagName, defaultComponents, mappings) {\n  // If no initial mappings provided, start from empty map.\n  mappings = mappings || {};\n\n  // From the default components, add mapping automagically.\n  Object.keys(defaultComponents).map(function buildMappings (componentName) {\n    addComponentMapping(componentName, mappings);\n  });\n\n  // Register the primitive.\n  module.exports.registerPrimitive(tagName, utils.extendDeep({}, null, {\n    defaultComponents: defaultComponents,\n    mappings: mappings\n  }));\n}\nmodule.exports.definePrimitive = definePrimitive;\n","/**\n * Check if device is iOS and older than version 10.\n */\nmodule.exports = function isIOSOlderThan10 (userAgent) {\n  return /(iphone|ipod|ipad).*os.(7_|8_|9_)/i.test(userAgent);\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","var error = require('debug')('device:error');\n\nvar vrDisplay;\n\n// It catches vrdisplayactivate early to ensure we can enter VR mode after the scene loads.\nwindow.addEventListener('vrdisplayactivate', function (evt) {\n  var canvasEl;\n  // WebXR takes priority if available.\n  if (navigator.xr) { return; }\n  canvasEl = document.createElement('canvas');\n  vrDisplay = evt.display;\n  // Request present immediately. a-scene will be allowed to enter VR without user gesture.\n  vrDisplay.requestPresent([{source: canvasEl}]).then(function () {}, function () {});\n});\n\n// Support both WebVR and WebXR APIs.\nif (navigator.xr) {\n  navigator.xr.requestDevice().then(function (device) {\n    if (!device) { return; }\n    device.supportsSession({immersive: true, exclusive: true}).then(function () {\n      var sceneEl = document.querySelector('a-scene');\n      vrDisplay = device;\n      if (sceneEl) { sceneEl.emit('displayconnected', {vrDisplay: vrDisplay}); }\n    });\n  }).catch(function (err) {\n    error('WebXR Request Device: ' + err.message);\n  });\n} else {\n  if (navigator.getVRDisplays) {\n    navigator.getVRDisplays().then(function (displays) {\n      var sceneEl = document.querySelector('a-scene');\n      vrDisplay = displays.length && displays[0];\n      if (sceneEl) { sceneEl.emit('displayconnected', {vrDisplay: vrDisplay}); }\n    });\n  }\n}\n\nmodule.exports.isWebXRAvailable = navigator.xr !== undefined;\n\nfunction getVRDisplay () { return vrDisplay; }\nmodule.exports.getVRDisplay = getVRDisplay;\n\n/**\n * Determine if a headset is connected by checking if a vrDisplay is available.\n */\nfunction checkHeadsetConnected () { return !!getVRDisplay(); }\nmodule.exports.checkHeadsetConnected = checkHeadsetConnected;\n\n/**\n * Checks if browser is mobile and not stand-alone dedicated vr device.\n * @return {Boolean} True if mobile browser detected.\n */\nvar isMobile = (function () {\n  var _isMobile = false;\n  (function (a) {\n    // eslint-disable-next-line no-useless-escape\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n      _isMobile = true;\n    }\n    if (isIOS() || isTablet() || isR7()) {\n      _isMobile = true;\n    }\n    if (isMobileVR()) {\n      _isMobile = false;\n    }\n  })(window.navigator.userAgent || window.navigator.vendor || window.opera);\n\n  return function () { return _isMobile; };\n})();\nmodule.exports.isMobile = isMobile;\n\n/**\n *  Detect tablet devices.\n *  @param {string} mockUserAgent - Allow passing a mock user agent for testing.\n */\nfunction isTablet (mockUserAgent) {\n  var userAgent = mockUserAgent || window.navigator.userAgent;\n  return /ipad|Nexus (7|9)|xoom|sch-i800|playbook|tablet|kindle/i.test(userAgent);\n}\nmodule.exports.isTablet = isTablet;\n\nfunction isIOS () {\n  return /iPad|iPhone|iPod/.test(window.navigator.platform);\n}\nmodule.exports.isIOS = isIOS;\n\n/**\n *  Detect browsers in Stand-Alone headsets\n */\nfunction isMobileVR () {\n  return /(OculusBrowser)|(SamsungBrowser)|(Mobile VR)/i.test(window.navigator.userAgent);\n}\nmodule.exports.isMobileVR = isMobileVR;\n\nfunction isR7 () {\n  return /R7 Build/.test(window.navigator.userAgent);\n}\nmodule.exports.isR7 = isR7;\n\n/**\n * Checks mobile device orientation.\n * @return {Boolean} True if landscape orientation.\n */\nmodule.exports.isLandscape = function () {\n  var orientation = window.orientation;\n  if (isR7()) { orientation += 90; }\n  return orientation === 90 || orientation === -90;\n};\n\n/**\n * Check if running in a browser or spoofed browser (bundler).\n * We need to check a node api that isn't mocked on either side.\n * `require` and `module.exports` are mocked in browser by bundlers.\n * `window` is mocked in node.\n * `process` is also mocked by browserify, but has custom properties.\n */\nmodule.exports.isBrowserEnvironment = !!(!process || process.browser);\n\n/**\n * Check if running in node on the server.\n */\nmodule.exports.isNodeEnvironment = !module.exports.isBrowserEnvironment;\n\n/**\n * Update an Object3D pose if a polyfilled vrDisplay is present.\n */\nmodule.exports.PolyfillControls = function PolyfillControls (object) {\n  var frameData;\n  var vrDisplay = window.webvrpolyfill && window.webvrpolyfill.getPolyfillDisplays()[0];\n  if (window.VRFrameData) { frameData = new window.VRFrameData(); }\n  this.update = function () {\n    var pose;\n    if (!vrDisplay) { return; }\n    vrDisplay.getFrameData(frameData);\n    pose = frameData.pose;\n    if (pose.orientation !== null) {\n      object.quaternion.fromArray(pose.orientation);\n    }\n    if (pose.position !== null) {\n      object.position.fromArray(pose.position);\n    } else {\n      object.position.set(0, 0, 0);\n    }\n  };\n};\n\n","/*\n  Adapted deePool by Kyle Simpson.\n  MIT License: http://getify.mit-license.org\n*/\nvar EMPTY_SLOT = Object.freeze(Object.create(null));\n\n// Default object factory.\nfunction defaultObjectFactory () { return {}; }\n\n/**\n * Create a new pool.\n */\nmodule.exports.createPool = function createPool (objectFactory) {\n  var objPool = [];\n  var nextFreeSlot = null;  // Pool location to look for a free object to use.\n\n  objectFactory = objectFactory || defaultObjectFactory;\n\n  function use () {\n    var objToUse;\n    if (nextFreeSlot === null || nextFreeSlot === objPool.length) {\n      grow(objPool.length || 5);\n    }\n    objToUse = objPool[nextFreeSlot];\n    objPool[nextFreeSlot++] = EMPTY_SLOT;\n    clearObject(objToUse);\n    return objToUse;\n  }\n\n  function recycle (obj) {\n    if (!(obj instanceof Object)) { return; }\n    if (nextFreeSlot === null || nextFreeSlot === -1) {\n      objPool[objPool.length] = obj;\n      return;\n    }\n    objPool[--nextFreeSlot] = obj;\n  }\n\n  function grow (count) {\n    var currentLength;\n    var i;\n\n    count = count === undefined ? objPool.length : count;\n    if (count > 0 && nextFreeSlot == null) {\n      nextFreeSlot = 0;\n    }\n\n    if (count > 0) {\n      currentLength = objPool.length;\n      objPool.length += Number(count);\n      for (i = currentLength; i < objPool.length; i++) {\n        // Add new obj to pool.\n        objPool[i] = objectFactory();\n      }\n    }\n\n    return objPool.length;\n  }\n\n  function size () {\n    return objPool.length;\n  }\n\n  return {\n    grow: grow,\n    pool: objPool,\n    recycle: recycle,\n    size: size,\n    use: use\n  };\n};\n\nfunction clearObject (obj) {\n  var key;\n  if (!obj || obj.constructor !== Object) { return; }\n  for (key in obj) { obj[key] = undefined; }\n}\nmodule.exports.clearObject = clearObject;\n","/**\n * Split a delimited component property string (e.g., `material.color`) to an object\n * containing `component` name and `property` name. If there is no delimiter, just return the\n * string back.\n *\n * Cache arrays from splitting strings via delimiter to save on memory.\n *\n * @param {string} str - e.g., `material.opacity`.\n * @param {string} delimiter - e.g., `.`.\n * @returns {array} e.g., `['material', 'opacity']`.\n */\nvar propertyPathCache = {};\nfunction getComponentPropertyPath (str, delimiter) {\n  delimiter = delimiter || '.';\n  if (!propertyPathCache[delimiter]) { propertyPathCache[delimiter] = {}; }\n  if (str.indexOf(delimiter) !== -1) {\n    propertyPathCache[delimiter][str] = str.split(delimiter);\n  } else {\n    propertyPathCache[delimiter][str] = str;\n  }\n  return propertyPathCache[delimiter][str];\n}\nmodule.exports.getComponentPropertyPath = getComponentPropertyPath;\nmodule.exports.propertyPathCache = propertyPathCache;\n\n/**\n * Get component property using encoded component name + component property name with a\n * delimiter.\n */\nmodule.exports.getComponentProperty = function (el, name, delimiter) {\n  var splitName;\n  delimiter = delimiter || '.';\n  if (name.indexOf(delimiter) !== -1) {\n    splitName = getComponentPropertyPath(name, delimiter);\n    if (splitName.constructor === String) {\n      return el.getAttribute(splitName);\n    }\n    return el.getAttribute(splitName[0])[splitName[1]];\n  }\n  return el.getAttribute(name);\n};\n\n/**\n * Set component property using encoded component name + component property name with a\n * delimiter.\n */\nmodule.exports.setComponentProperty = function (el, name, value, delimiter) {\n  var splitName;\n  delimiter = delimiter || '.';\n  if (name.indexOf(delimiter) !== -1) {\n    splitName = getComponentPropertyPath(name, delimiter);\n    if (splitName.constructor === String) {\n      el.setAttribute(splitName, value);\n    } else {\n      el.setAttribute(splitName[0], splitName[1], value);\n    }\n    return;\n  }\n  el.setAttribute(name, value);\n};\n","module.exports = function forceCanvasResizeSafariMobile (canvasEl) {\n  var width = canvasEl.style.width;\n  var height = canvasEl.style.height;\n  // Taken from webvr-polyfill (https://github.com/borismus/webvr-polyfill/blob/85f657cd502ec9417bf26b87c3cb2afa6a70e079/src/util.js#L200)\n  // iOS only workaround for https://bugs.webkit.org/show_bug.cgi?id=152556\n  // By changing the size 1 pixel and restoring the previous value\n  // we trigger a size recalculation cycle.\n  canvasEl.style.width = (parseInt(width, 10) + 1) + 'px';\n  canvasEl.style.height = (parseInt(height, 10) + 1) + 'px';\n  setTimeout(function () {\n    canvasEl.style.width = width;\n    canvasEl.style.height = height;\n  }, 200);\n};\n","// https://stackoverflow.com/a/17907562\nfunction getInternetExplorerVersion () {\n  var version = -1;\n  var userAgent = navigator.userAgent;\n  var re;\n  if (navigator.appName === 'Microsoft Internet Explorer') {\n    re = new RegExp('MSIE ([0-9]{1,}[\\\\.0-9]{0,})');\n    if (re.exec(userAgent) != null) { version = parseFloat(RegExp.$1); }\n  } else if (navigator.appName === 'Netscape') {\n    re = new RegExp('Trident/.*rv:([0-9]{1,}[\\\\.0-9]{0,})');\n    if (re.exec(userAgent) != null) { version = parseFloat(RegExp.$1); }\n  }\n  return version;\n}\n\nmodule.exports = getInternetExplorerVersion() === 11;\n","/** Copyright 2016 The Draco Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {THREE.LoadingManager} manager\n */\nTHREE.DRACOLoader = function ( manager ) {\n\n\tthis.timeLoaded = 0;\n\tthis.manager = manager || THREE.DefaultLoadingManager;\n\tthis.materials = null;\n\tthis.verbosity = 0;\n\tthis.attributeOptions = {};\n\tthis.drawMode = THREE.TrianglesDrawMode;\n\t// Native Draco attribute type to Three.JS attribute type.\n\tthis.nativeAttributeMap = {\n\t\tposition: \"POSITION\",\n\t\tnormal: \"NORMAL\",\n\t\tcolor: \"COLOR\",\n\t\tuv: \"TEX_COORD\"\n\t};\n\n};\n\nTHREE.DRACOLoader.prototype = {\n\tconstructor: THREE.DRACOLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( \"arraybuffer\" );\n\t\tloader.load(\n\t\t\turl,\n\t\t\tfunction ( blob ) {\n\n\t\t\t\tscope.decodeDracoFile( blob, onLoad );\n\n\t\t\t},\n\t\t\tonProgress,\n\t\t\tonError\n\t\t);\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetVerbosity: function ( level ) {\n\n\t\tthis.verbosity = level;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t *  Sets desired mode for generated geometry indices.\n\t *  Can be either:\n\t *      THREE.TrianglesDrawMode\n\t *      THREE.TriangleStripDrawMode\n\t */\n\tsetDrawMode: function ( drawMode ) {\n\n\t\tthis.drawMode = drawMode;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Skips dequantization for a specific attribute.\n\t * |attributeName| is the THREE.js name of the given attribute type.\n\t * The only currently supported |attributeName| is 'position', more may be\n\t * added in future.\n\t */\n\tsetSkipDequantization: function ( attributeName, skip ) {\n\n\t\tvar skipDequantization = true;\n\t\tif ( typeof skip !== \"undefined\" ) skipDequantization = skip;\n\t\tthis.getAttributeOptions(\n\t\t\tattributeName\n\t\t).skipDequantization = skipDequantization;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Decompresses a Draco buffer. Names of attributes (for ID and type maps)\n\t * must be one of the supported three.js types, including: position, color,\n\t * normal, uv, uv2, skinIndex, skinWeight.\n\t *\n\t * @param {ArrayBuffer} rawBuffer\n\t * @param {Function} callback\n\t * @param {Object|undefined} attributeUniqueIdMap Provides a pre-defined ID\n\t *     for each attribute in the geometry to be decoded. If given,\n\t *     `attributeTypeMap` is required and `nativeAttributeMap` will be\n\t *     ignored.\n\t * @param {Object|undefined} attributeTypeMap Provides a predefined data\n\t *     type (as a typed array constructor) for each attribute in the\n\t *     geometry to be decoded.\n\t */\n\tdecodeDracoFile: function (\n\t\trawBuffer,\n\t\tcallback,\n\t\tattributeUniqueIdMap,\n\t\tattributeTypeMap\n\t) {\n\n\t\tvar scope = this;\n\t\tTHREE.DRACOLoader.getDecoderModule().then( function ( module ) {\n\n\t\t\tscope.decodeDracoFileInternal(\n\t\t\t\trawBuffer,\n\t\t\t\tmodule.decoder,\n\t\t\t\tcallback,\n\t\t\t\tattributeUniqueIdMap,\n\t\t\t\tattributeTypeMap\n\t\t\t);\n\n\t\t} );\n\n\t},\n\n\tdecodeDracoFileInternal: function (\n\t\trawBuffer,\n\t\tdracoDecoder,\n\t\tcallback,\n\t\tattributeUniqueIdMap,\n\t\tattributeTypeMap\n\t) {\n\n\t\t/*\n\t\t * Here is how to use Draco Javascript decoder and get the geometry.\n\t\t */\n\t\tvar buffer = new dracoDecoder.DecoderBuffer();\n\t\tbuffer.Init( new Int8Array( rawBuffer ), rawBuffer.byteLength );\n\t\tvar decoder = new dracoDecoder.Decoder();\n\n\t\t/*\n\t\t * Determine what type is this file: mesh or point cloud.\n\t\t */\n\t\tvar geometryType = decoder.GetEncodedGeometryType( buffer );\n\t\tif ( geometryType == dracoDecoder.TRIANGULAR_MESH ) {\n\n\t\t\tif ( this.verbosity > 0 ) {\n\n\t\t\t\tconsole.log( \"Loaded a mesh.\" );\n\n\t\t\t}\n\n\t\t} else if ( geometryType == dracoDecoder.POINT_CLOUD ) {\n\n\t\t\tif ( this.verbosity > 0 ) {\n\n\t\t\t\tconsole.log( \"Loaded a point cloud.\" );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar errorMsg = \"THREE.DRACOLoader: Unknown geometry type.\";\n\t\t\tconsole.error( errorMsg );\n\t\t\tthrow new Error( errorMsg );\n\n\t\t}\n\t\tcallback(\n\t\t\tthis.convertDracoGeometryTo3JS(\n\t\t\t\tdracoDecoder,\n\t\t\t\tdecoder,\n\t\t\t\tgeometryType,\n\t\t\t\tbuffer,\n\t\t\t\tattributeUniqueIdMap,\n\t\t\t\tattributeTypeMap\n\t\t\t)\n\t\t);\n\n\t},\n\n\taddAttributeToGeometry: function (\n\t\tdracoDecoder,\n\t\tdecoder,\n\t\tdracoGeometry,\n\t\tattributeName,\n\t\tattributeType,\n\t\tattribute,\n\t\tgeometry,\n\t\tgeometryBuffer\n\t) {\n\n\t\tif ( attribute.ptr === 0 ) {\n\n\t\t\tvar errorMsg = \"THREE.DRACOLoader: No attribute \" + attributeName;\n\t\t\tconsole.error( errorMsg );\n\t\t\tthrow new Error( errorMsg );\n\n\t\t}\n\n\t\tvar numComponents = attribute.num_components();\n\t\tvar numPoints = dracoGeometry.num_points();\n\t\tvar numValues = numPoints * numComponents;\n\t\tvar attributeData;\n\t\tvar TypedBufferAttribute;\n\n\t\tswitch ( attributeType ) {\n\n\t\t\tcase Float32Array:\n\t\t\t\tattributeData = new dracoDecoder.DracoFloat32Array();\n\t\t\t\tdecoder.GetAttributeFloatForAllPoints(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tattribute,\n\t\t\t\t\tattributeData\n\t\t\t\t);\n\t\t\t\tgeometryBuffer[ attributeName ] = new Float32Array( numValues );\n\t\t\t\tTypedBufferAttribute = THREE.Float32BufferAttribute;\n\t\t\t\tbreak;\n\n\t\t\tcase Int8Array:\n\t\t\t\tattributeData = new dracoDecoder.DracoInt8Array();\n\t\t\t\tdecoder.GetAttributeInt8ForAllPoints(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tattribute,\n\t\t\t\t\tattributeData\n\t\t\t\t);\n\t\t\t\tgeometryBuffer[ attributeName ] = new Int8Array( numValues );\n\t\t\t\tTypedBufferAttribute = THREE.Int8BufferAttribute;\n\t\t\t\tbreak;\n\n\t\t\tcase Int16Array:\n\t\t\t\tattributeData = new dracoDecoder.DracoInt16Array();\n\t\t\t\tdecoder.GetAttributeInt16ForAllPoints(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tattribute,\n\t\t\t\t\tattributeData\n\t\t\t\t);\n\t\t\t\tgeometryBuffer[ attributeName ] = new Int16Array( numValues );\n\t\t\t\tTypedBufferAttribute = THREE.Int16BufferAttribute;\n\t\t\t\tbreak;\n\n\t\t\tcase Int32Array:\n\t\t\t\tattributeData = new dracoDecoder.DracoInt32Array();\n\t\t\t\tdecoder.GetAttributeInt32ForAllPoints(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tattribute,\n\t\t\t\t\tattributeData\n\t\t\t\t);\n\t\t\t\tgeometryBuffer[ attributeName ] = new Int32Array( numValues );\n\t\t\t\tTypedBufferAttribute = THREE.Int32BufferAttribute;\n\t\t\t\tbreak;\n\n\t\t\tcase Uint8Array:\n\t\t\t\tattributeData = new dracoDecoder.DracoUInt8Array();\n\t\t\t\tdecoder.GetAttributeUInt8ForAllPoints(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tattribute,\n\t\t\t\t\tattributeData\n\t\t\t\t);\n\t\t\t\tgeometryBuffer[ attributeName ] = new Uint8Array( numValues );\n\t\t\t\tTypedBufferAttribute = THREE.Uint8BufferAttribute;\n\t\t\t\tbreak;\n\n\t\t\tcase Uint16Array:\n\t\t\t\tattributeData = new dracoDecoder.DracoUInt16Array();\n\t\t\t\tdecoder.GetAttributeUInt16ForAllPoints(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tattribute,\n\t\t\t\t\tattributeData\n\t\t\t\t);\n\t\t\t\tgeometryBuffer[ attributeName ] = new Uint16Array( numValues );\n\t\t\t\tTypedBufferAttribute = THREE.Uint16BufferAttribute;\n\t\t\t\tbreak;\n\n\t\t\tcase Uint32Array:\n\t\t\t\tattributeData = new dracoDecoder.DracoUInt32Array();\n\t\t\t\tdecoder.GetAttributeUInt32ForAllPoints(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tattribute,\n\t\t\t\t\tattributeData\n\t\t\t\t);\n\t\t\t\tgeometryBuffer[ attributeName ] = new Uint32Array( numValues );\n\t\t\t\tTypedBufferAttribute = THREE.Uint32BufferAttribute;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvar errorMsg = \"THREE.DRACOLoader: Unexpected attribute type.\";\n\t\t\t\tconsole.error( errorMsg );\n\t\t\t\tthrow new Error( errorMsg );\n\n\t\t}\n\n\t\t// Copy data from decoder.\n\t\tfor ( var i = 0; i < numValues; i ++ ) {\n\n\t\t\tgeometryBuffer[ attributeName ][ i ] = attributeData.GetValue( i );\n\n\t\t}\n\t\t// Add attribute to THREEJS geometry for rendering.\n\t\tgeometry.addAttribute(\n\t\t\tattributeName,\n\t\t\tnew TypedBufferAttribute( geometryBuffer[ attributeName ], numComponents )\n\t\t);\n\t\tdracoDecoder.destroy( attributeData );\n\n\t},\n\n\tconvertDracoGeometryTo3JS: function (\n\t\tdracoDecoder,\n\t\tdecoder,\n\t\tgeometryType,\n\t\tbuffer,\n\t\tattributeUniqueIdMap,\n\t\tattributeTypeMap\n\t) {\n\n\t\t// TODO: Should not assume native Draco attribute IDs apply.\n\t\tif ( this.getAttributeOptions( \"position\" ).skipDequantization === true ) {\n\n\t\t\tdecoder.SkipAttributeTransform( dracoDecoder.POSITION );\n\n\t\t}\n\t\tvar dracoGeometry;\n\t\tvar decodingStatus;\n\t\tvar start_time = performance.now();\n\t\tif ( geometryType === dracoDecoder.TRIANGULAR_MESH ) {\n\n\t\t\tdracoGeometry = new dracoDecoder.Mesh();\n\t\t\tdecodingStatus = decoder.DecodeBufferToMesh( buffer, dracoGeometry );\n\n\t\t} else {\n\n\t\t\tdracoGeometry = new dracoDecoder.PointCloud();\n\t\t\tdecodingStatus = decoder.DecodeBufferToPointCloud( buffer, dracoGeometry );\n\n\t\t}\n\t\tif ( ! decodingStatus.ok() || dracoGeometry.ptr == 0 ) {\n\n\t\t\tvar errorMsg = \"THREE.DRACOLoader: Decoding failed: \";\n\t\t\terrorMsg += decodingStatus.error_msg();\n\t\t\tconsole.error( errorMsg );\n\t\t\tdracoDecoder.destroy( decoder );\n\t\t\tdracoDecoder.destroy( dracoGeometry );\n\t\t\tthrow new Error( errorMsg );\n\n\t\t}\n\n\t\tvar decode_end = performance.now();\n\t\tdracoDecoder.destroy( buffer );\n\t\t/*\n\t\t * Example on how to retrieve mesh and attributes.\n\t\t */\n\t\tvar numFaces;\n\t\tif ( geometryType == dracoDecoder.TRIANGULAR_MESH ) {\n\n\t\t\tnumFaces = dracoGeometry.num_faces();\n\t\t\tif ( this.verbosity > 0 ) {\n\n\t\t\t\tconsole.log( \"Number of faces loaded: \" + numFaces.toString() );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tnumFaces = 0;\n\n\t\t}\n\n\t\tvar numPoints = dracoGeometry.num_points();\n\t\tvar numAttributes = dracoGeometry.num_attributes();\n\t\tif ( this.verbosity > 0 ) {\n\n\t\t\tconsole.log( \"Number of points loaded: \" + numPoints.toString() );\n\t\t\tconsole.log( \"Number of attributes loaded: \" + numAttributes.toString() );\n\n\t\t}\n\n\t\t// Verify if there is position attribute.\n\t\t// TODO: Should not assume native Draco attribute IDs apply.\n\t\tvar posAttId = decoder.GetAttributeId( dracoGeometry, dracoDecoder.POSITION );\n\t\tif ( posAttId == - 1 ) {\n\n\t\t\tvar errorMsg = \"THREE.DRACOLoader: No position attribute found.\";\n\t\t\tconsole.error( errorMsg );\n\t\t\tdracoDecoder.destroy( decoder );\n\t\t\tdracoDecoder.destroy( dracoGeometry );\n\t\t\tthrow new Error( errorMsg );\n\n\t\t}\n\t\tvar posAttribute = decoder.GetAttribute( dracoGeometry, posAttId );\n\n\t\t// Structure for converting to THREEJS geometry later.\n\t\tvar geometryBuffer = {};\n\t\t// Import data to Three JS geometry.\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t// Do not use both the native attribute map and a provided (e.g. glTF) map.\n\t\tif ( attributeUniqueIdMap ) {\n\n\t\t\t// Add attributes of user specified unique id. E.g. GLTF models.\n\t\t\tfor ( var attributeName in attributeUniqueIdMap ) {\n\n\t\t\t\tvar attributeType = attributeTypeMap[ attributeName ];\n\t\t\t\tvar attributeId = attributeUniqueIdMap[ attributeName ];\n\t\t\t\tvar attribute = decoder.GetAttributeByUniqueId(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tattributeId\n\t\t\t\t);\n\t\t\t\tthis.addAttributeToGeometry(\n\t\t\t\t\tdracoDecoder,\n\t\t\t\t\tdecoder,\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tattributeName,\n\t\t\t\t\tattributeType,\n\t\t\t\t\tattribute,\n\t\t\t\t\tgeometry,\n\t\t\t\t\tgeometryBuffer\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Add native Draco attribute type to geometry.\n\t\t\tfor ( var attributeName in this.nativeAttributeMap ) {\n\n\t\t\t\tvar attId = decoder.GetAttributeId(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tdracoDecoder[ this.nativeAttributeMap[ attributeName ] ]\n\t\t\t\t);\n\t\t\t\tif ( attId !== - 1 ) {\n\n\t\t\t\t\tif ( this.verbosity > 0 ) {\n\n\t\t\t\t\t\tconsole.log( \"Loaded \" + attributeName + \" attribute.\" );\n\n\t\t\t\t\t}\n\t\t\t\t\tvar attribute = decoder.GetAttribute( dracoGeometry, attId );\n\t\t\t\t\tthis.addAttributeToGeometry(\n\t\t\t\t\t\tdracoDecoder,\n\t\t\t\t\t\tdecoder,\n\t\t\t\t\t\tdracoGeometry,\n\t\t\t\t\t\tattributeName,\n\t\t\t\t\t\tFloat32Array,\n\t\t\t\t\t\tattribute,\n\t\t\t\t\t\tgeometry,\n\t\t\t\t\t\tgeometryBuffer\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// For mesh, we need to generate the faces.\n\t\tif ( geometryType == dracoDecoder.TRIANGULAR_MESH ) {\n\n\t\t\tif ( this.drawMode === THREE.TriangleStripDrawMode ) {\n\n\t\t\t\tvar stripsArray = new dracoDecoder.DracoInt32Array();\n\t\t\t\tdecoder.GetTriangleStripsFromMesh(\n\t\t\t\t\tdracoGeometry,\n\t\t\t\t\tstripsArray\n\t\t\t\t);\n\t\t\t\tgeometryBuffer.indices = new Uint32Array( stripsArray.size() );\n\t\t\t\tfor ( var i = 0; i < stripsArray.size(); ++ i ) {\n\n\t\t\t\t\tgeometryBuffer.indices[ i ] = stripsArray.GetValue( i );\n\n\t\t\t\t}\n\t\t\t\tdracoDecoder.destroy( stripsArray );\n\n\t\t\t} else {\n\n\t\t\t\tvar numIndices = numFaces * 3;\n\t\t\t\tgeometryBuffer.indices = new Uint32Array( numIndices );\n\t\t\t\tvar ia = new dracoDecoder.DracoInt32Array();\n\t\t\t\tfor ( var i = 0; i < numFaces; ++ i ) {\n\n\t\t\t\t\tdecoder.GetFaceFromMesh( dracoGeometry, i, ia );\n\t\t\t\t\tvar index = i * 3;\n\t\t\t\t\tgeometryBuffer.indices[ index ] = ia.GetValue( 0 );\n\t\t\t\t\tgeometryBuffer.indices[ index + 1 ] = ia.GetValue( 1 );\n\t\t\t\t\tgeometryBuffer.indices[ index + 2 ] = ia.GetValue( 2 );\n\n\t\t\t\t}\n\t\t\t\tdracoDecoder.destroy( ia );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.drawMode = this.drawMode;\n\t\tif ( geometryType == dracoDecoder.TRIANGULAR_MESH ) {\n\n\t\t\tgeometry.setIndex(\n\t\t\t\tnew ( geometryBuffer.indices.length > 65535\n\t\t\t\t\t? THREE.Uint32BufferAttribute\n\t\t\t\t\t: THREE.Uint16BufferAttribute )( geometryBuffer.indices, 1 )\n\t\t\t);\n\n\t\t}\n\n\t\t// TODO: Should not assume native Draco attribute IDs apply.\n\t\t// TODO: Can other attribute types be quantized?\n\t\tvar posTransform = new dracoDecoder.AttributeQuantizationTransform();\n\t\tif ( posTransform.InitFromAttribute( posAttribute ) ) {\n\n\t\t\t// Quantized attribute. Store the quantization parameters into the\n\t\t\t// THREE.js attribute.\n\t\t\tgeometry.attributes[ \"position\" ].isQuantized = true;\n\t\t\tgeometry.attributes[ \"position\" ].maxRange = posTransform.range();\n\t\t\tgeometry.attributes[\n\t\t\t\t\"position\"\n\t\t\t].numQuantizationBits = posTransform.quantization_bits();\n\t\t\tgeometry.attributes[ \"position\" ].minValues = new Float32Array( 3 );\n\t\t\tfor ( var i = 0; i < 3; ++ i ) {\n\n\t\t\t\tgeometry.attributes[ \"position\" ].minValues[ i ] = posTransform.min_value(\n\t\t\t\t\ti\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\t\tdracoDecoder.destroy( posTransform );\n\t\tdracoDecoder.destroy( decoder );\n\t\tdracoDecoder.destroy( dracoGeometry );\n\n\t\tthis.decode_time = decode_end - start_time;\n\t\tthis.import_time = performance.now() - decode_end;\n\n\t\tif ( this.verbosity > 0 ) {\n\n\t\t\tconsole.log( \"Decode time: \" + this.decode_time );\n\t\t\tconsole.log( \"Import time: \" + this.import_time );\n\n\t\t}\n\t\treturn geometry;\n\n\t},\n\n\tisVersionSupported: function ( version, callback ) {\n\n\t\tTHREE.DRACOLoader.getDecoderModule().then( function ( module ) {\n\n\t\t\tcallback( module.decoder.isVersionSupported( version ) );\n\n\t\t} );\n\n\t},\n\n\tgetAttributeOptions: function ( attributeName ) {\n\n\t\tif ( typeof this.attributeOptions[ attributeName ] === \"undefined\" )\n\t\t\tthis.attributeOptions[ attributeName ] = {};\n\t\treturn this.attributeOptions[ attributeName ];\n\n\t}\n};\n\nTHREE.DRACOLoader.decoderPath = \"./\";\nTHREE.DRACOLoader.decoderConfig = {};\nTHREE.DRACOLoader.decoderModulePromise = null;\n\n/**\n * Sets the base path for decoder source files.\n * @param {string} path\n */\nTHREE.DRACOLoader.setDecoderPath = function ( path ) {\n\n\tTHREE.DRACOLoader.decoderPath = path;\n\n};\n\n/**\n * Sets decoder configuration and releases singleton decoder module. Module\n * will be recreated with the next decoding call.\n * @param {Object} config\n */\nTHREE.DRACOLoader.setDecoderConfig = function ( config ) {\n\n\tvar wasmBinary = THREE.DRACOLoader.decoderConfig.wasmBinary;\n\tTHREE.DRACOLoader.decoderConfig = config || {};\n\tTHREE.DRACOLoader.releaseDecoderModule();\n\n\t// Reuse WASM binary.\n\tif ( wasmBinary ) THREE.DRACOLoader.decoderConfig.wasmBinary = wasmBinary;\n\n};\n\n/**\n * Releases the singleton DracoDecoderModule instance. Module will be recreated\n * with the next decoding call.\n */\nTHREE.DRACOLoader.releaseDecoderModule = function () {\n\n\tTHREE.DRACOLoader.decoderModulePromise = null;\n\n};\n\n/**\n * Gets WebAssembly or asm.js singleton instance of DracoDecoderModule\n * after testing for browser support. Returns Promise that resolves when\n * module is available.\n * @return {Promise<{decoder: DracoDecoderModule}>}\n */\nTHREE.DRACOLoader.getDecoderModule = function () {\n\n\tvar scope = this;\n\tvar path = THREE.DRACOLoader.decoderPath;\n\tvar config = THREE.DRACOLoader.decoderConfig;\n\tvar promise = THREE.DRACOLoader.decoderModulePromise;\n\n\tif ( promise ) return promise;\n\n\t// Load source files.\n\tif ( typeof DracoDecoderModule !== \"undefined\" ) {\n\n\t\t// Loaded externally.\n\t\tpromise = Promise.resolve();\n\n\t} else if ( typeof WebAssembly !== \"object\" || config.type === \"js\" ) {\n\n\t\t// Load with asm.js.\n\t\tpromise = THREE.DRACOLoader._loadScript( path + \"draco_decoder.js\" );\n\n\t} else {\n\n\t\t// Load with WebAssembly.\n\t\tconfig.wasmBinaryFile = path + \"draco_decoder.wasm\";\n\t\tpromise = THREE.DRACOLoader._loadScript( path + \"draco_wasm_wrapper.js\" )\n\t\t\t.then( function () {\n\n\t\t\t\treturn THREE.DRACOLoader._loadArrayBuffer( config.wasmBinaryFile );\n\n\t\t\t} )\n\t\t\t.then( function ( wasmBinary ) {\n\n\t\t\t\tconfig.wasmBinary = wasmBinary;\n\n\t\t\t} );\n\n\t}\n\n\t// Wait for source files, then create and return a decoder.\n\tpromise = promise.then( function () {\n\n\t\treturn new Promise( function ( resolve ) {\n\n\t\t\tconfig.onModuleLoaded = function ( decoder ) {\n\n\t\t\t\tscope.timeLoaded = performance.now();\n\t\t\t\t// Module is Promise-like. Wrap before resolving to avoid loop.\n\t\t\t\tresolve( { decoder: decoder } );\n\n\t\t\t};\n\t\t\tDracoDecoderModule( config );\n\n\t\t} );\n\n\t} );\n\n\tTHREE.DRACOLoader.decoderModulePromise = promise;\n\treturn promise;\n\n};\n\n/**\n * @param {string} src\n * @return {Promise}\n */\nTHREE.DRACOLoader._loadScript = function ( src ) {\n\n\tvar prevScript = document.getElementById( \"decoder_script\" );\n\tif ( prevScript !== null ) {\n\n\t\tprevScript.parentNode.removeChild( prevScript );\n\n\t}\n\tvar head = document.getElementsByTagName( \"head\" )[ 0 ];\n\tvar script = document.createElement( \"script\" );\n\tscript.id = \"decoder_script\";\n\tscript.type = \"text/javascript\";\n\tscript.src = src;\n\treturn new Promise( function ( resolve ) {\n\n\t\tscript.onload = resolve;\n\t\thead.appendChild( script );\n\n\t} );\n\n};\n\n/**\n * @param {string} src\n * @return {Promise}\n */\nTHREE.DRACOLoader._loadArrayBuffer = function ( src ) {\n\n\tvar loader = new THREE.FileLoader();\n\tloader.setResponseType( \"arraybuffer\" );\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tloader.load( src, resolve, undefined, reject );\n\n\t} );\n\n};\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tvar material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tvar material_use_pattern = /^usemtl /;\n\n\tfunction ParserState() {\n\n\t\tvar state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: []\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.normals;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.colors;\n\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\t// Normals are many times the same. If so, skip function call and parseInt.\n\t\t\t\t\tvar nLen = this.normals.length;\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\n\t\t\t\t\tib = na === nb ? ia : this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = na === nc ? ia : this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.colors.length > 0 ) {\n\n\t\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexPoint( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tconsole.time( 'OBJLoader' );\n\n\t\t\tvar state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tvar lines = text.split( '\\n' );\n\t\t\tvar line = '', lineFirstChar = '';\n\t\t\tvar lineLength = 0;\n\t\t\tvar result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length === 8 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( \" \" );\n\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( \"/\" ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( \"/\" );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== \"\" ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== \"\" ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar pointData = lineData.split( \" \" );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tvar name = ( \" \" + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tthrow new Error( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tvar container = new THREE.Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\tvar geometry = object.geometry;\n\t\t\t\tvar materials = object.materials;\n\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tvar buffergeometry = new THREE.BufferGeometry();\n\n\t\t\t\tbuffergeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbuffergeometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.addAttribute( 'color', new THREE.Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'uv', new THREE.Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\tvar material = undefined;\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof THREE.LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialLine = new THREE.LineBasicMaterial();\n\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialLine.lights = false;\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof THREE.PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialPoints = new THREE.PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterialPoints.lights = false;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! material ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new THREE.LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new THREE.PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\tmaterial.vertexColors = hasVertexColors ? THREE.VertexColors : THREE.NoColors;\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t\tconsole.timeEnd( 'OBJLoader' );\n\n\t\t\treturn container;\n\n\t\t}\n\n\t};\n\n\treturn OBJLoader;\n\n} )();\n","/**\n * Loads a Wavefront .mtl file specifying materials\n *\n * @author angelxuanchang\n */\n\nTHREE.MTLLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.MTLLoader.prototype = {\n\n\tconstructor: THREE.MTLLoader,\n\n\tcrossOrigin: 'anonymous',\n\n\t/**\n\t * Loads and parses a MTL asset from a URL.\n\t *\n\t * @param {String} url - URL to the MTL file.\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\n\t * @param {Function} [onProgress] - Callback for download progress.\n\t * @param {Function} [onError] - Callback for download errors.\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to load.\n\t */\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? THREE.LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tvar loader = new THREE.FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/**\n\t * Set base path for resolving references.\n\t * If set this path will be prepended to each loaded and found reference.\n\t *\n\t * @see setResourcePath\n\t * @param {String} path\n\t * @return {THREE.MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */\n\tsetPath: function ( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Set base path for additional resources like textures.\n\t *\n\t * @see setPath\n\t * @param {String} path\n\t * @return {THREE.MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.setResourcePath( 'assets/textures/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */\n\tsetResourcePath: function ( path ) {\n\n\t\tthis.resourcePath = path;\n\t\treturn this;\n\n\t},\n\n\tsetTexturePath: function ( path ) {\n\n\t\tconsole.warn( 'THREE.MTLLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( path );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetMaterialOptions: function ( value ) {\n\n\t\tthis.materialOptions = value;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Parses a MTL file.\n\t *\n\t * @param {String} text - Content of MTL file\n\t * @return {THREE.MTLLoader.MaterialCreator}\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to parse.\n\t */\n\tparse: function ( text, path ) {\n\n\t\tvar lines = text.split( '\\n' );\n\t\tvar info = {};\n\t\tvar delimiter_pattern = /\\s+/;\n\t\tvar materialsInfo = {};\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tvar line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t// Blank line or comment ignore\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar pos = line.indexOf( ' ' );\n\n\t\t\tvar key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\tkey = key.toLowerCase();\n\n\t\t\tvar value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\n\t\t\tvalue = value.trim();\n\n\t\t\tif ( key === 'newmtl' ) {\n\n\t\t\t\t// New material\n\n\t\t\t\tinfo = { name: value };\n\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t} else {\n\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke' ) {\n\n\t\t\t\t\tvar ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar materialCreator = new THREE.MTLLoader.MaterialCreator( this.resourcePath || path, this.materialOptions );\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\tmaterialCreator.setManager( this.manager );\n\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\treturn materialCreator;\n\n\t}\n\n};\n\n/**\n * Create a new THREE-MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nTHREE.MTLLoader.MaterialCreator = function ( baseUrl, options ) {\n\n\tthis.baseUrl = baseUrl || '';\n\tthis.options = options;\n\tthis.materialsInfo = {};\n\tthis.materials = {};\n\tthis.materialsArray = [];\n\tthis.nameLookup = {};\n\n\tthis.side = ( this.options && this.options.side ) ? this.options.side : THREE.FrontSide;\n\tthis.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : THREE.RepeatWrapping;\n\n};\n\nTHREE.MTLLoader.MaterialCreator.prototype = {\n\n\tconstructor: THREE.MTLLoader.MaterialCreator,\n\n\tcrossOrigin: 'anonymous',\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetManager: function ( value ) {\n\n\t\tthis.manager = value;\n\n\t},\n\n\tsetMaterials: function ( materialsInfo ) {\n\n\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t},\n\n\tconvert: function ( materialsInfo ) {\n\n\t\tif ( ! this.options ) return materialsInfo;\n\n\t\tvar converted = {};\n\n\t\tfor ( var mn in materialsInfo ) {\n\n\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\tvar mat = materialsInfo[ mn ];\n\n\t\t\tvar covmat = {};\n\n\t\t\tconverted[ mn ] = covmat;\n\n\t\t\tfor ( var prop in mat ) {\n\n\t\t\t\tvar save = true;\n\t\t\t\tvar value = mat[ prop ];\n\t\t\t\tvar lprop = prop.toLowerCase();\n\n\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\tcase 'kd':\n\t\t\t\t\tcase 'ka':\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( save ) {\n\n\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn converted;\n\n\t},\n\n\tpreload: function () {\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.create( mn );\n\n\t\t}\n\n\t},\n\n\tgetIndex: function ( materialName ) {\n\n\t\treturn this.nameLookup[ materialName ];\n\n\t},\n\n\tgetAsArray: function () {\n\n\t\tvar index = 0;\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\tindex ++;\n\n\t\t}\n\n\t\treturn this.materialsArray;\n\n\t},\n\n\tcreate: function ( materialName ) {\n\n\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\tthis.createMaterial_( materialName );\n\n\t\t}\n\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tcreateMaterial_: function ( materialName ) {\n\n\t\t// Create material\n\n\t\tvar scope = this;\n\t\tvar mat = this.materialsInfo[ materialName ];\n\t\tvar params = {\n\n\t\t\tname: materialName,\n\t\t\tside: this.side\n\n\t\t};\n\n\t\tfunction resolveURL( baseUrl, url ) {\n\n\t\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\t\treturn '';\n\n\t\t\t// Absolute URL\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\n\n\t\t\treturn baseUrl + url;\n\n\t\t}\n\n\t\tfunction setMapForType( mapType, value ) {\n\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\n\n\t\t\tvar texParams = scope.getTextureParams( value, params );\n\t\t\tvar map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\n\n\t\t\tmap.repeat.copy( texParams.scale );\n\t\t\tmap.offset.copy( texParams.offset );\n\n\t\t\tmap.wrapS = scope.wrap;\n\t\t\tmap.wrapT = scope.wrap;\n\n\t\t\tparams[ mapType ] = map;\n\n\t\t}\n\n\t\tfor ( var prop in mat ) {\n\n\t\t\tvar value = mat[ prop ];\n\t\t\tvar n;\n\n\t\t\tif ( value === '' ) continue;\n\n\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\tcase 'kd':\n\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\tparams.color = new THREE.Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ks':\n\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\tparams.specular = new THREE.Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ke':\n\n\t\t\t\t\t// Emissive using RGB values\n\t\t\t\t\tparams.emissive = new THREE.Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\tsetMapForType( \"map\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ks':\n\n\t\t\t\t\t// Specular map\n\n\t\t\t\t\tsetMapForType( \"specularMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ke':\n\n\t\t\t\t\t// Emissive map\n\n\t\t\t\t\tsetMapForType( \"emissiveMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'norm':\n\n\t\t\t\t\tsetMapForType( \"normalMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_bump':\n\t\t\t\tcase 'bump':\n\n\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\tsetMapForType( \"bumpMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_d':\n\n\t\t\t\t\t// Alpha map\n\n\t\t\t\t\tsetMapForType( \"alphaMap\", value );\n\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ns':\n\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\tparams.shininess = parseFloat( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( n < 1 ) {\n\n\t\t\t\t\t\tparams.opacity = n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tr':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\n\n\t\t\t\t\tif ( n > 0 ) {\n\n\t\t\t\t\t\tparams.opacity = 1 - n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials[ materialName ] = new THREE.MeshPhongMaterial( params );\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tgetTextureParams: function ( value, matParams ) {\n\n\t\tvar texParams = {\n\n\t\t\tscale: new THREE.Vector2( 1, 1 ),\n\t\t\toffset: new THREE.Vector2( 0, 0 )\n\n\t\t };\n\n\t\tvar items = value.split( /\\s+/ );\n\t\tvar pos;\n\n\t\tpos = items.indexOf( '-bm' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\n\t\t\titems.splice( pos, 2 );\n\n\t\t}\n\n\t\tpos = items.indexOf( '-s' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\tpos = items.indexOf( '-o' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\ttexParams.url = items.join( ' ' ).trim();\n\t\treturn texParams;\n\n\t},\n\n\tloadTexture: function ( url, mapping, onLoad, onProgress, onError ) {\n\n\t\tvar texture;\n\t\tvar loader = THREE.Loader.Handlers.get( url );\n\t\tvar manager = ( this.manager !== undefined ) ? this.manager : THREE.DefaultLoadingManager;\n\n\t\tif ( loader === null ) {\n\n\t\t\tloader = new THREE.TextureLoader( manager );\n\n\t\t}\n\n\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\n\t\ttexture = loader.load( url, onLoad, onProgress, onError );\n\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t}\n\n};\n","/**\n * String split with cached result.\n */\nmodule.exports.split = (function () {\n  var splitCache = {};\n\n  return function (str, delimiter) {\n    if (!(delimiter in splitCache)) { splitCache[delimiter] = {}; }\n\n    if (str in splitCache[delimiter]) { return splitCache[delimiter][str]; }\n\n    splitCache[delimiter][str] = str.split(delimiter);\n    return splitCache[delimiter][str];\n  };\n})();\n","/**\n * Utils for parsing style-like strings (e.g., \"primitive: box; width: 5; height: 4.5\").\n * Some code adapted from `style-attr` (https://github.com/joshwnj/style-attr)\n * by Josh Johnston (MIT License).\n */\nvar DASH_REGEX = /-([a-z])/g;\n\n/**\n * Deserialize style-like string into an object of properties.\n *\n * @param {string} value - HTML attribute value.\n * @param {object} obj - Reused object for object pooling.\n * @returns {object} Property data.\n */\nmodule.exports.parse = function (value, obj) {\n  var parsedData;\n  if (typeof value !== 'string') { return value; }\n  parsedData = styleParse(value, obj);\n  // The style parser returns an object { \"\" : \"test\"} when fed a string\n  if (parsedData['']) { return value; }\n  return transformKeysToCamelCase(parsedData);\n};\n\n/**\n * Serialize an object of properties into a style-like string.\n *\n * @param {object} data - Property data.\n * @returns {string}\n */\nmodule.exports.stringify = function (data) {\n  if (typeof data === 'string') { return data; }\n  return styleStringify(data);\n};\n\n/**\n * Converts string from hyphen to camelCase.\n *\n * @param {string} str - String to camelCase.\n * @return {string} CamelCased string.\n */\nfunction toCamelCase (str) {\n  return str.replace(DASH_REGEX, upperCase);\n}\nmodule.exports.toCamelCase = toCamelCase;\n\n/**\n * Converts object's keys from hyphens to camelCase (e.g., `max-value` to\n * `maxValue`).\n *\n * @param {object} obj - The object to camelCase keys.\n * @return {object} The object with keys camelCased.\n */\nfunction transformKeysToCamelCase (obj) {\n  var camelKey;\n  var key;\n  for (key in obj) {\n    camelKey = toCamelCase(key);\n    if (key === camelKey) { continue; }\n    obj[camelKey] = obj[key];\n    delete obj[key];\n  }\n  return obj;\n}\nmodule.exports.transformKeysToCamelCase = transformKeysToCamelCase;\n\n/**\n * Split a string into chunks matching `<key>: <value>`\n */\nvar getKeyValueChunks = (function () {\n  var chunks = [];\n  var hasUnclosedUrl = /url\\([^)]+$/;\n\n  return function getKeyValueChunks (raw) {\n    var chunk = '';\n    var nextSplit;\n    var offset = 0;\n    var sep = ';';\n\n    chunks.length = 0;\n\n    while (offset < raw.length) {\n      nextSplit = raw.indexOf(sep, offset);\n      if (nextSplit === -1) { nextSplit = raw.length; }\n\n      chunk += raw.substring(offset, nextSplit);\n\n      // data URIs can contain semicolons, so make sure we get the whole thing\n      if (hasUnclosedUrl.test(chunk)) {\n        chunk += ';';\n        offset = nextSplit + 1;\n        continue;\n      }\n\n      chunks.push(chunk.trim());\n      chunk = '';\n      offset = nextSplit + 1;\n    }\n\n    return chunks;\n  };\n})();\n\n/**\n * Convert a style attribute string to an object.\n *\n * @param {object} str - Attribute string.\n * @param {object} obj - Object to reuse as a base, else a new one will be allocated.\n */\nfunction styleParse (str, obj) {\n  var chunks;\n  var i;\n  var item;\n  var pos;\n  var key;\n  var val;\n\n  obj = obj || {};\n\n  chunks = getKeyValueChunks(str);\n  for (i = 0; i < chunks.length; i++) {\n    item = chunks[i];\n    if (!item) { continue; }\n    // Split with `.indexOf` rather than `.split` because the value may also contain colons.\n    pos = item.indexOf(':');\n    key = item.substr(0, pos).trim();\n    val = item.substr(pos + 1).trim();\n    obj[key] = val;\n  }\n  return obj;\n}\n\n/**\n * Convert an object into an attribute string\n **/\nfunction styleStringify (obj) {\n  var key;\n  var keyCount = 0;\n  var i = 0;\n  var str = '';\n\n  for (key in obj) { keyCount++; }\n\n  for (key in obj) {\n    str += (key + ': ' + obj[key]);\n    if (i < keyCount - 1) { str += '; '; }\n    i++;\n  }\n  return str;\n}\n\nfunction upperCase (str) { return str[1].toUpperCase(); }\n","var DEFAULT_HANDEDNESS = require('../constants').DEFAULT_HANDEDNESS;\nvar AXIS_LABELS = ['x', 'y', 'z', 'w'];\nvar NUM_HANDS = 2;  // Number of hands in a pair. Should always be 2.\n\n/**\n * Called on controller component `.play` handlers.\n * Check if controller matches parameters and inject tracked-controls component.\n * Handle event listeners.\n * Generate controllerconnected or controllerdisconnected events.\n *\n * @param {object} component - Tracked controls component.\n * @param {object} idPrefix - Prefix to match in gamepad id if any.\n * @param {object} queryObject - Map of values to match.\n */\nmodule.exports.checkControllerPresentAndSetup = function (component, idPrefix, queryObject) {\n  var el = component.el;\n  var controller;\n  var hasWebXR = el.sceneEl.hasWebXR;\n  var isControllerPresent = hasWebXR ? isControllerPresentWebXR : isControllerPresentWebVR;\n  var isPresent;\n\n  controller = isControllerPresent(component, idPrefix, queryObject);\n  isPresent = !!controller;\n\n  // If component was previously paused and now playing, re-add event listeners.\n  // Handle the event listeners here since this helper method is control of calling\n  // `.addEventListeners` and `.removeEventListeners`.\n  if (component.controllerPresent && !component.controllerEventsActive && !hasWebXR) {\n    component.addEventListeners();\n  }\n\n  // Nothing changed, no need to do anything.\n  if (isPresent === component.controllerPresent) { return isPresent; }\n\n  component.controllerPresent = isPresent;\n\n  // Update controller presence.\n  if (isPresent) {\n    component.injectTrackedControls();\n    if (!hasWebXR) { component.addEventListeners(); }\n    el.emit('controllerconnected', {name: component.name, component: component});\n  } else {\n    component.removeEventListeners();\n    el.emit('controllerdisconnected', {name: component.name, component: component});\n  }\n};\n\n/**\n * Enumerate controller (that have pose) and check if they match parameters for WebVR\n *\n * @param {object} component - Tracked controls component.\n * @param {object} idPrefix - Prefix to match in gamepad id if any.\n * @param {object} queryObject - Map of values to match.\n */\nfunction isControllerPresentWebVR (component, idPrefix, queryObject) {\n  var gamepads;\n  var sceneEl = component.el.sceneEl;\n  var trackedControlsSystem;\n  var filterControllerIndex = queryObject.index || 0;\n\n  if (!idPrefix) { return false; }\n\n  trackedControlsSystem = sceneEl && sceneEl.systems['tracked-controls-webvr'];\n  if (!trackedControlsSystem) { return false; }\n\n  gamepads = trackedControlsSystem.controllers;\n  if (!gamepads.length) { return false; }\n\n  return !!findMatchingControllerWebVR(gamepads, null, idPrefix, queryObject.hand,\n                                  filterControllerIndex);\n}\n\n/**\n *\n * @param {object} component - Tracked controls component.\n */\nfunction isControllerPresentWebXR (component, idPrefix, queryObject) {\n  var controllers;\n  var sceneEl = component.el.sceneEl;\n  var trackedControlsSystem = sceneEl && sceneEl.systems['tracked-controls-webxr'];\n  if (!trackedControlsSystem) { return false; }\n\n  controllers = trackedControlsSystem.controllers;\n  if (!controllers || !controllers.length) { return false; }\n\n  return findMatchingControllerWebXR(controllers, queryObject.hand);\n}\n\nmodule.exports.isControllerPresentWebVR = isControllerPresentWebVR;\nmodule.exports.isControllerPresentWebXR = isControllerPresentWebXR;\n\n/**\n * Walk through the given controllers to find any where the device ID equals\n * filterIdExact, or startsWith filterIdPrefix.\n * A controller where this considered true is considered a 'match'.\n *\n * For each matching controller:\n *   If filterHand is set, and the controller:\n *     is handed, we further verify that controller.hand equals filterHand.\n *     is unhanded (controller.hand is ''), we skip until we have found a\n *     number of matching controllers that equals filterControllerIndex\n *   If filterHand is not set, we skip until we have found the nth matching\n *   controller, where n equals filterControllerIndex\n *\n * The method should be called with one of: [filterIdExact, filterIdPrefix] AND\n * one or both of: [filterHand, filterControllerIndex]\n *\n * @param {object} controllers - Array of gamepads to search\n * @param {string} filterIdExact - If set, used to find controllers with id === this value\n * @param {string} filterIdPrefix - If set, used to find controllers with id startsWith this value\n * @param {object} filterHand - If set, further filters controllers with matching 'hand' property\n * @param {object} filterControllerIndex - Find the nth matching controller,\n * where n equals filterControllerIndex. defaults to 0.\n */\nfunction findMatchingControllerWebVR (controllers, filterIdExact, filterIdPrefix, filterHand,\n                                 filterControllerIndex) {\n  var controller;\n  var i;\n  var matchingControllerOccurence = 0;\n  var targetControllerMatch = filterControllerIndex || 0;\n\n  for (i = 0; i < controllers.length; i++) {\n    controller = controllers[i];\n\n    // Determine if the controller ID matches our criteria.\n    if (filterIdPrefix && !controller.id.startsWith(filterIdPrefix)) {\n      continue;\n    }\n\n    if (!filterIdPrefix && controller.id !== filterIdExact) { continue; }\n\n    // If the hand filter and controller handedness are defined we compare them.\n    if (filterHand && controller.hand && filterHand !== controller.hand) { continue; }\n\n    // If we have detected an unhanded controller and the component was asking\n    // for a particular hand, we need to treat the controllers in the array as\n    // pairs of controllers. This effectively means that we need to skip\n    // NUM_HANDS matches for each controller number, instead of 1.\n    if (filterHand && !controller.hand) {\n      targetControllerMatch = NUM_HANDS * filterControllerIndex + ((filterHand === DEFAULT_HANDEDNESS) ? 0 : 1);\n    }\n\n    // We are looking for the nth occurence of a matching controller\n    // (n equals targetControllerMatch).\n    if (matchingControllerOccurence === targetControllerMatch) { return controller; }\n    ++matchingControllerOccurence;\n  }\n  return undefined;\n}\n\nfunction findMatchingControllerWebXR (controllers, handedness) {\n  var i;\n  var controllerHandedness;\n  for (i = 0; i < controllers.length; i++) {\n    controllerHandedness = controllers[i].handedness;\n    if (!handedness || (controllerHandedness === '' && handedness === 'right') ||\n        controllers[i].handedness === handedness) {\n      return controllers[i];\n    }\n  }\n  return undefined;\n}\n\nmodule.exports.findMatchingControllerWebVR = findMatchingControllerWebVR;\nmodule.exports.findMatchingControllerWebXR = findMatchingControllerWebXR;\n\n/**\n * Emit specific `moved` event(s) if axes changed based on original axismoved event.\n *\n * @param {object} component - Controller component in use.\n * @param {array} axesMapping - For example `{thumbstick: [0, 1]}`.\n * @param {object} evt - Event to process.\n */\nmodule.exports.emitIfAxesChanged = function (component, axesMapping, evt) {\n  var axes;\n  var buttonType;\n  var changed;\n  var detail;\n  var j;\n\n  for (buttonType in axesMapping) {\n    axes = axesMapping[buttonType];\n\n    changed = false;\n    for (j = 0; j < axes.length; j++) {\n      if (evt.detail.changed[axes[j]]) { changed = true; }\n    }\n\n    if (!changed) { continue; }\n\n    // Axis has changed. Emit the specific moved event with axis values in detail.\n    detail = {};\n    for (j = 0; j < axes.length; j++) {\n      detail[AXIS_LABELS[j]] = evt.detail.axis[axes[j]];\n    }\n    component.el.emit(buttonType + 'moved', detail);\n  }\n};\n\n/**\n * Handle a button event and reemits the events.\n *\n * @param {string} id - id of the button.\n * @param {string} evtName - name of the reemitted event\n * @param {object} component - reference to the component\n * @param {string} hand - handedness of the controller: left or right.\n */\nmodule.exports.onButtonEvent = function (id, evtName, component, hand) {\n  var mapping = hand ? component.mapping[hand] : component.mapping;\n  var buttonName = mapping.buttons[id];\n  component.el.emit(buttonName + evtName);\n  if (component.updateModel) {\n    component.updateModel(buttonName, evtName);\n  }\n};\n","module.exports = {\n  // Tiny KeyboardEvent.code polyfill.\n  KEYCODE_TO_CODE: {\n    '38': 'ArrowUp',\n    '37': 'ArrowLeft',\n    '40': 'ArrowDown',\n    '39': 'ArrowRight',\n    '87': 'KeyW',\n    '65': 'KeyA',\n    '83': 'KeyS',\n    '68': 'KeyD'\n  }\n};\n","/* global Image, XMLHttpRequest */\nvar debug = require('./debug');\n\nvar warn = debug('utils:src-loader:warn');\n\n/**\n * Validate a texture, either as a selector or as a URL.\n * Detects whether `src` is pointing to an image or video and invokes the appropriate\n * callback.\n *\n * `src` will be passed into the callback\n *\n * @params {string|Element} src - URL or media element.\n * @params {function} isImageCb - callback if texture is an image.\n * @params {function} isVideoCb - callback if texture is a video.\n */\nfunction validateSrc (src, isImageCb, isVideoCb) {\n  checkIsImage(src, function isAnImageUrl (isImage) {\n    if (isImage) {\n      isImageCb(src);\n      return;\n    }\n    isVideoCb(src);\n  });\n}\n\n/**\n * Validates six images as a cubemap, either as selector or comma-separated\n * URLs.\n *\n * @param {string} src - A selector or comma-separated image URLs. Image URLs\n          must be wrapped by `url()`.\n * @param {string} src - A selector or comma-separated image URLs. Image URLs\n          must be wrapped by `url()`.\n */\nfunction validateCubemapSrc (src, cb) {\n  var aCubemap;\n  var cubemapSrcRegex = '';\n  var i;\n  var urls;\n  var validatedUrls = [];\n\n  for (i = 0; i < 5; i++) {\n    cubemapSrcRegex += '(url\\\\((?:[^\\\\)]+)\\\\),\\\\s*)';\n  }\n  cubemapSrcRegex += '(url\\\\((?:[^\\\\)]+)\\\\)\\\\s*)';\n  urls = src.match(new RegExp(cubemapSrcRegex));\n\n  // `src` is a comma-separated list of URLs.\n  // In this case, re-use validateSrc for each side of the cube.\n  function isImageCb (url) {\n    validatedUrls.push(url);\n    if (validatedUrls.length === 6) {\n      cb(validatedUrls);\n    }\n  }\n  if (urls) {\n    for (i = 1; i < 7; i++) {\n      validateSrc(parseUrl(urls[i]), isImageCb);\n    }\n    return;\n  }\n\n  // `src` is a query selector to <a-cubemap> containing six $([src])s.\n  aCubemap = validateAndGetQuerySelector(src);\n  if (!aCubemap) { return; }\n  if (aCubemap.tagName === 'A-CUBEMAP' && aCubemap.srcs) {\n    return cb(aCubemap.srcs);\n  }\n  // Else if aCubeMap is not a <a-cubemap>.\n  warn('Selector \"%s\" does not point to <a-cubemap>', src);\n}\n\n/**\n * Parses src from `url(src)`.\n * @param  {string} src - String to parse.\n * @return {string} The parsed src, if parseable.\n */\nfunction parseUrl (src) {\n  var parsedSrc = src.match(/\\url\\((.+)\\)/);\n  if (!parsedSrc) { return; }\n  return parsedSrc[1];\n}\n\n/**\n * Call back whether `src` is an image.\n *\n * @param {string|Element} src - URL or element that will be tested.\n * @param {function} onResult - Callback with whether `src` is an image.\n */\nfunction checkIsImage (src, onResult) {\n  var request;\n\n  if (src.tagName) {\n    onResult(src.tagName === 'IMG');\n    return;\n  }\n  request = new XMLHttpRequest();\n\n  // Try to send HEAD request to check if image first.\n  request.open('HEAD', src);\n  request.addEventListener('load', function (event) {\n    var contentType;\n    if (request.status >= 200 && request.status < 300) {\n      contentType = request.getResponseHeader('Content-Type');\n      if (contentType == null) {\n        checkIsImageFallback(src, onResult);\n      } else {\n        if (contentType.startsWith('image')) {\n          onResult(true);\n        } else {\n          onResult(false);\n        }\n      }\n    } else {\n      checkIsImageFallback(src, onResult);\n    }\n    request.abort();\n  });\n  request.send();\n}\n\nfunction checkIsImageFallback (src, onResult) {\n  var tester = new Image();\n  tester.addEventListener('load', onLoad);\n  function onLoad () { onResult(true); }\n  tester.addEventListener('error', onError);\n  function onError () { onResult(false); }\n  tester.src = src;\n}\n\n/**\n * Query and validate a query selector,\n *\n * @param  {string} selector - DOM selector.\n * @return {object|null|undefined} Selected DOM element if exists.\n           null if query yields no results.\n           undefined if `selector` is not a valid selector.\n */\nfunction validateAndGetQuerySelector (selector) {\n  try {\n    var el = document.querySelector(selector);\n    if (!el) {\n      warn('No element was found matching the selector: \"%s\"', selector);\n    }\n    return el;\n  } catch (e) {  // Capture exception if it's not a valid selector.\n    warn('\"%s\" is not a valid selector', selector);\n    return undefined;\n  }\n}\n\nmodule.exports = {\n  parseUrl: parseUrl,\n  validateSrc: validateSrc,\n  validateCubemapSrc: validateCubemapSrc\n};\n","/* global Promise, screen */\nvar initMetaTags = require('./metaTags').inject;\nvar initWakelock = require('./wakelock');\nvar loadingScreen = require('./loadingScreen');\nvar re = require('../a-register-element');\nvar scenes = require('./scenes');\nvar systems = require('../system').systems;\nvar THREE = require('../../lib/three');\nvar utils = require('../../utils/');\n// Require after.\nvar AEntity = require('../a-entity');\nvar ANode = require('../a-node');\nvar initPostMessageAPI = require('./postMessage');\nvar shaders = require('../shader').shaders;\n\nvar bind = utils.bind;\nvar isIOS = utils.device.isIOS();\nvar isMobile = utils.device.isMobile();\nvar isWebXRAvailable = utils.device.isWebXRAvailable;\nvar registerElement = re.registerElement;\nvar warn = utils.debug('core:a-scene:warn');\n\n/**\n * Scene element, holds all entities.\n *\n * @member {array} behaviors - Component instances that have registered themselves to be\n           updated on every tick.\n * @member {object} camera - three.js Camera object.\n * @member {object} canvas\n * @member {bool} isScene - Differentiates as scene entity as opposed to other entites.\n * @member {bool} isMobile - Whether browser is mobile (via UA detection).\n * @member {object} object3D - Root three.js Scene object.\n * @member {object} renderer\n * @member {bool} renderStarted\n * @member {object} systems - Registered instantiated systems.\n * @member {number} time\n */\nmodule.exports.AScene = registerElement('a-scene', {\n  prototype: Object.create(AEntity.prototype, {\n    createdCallback: {\n      value: function () {\n        this.clock = new THREE.Clock();\n        this.isIOS = isIOS;\n        this.isMobile = isMobile;\n        this.hasWebXR = isWebXRAvailable;\n        this.highRefreshRate = false;\n        this.isScene = true;\n        this.object3D = new THREE.Scene();\n        var self = this;\n        this.object3D.onAfterRender = function (renderer, scene, camera) {\n          // THREE may swap the camera used for the rendering if in VR, so we pass it to tock\n          if (self.isPlaying) { self.tock(self.time, self.delta, camera); }\n        };\n        this.render = bind(this.render, this);\n        this.systems = {};\n        this.systemNames = [];\n        this.time = this.delta = 0;\n\n        this.behaviors = {tick: [], tock: []};\n        this.hasLoaded = false;\n        this.isPlaying = false;\n        this.originalHTML = this.innerHTML;\n      }\n    },\n\n    addFullScreenStyles: {\n      value: function () {\n        document.documentElement.classList.add('a-fullscreen');\n      }\n    },\n\n    removeFullScreenStyles: {\n      value: function () {\n        document.documentElement.classList.remove('a-fullscreen');\n      }\n    },\n\n    attachedCallback: {\n      value: function () {\n        var self = this;\n        // Renderer initialization\n        setupCanvas(this);\n        this.setupRenderer();\n\n        this.resize();\n        this.addFullScreenStyles();\n        initPostMessageAPI(this);\n\n        initMetaTags(this);\n        initWakelock(this);\n\n        // Camera set up by camera system.\n        this.addEventListener('cameraready', function () {\n          self.attachedCallbackPostCamera();\n        });\n\n        this.initSystems();\n      }\n    },\n\n    attachedCallbackPostCamera: {\n      value: function () {\n        var resize;\n        var self = this;\n\n        resize = bind(this.resize, this);\n        window.addEventListener('load', resize);\n        window.addEventListener('resize', function () {\n          // Workaround for a Webkit bug (https://bugs.webkit.org/show_bug.cgi?id=170595)\n          // where the window does not contain the correct viewport size\n          // after an orientation change. The window size is correct if the operation\n          // is postponed a few milliseconds.\n          // self.resize can be called directly once the bug above is fixed.\n          if (self.isIOS) {\n            setTimeout(resize, 100);\n          } else {\n            resize();\n          }\n        });\n        this.play();\n\n        // Add to scene index.\n        scenes.push(this);\n\n        // Handler to exit VR (e.g., Oculus Browser back button).\n        this.onVRPresentChangeBound = bind(this.onVRPresentChange, this);\n        window.addEventListener('vrdisplaypresentchange', this.onVRPresentChangeBound);\n\n        // bind functions\n        this.enterVRBound = function () { self.enterVR(); };\n        this.exitVRBound = function () { self.exitVR(); };\n        this.exitVRTrueBound = function () { self.exitVR(true); };\n        this.pointerRestrictedBound = function () { self.pointerRestricted(); };\n        this.pointerUnrestrictedBound = function () { self.pointerUnrestricted(); };\n\n        if (!isWebXRAvailable) {\n          // Enter VR on `vrdisplayactivate` (e.g. putting on Rift headset).\n          window.addEventListener('vrdisplayactivate', this.enterVRBound);\n\n          // Exit VR on `vrdisplaydeactivate` (e.g. taking off Rift headset).\n          window.addEventListener('vrdisplaydeactivate', this.exitVRBound);\n\n          // Exit VR on `vrdisplaydisconnect` (e.g. unplugging Rift headset).\n          window.addEventListener('vrdisplaydisconnect', this.exitVRTrueBound);\n\n          // Register for mouse restricted events while in VR\n          // (e.g. mouse no longer available on desktop 2D view)\n          window.addEventListener('vrdisplaypointerrestricted', this.pointerRestrictedBound);\n\n          // Register for mouse unrestricted events while in VR\n          // (e.g. mouse once again available on desktop 2D view)\n          window.addEventListener('vrdisplaypointerunrestricted', this.pointerUnrestrictedBound);\n        }\n      },\n      writable: window.debug\n    },\n\n    /**\n     * Initialize all systems.\n     */\n    initSystems: {\n      value: function () {\n        var name;\n\n        // Initialize camera system first.\n        this.initSystem('camera');\n\n        for (name in systems) {\n          if (name === 'camera') { continue; }\n          this.initSystem(name);\n        }\n      }\n    },\n\n    /**\n     * Initialize a system.\n     */\n    initSystem: {\n      value: function (name) {\n        if (this.systems[name]) { return; }\n        this.systems[name] = new systems[name](this);\n        this.systemNames.push(name);\n      }\n    },\n\n    /**\n     * Shut down scene on detach.\n     */\n    detachedCallback: {\n      value: function () {\n        // Remove from scene index.\n        var sceneIndex = scenes.indexOf(this);\n        scenes.splice(sceneIndex, 1);\n\n        window.removeEventListener('vrdisplaypresentchange', this.onVRPresentChangeBound);\n        window.removeEventListener('vrdisplayactivate', this.enterVRBound);\n        window.removeEventListener('vrdisplaydeactivate', this.exitVRBound);\n        window.removeEventListener('vrdisplayconnect', this.enterVRBound);\n        window.removeEventListener('vrdisplaydisconnect', this.exitVRTrueBound);\n        window.removeEventListener('vrdisplaypointerrestricted', this.pointerRestrictedBound);\n        window.removeEventListener('vrdisplaypointerunrestricted', this.pointerUnrestrictedBound);\n      }\n    },\n\n    /**\n     * Add ticks and tocks.\n     *\n     * @param {object} behavior - A component.\n     */\n    addBehavior: {\n      value: function (behavior) {\n        var behaviorArr;\n        var behaviors = this.behaviors;\n        var behaviorType;\n\n        // Check if behavior has tick and/or tock and add the behavior to the appropriate list.\n        for (behaviorType in behaviors) {\n          if (!behavior[behaviorType]) { continue; }\n          behaviorArr = this.behaviors[behaviorType];\n          if (behaviorArr.indexOf(behavior) === -1) {\n            behaviorArr.push(behavior);\n          }\n        }\n      }\n    },\n\n    /**\n     * For tests.\n     */\n    getPointerLockElement: {\n      value: function () {\n        return document.pointerLockElement;\n      },\n      writable: window.debug\n    },\n\n    /**\n     * For tests.\n     */\n    checkHeadsetConnected: {\n      value: utils.device.checkHeadsetConnected,\n      writable: window.debug\n    },\n\n    /**\n     * Call `requestPresent` if WebVR or WebVR polyfill.\n     * Call `requestFullscreen` on desktop.\n     * Handle events, states, fullscreen styles.\n     *\n     * @returns {Promise}\n     */\n    enterVR: {\n      value: function () {\n        var self = this;\n        var vrDisplay;\n        var vrManager = self.renderer.vr;\n\n        // Don't enter VR if already in VR.\n        if (this.is('vr-mode')) { return Promise.resolve('Already in VR.'); }\n\n        // Has VR.\n        if (this.checkHeadsetConnected() || this.isMobile) {\n          vrDisplay = utils.device.getVRDisplay();\n          vrManager.enabled = true;\n          vrManager.setDevice(vrDisplay);\n          var rendererSystem = this.getAttribute('renderer');\n\n          if (this.hasWebXR && !rendererSystem.forceWebVR) {\n            // XR API.\n            if (this.xrSession) {\n              this.xrSession.removeEventListener('end', this.exitVRBound);\n            }\n            vrDisplay.requestSession({\n              immersive: true,\n              exclusive: true\n            }).then(function requestSuccess (xrSession) {\n              self.xrSession = xrSession;\n              vrManager.setSession(xrSession);\n              xrSession.addEventListener('end', self.exitVRBound);\n              xrSession.requestFrameOfReference('stage').then(function (frameOfReference) {\n                self.frameOfReference = frameOfReference;\n              });\n              enterVRSuccess();\n            });\n          } else {\n            var presentationAttributes = {\n              highRefreshRate: rendererSystem.highRefreshRate,\n              foveationLevel: rendererSystem.foveationLevel,\n              multiview: vrManager.multiview\n            };\n\n            return vrDisplay.requestPresent([{\n              source: this.canvas,\n              attributes: presentationAttributes\n            }]).then(enterVRSuccess, enterVRFailure);\n          }\n          return Promise.resolve();\n        }\n\n        // No VR.\n        enterVRSuccess();\n        return Promise.resolve();\n\n        // Callback that happens on enter VR success or enter fullscreen (any API).\n        function enterVRSuccess () {\n          self.addState('vr-mode');\n          self.emit('enter-vr', {target: self});\n          // Lock to landscape orientation on mobile.\n          if (self.isMobile && screen.orientation && screen.orientation.lock) {\n            screen.orientation.lock('landscape');\n          }\n          self.addFullScreenStyles();\n\n          // On mobile, the polyfill handles fullscreen.\n          // TODO: 07/16 Chromium builds break when `requestFullscreen`ing on a canvas\n          // that we are also `requestPresent`ing. Until then, don't fullscreen if headset\n          // connected.\n          if (!self.isMobile && !self.checkHeadsetConnected()) {\n            requestFullscreen(self.canvas);\n          }\n\n          self.renderer.setAnimationLoop(self.render);\n          self.resize();\n        }\n\n        function enterVRFailure (err) {\n          if (err && err.message) {\n            throw new Error('Failed to enter VR mode (`requestPresent`): ' + err.message);\n          } else {\n            throw new Error('Failed to enter VR mode (`requestPresent`).');\n          }\n        }\n      },\n      writable: true\n    },\n     /**\n     * Call `exitPresent` if WebVR / WebXR or WebVR polyfill.\n     * Handle events, states, fullscreen styles.\n     *\n     * @returns {Promise}\n     */\n    exitVR: {\n      value: function () {\n        var self = this;\n        var vrDisplay;\n        var vrManager = this.renderer.vr;\n\n        // Don't exit VR if not in VR.\n        if (!this.is('vr-mode')) { return Promise.resolve('Not in VR.'); }\n\n        // Handle exiting VR if not yet already and in a headset or polyfill.\n        if (this.checkHeadsetConnected() || this.isMobile) {\n          vrManager.enabled = false;\n          vrDisplay = utils.device.getVRDisplay();\n          var rendererSystem = this.getAttribute('renderer');\n\n          if (this.hasWebXR && !rendererSystem.forceWebVR) {\n            this.xrSession.removeEventListener('end', this.exitVRBound);\n            this.xrSession.end();\n            vrManager.setSession(null);\n          } else {\n            if (vrDisplay.isPresenting) {\n              return vrDisplay.exitPresent().then(exitVRSuccess, exitVRFailure);\n            }\n          }\n        } else {\n          exitFullscreen();\n        }\n\n        // Handle exiting VR in all other cases (2D fullscreen, external exit VR event).\n        exitVRSuccess();\n\n        return Promise.resolve();\n\n        function exitVRSuccess () {\n          self.removeState('vr-mode');\n          // Lock to landscape orientation on mobile.\n          if (self.isMobile && screen.orientation && screen.orientation.unlock) {\n            screen.orientation.unlock();\n          }\n          // Exiting VR in embedded mode, no longer need fullscreen styles.\n          if (self.hasAttribute('embedded')) { self.removeFullScreenStyles(); }\n          self.resize();\n          if (self.isIOS) { utils.forceCanvasResizeSafariMobile(self.canvas); }\n          self.emit('exit-vr', {target: self});\n        }\n\n        function exitVRFailure (err) {\n          if (err && err.message) {\n            throw new Error('Failed to exit VR mode (`exitPresent`): ' + err.message);\n          } else {\n            throw new Error('Failed to exit VR mode (`exitPresent`).');\n          }\n        }\n      },\n      writable: true\n    },\n\n    pointerRestricted: {\n      value: function () {\n        if (this.canvas) {\n          var pointerLockElement = this.getPointerLockElement();\n          if (pointerLockElement && pointerLockElement !== this.canvas && document.exitPointerLock) {\n            // Recreate pointer lock on the canvas, if taken on another element.\n            document.exitPointerLock();\n          }\n\n          if (this.canvas.requestPointerLock) {\n            this.canvas.requestPointerLock();\n          }\n        }\n      }\n    },\n\n    pointerUnrestricted: {\n      value: function () {\n        var pointerLockElement = this.getPointerLockElement();\n        if (pointerLockElement && pointerLockElement === this.canvas && document.exitPointerLock) {\n          document.exitPointerLock();\n        }\n      }\n    },\n\n    /**\n     * Handle `vrdisplaypresentchange` event for exiting VR through other means than\n     * `<ESC>` key. For example, GearVR back button on Oculus Browser.\n     */\n    onVRPresentChange: {\n      value: function (evt) {\n        // Polyfill places display inside the detail property\n        var display = evt.display || evt.detail.display;\n        // Entering VR.\n        if (display.isPresenting) {\n          this.enterVR();\n          return;\n        }\n        // Exiting VR.\n        this.exitVR();\n      }\n    },\n\n    /**\n     * Wraps Entity.getAttribute to take into account for systems.\n     * If system exists, then return system data rather than possible component data.\n     */\n    getAttribute: {\n      value: function (attr) {\n        var system = this.systems[attr];\n        if (system) { return system.data; }\n        return AEntity.prototype.getAttribute.call(this, attr);\n      }\n    },\n\n    /**\n     * `getAttribute` used to be `getDOMAttribute` and `getComputedAttribute` used to be\n     * what `getAttribute` is now. Now legacy code.\n     */\n    getComputedAttribute: {\n      value: function (attr) {\n        warn('`getComputedAttribute` is deprecated. Use `getAttribute` instead.');\n        this.getAttribute(attr);\n      }\n    },\n\n    /**\n     * Wraps Entity.getDOMAttribute to take into account for systems.\n     * If system exists, then return system data rather than possible component data.\n     */\n    getDOMAttribute: {\n      value: function (attr) {\n        var system = this.systems[attr];\n        if (system) { return system.data; }\n        return AEntity.prototype.getDOMAttribute.call(this, attr);\n      }\n    },\n\n    /**\n     * Wrap Entity.setAttribute to take into account for systems.\n     * If system exists, then skip component initialization checks and do a normal\n     * setAttribute.\n     */\n    setAttribute: {\n      value: function (attr, value, componentPropValue) {\n        var system = this.systems[attr];\n        if (system) {\n          ANode.prototype.setAttribute.call(this, attr, value);\n          system.updateProperties(value);\n          return;\n        }\n        AEntity.prototype.setAttribute.call(this, attr, value, componentPropValue);\n      }\n    },\n\n    /**\n     * @param {object} behavior - A component.\n     */\n    removeBehavior: {\n      value: function (behavior) {\n        var behaviorArr;\n        var behaviorType;\n        var behaviors = this.behaviors;\n        var index;\n\n        // Check if behavior has tick and/or tock and remove the behavior from the appropriate\n        // array.\n        for (behaviorType in behaviors) {\n          if (!behavior[behaviorType]) { continue; }\n          behaviorArr = this.behaviors[behaviorType];\n          index = behaviorArr.indexOf(behavior);\n          if (index !== -1) { behaviorArr.splice(index, 1); }\n        }\n      }\n    },\n\n    resize: {\n      value: function () {\n        var camera = this.camera;\n        var canvas = this.canvas;\n        var embedded;\n        var isVRPresenting;\n        var size;\n        var vrDevice;\n\n        vrDevice = this.renderer.vr.getDevice();\n        isVRPresenting = this.renderer.vr.enabled && vrDevice && vrDevice.isPresenting;\n\n        // Do not update renderer, if a camera or a canvas have not been injected.\n        // In VR mode, three handles canvas resize based on the dimensions returned by\n        // the getEyeParameters function of the WebVR API. These dimensions are independent of\n        // the window size, therefore should not be overwritten with the window's width and\n        // height, // except when in fullscreen mode.\n        if (!camera || !canvas || (this.is('vr-mode') && (this.isMobile || isVRPresenting))) {\n          return;\n        }\n\n        // Update camera.\n        embedded = this.getAttribute('embedded') && !this.is('vr-mode');\n        size = getCanvasSize(canvas, embedded, this.maxCanvasSize, this.is('vr-mode'));\n        camera.aspect = size.width / size.height;\n        camera.updateProjectionMatrix();\n\n        // Notify renderer of size change.\n        this.renderer.setSize(size.width, size.height, false);\n        this.emit('rendererresize', null, false);\n      },\n      writable: true\n    },\n\n    setupRenderer: {\n      value: function () {\n        var self = this;\n        var renderer;\n        var rendererAttr;\n        var rendererAttrString;\n        var rendererConfig;\n\n        rendererConfig = {\n          alpha: true,\n          antialias: !isMobile,\n          canvas: this.canvas,\n          logarithmicDepthBuffer: false,\n          preuploadVideos: /Oculus/.test(navigator.userAgent)\n        };\n\n        this.maxCanvasSize = {height: 1920, width: 1920};\n\n        let enableMultiview = false;\n        if (this.hasAttribute('renderer')) {\n          rendererAttrString = this.getAttribute('renderer');\n          rendererAttr = utils.styleParser.parse(rendererAttrString);\n\n          enableMultiview = rendererAttr.multiview === 'true';\n\n          if (rendererAttr.precision) {\n            rendererConfig.precision = rendererAttr.precision + 'p';\n          }\n\n          if (rendererAttr.antialias && rendererAttr.antialias !== 'auto') {\n            rendererConfig.antialias = rendererAttr.antialias === 'true';\n          }\n\n          if (rendererAttr.logarithmicDepthBuffer && rendererAttr.logarithmicDepthBuffer !== 'auto') {\n            rendererConfig.logarithmicDepthBuffer = rendererAttr.logarithmicDepthBuffer === 'true';\n          }\n\n          if (rendererAttr.alpha) {\n            rendererConfig.alpha = rendererAttr.alpha === 'true';\n          }\n\n          if (rendererAttr.webgl2 && rendererAttr.webgl2 === 'true') {\n            const context = this.canvas.getContext('webgl2', {\n              alpha: rendererConfig.alpha,\n              depth: true,\n              stencil: true,\n              antialias: rendererConfig.antialias,\n              premultipliedAlpha: true,\n              preserveDrawingBuffer: false,\n              powerPreference: 'default'\n            });\n\n            if (context) {\n              console.log('Using WebGL 2.0 context.');\n              rendererConfig.context = context;\n\n              const multiviewSupported = (!!context.getExtension('WEBGL_multiview') || !!context.getExtension('OVR_multiview'));\n              if (enableMultiview && !multiviewSupported) {\n                console.warn('Multiview enabled but WEBGL/OVR_multiview extension browser support not available');\n                enableMultiview = false;\n              }\n\n              var versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n              for (var shaderName in shaders) {\n                var shader = shaders[shaderName];\n\n                var shaderProto = shader.Shader.prototype;\n\n                if (!shaderProto.raw) {\n                  continue;\n                }\n\n                var vertexShader = shaderProto.vertexShader;\n                var fragmentShader = shaderProto.fragmentShader;\n\n                var isGLSL3ShaderMaterial = false;\n\n                if (vertexShader.match(versionRegex) !== null && fragmentShader.match(versionRegex) !== null) {\n                  isGLSL3ShaderMaterial = true;\n\n                  vertexShader = vertexShader.replace(versionRegex, '');\n                  fragmentShader = fragmentShader.replace(versionRegex, '');\n                }\n\n                // GLSL 3.0 conversion\n                const prefixVertex = [\n                  '#version 300 es\\n',\n                  '#define attribute in',\n                  '#define varying out',\n                  '#define texture2D texture',\n                  enableMultiview ? '#define AFRAME_enable_multiview' : ''\n                ].join('\\n') + '\\n';\n\n                const prefixFragment = [\n                  '#version 300 es\\n',\n                  '#define varying in',\n                  isGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n                  isGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n                  '#define gl_FragDepthEXT gl_FragDepth',\n                  '#define texture2D texture',\n                  '#define textureCube texture',\n                  '#define texture2DProj textureProj',\n                  '#define texture2DLodEXT textureLod',\n                  '#define texture2DProjLodEXT textureProjLod',\n                  '#define textureCubeLodEXT textureLod',\n                  '#define texture2DGradEXT textureGrad',\n                  '#define texture2DProjGradEXT textureProjGrad',\n                  '#define textureCubeGradEXT textureGrad'\n                ].join('\\n') + '\\n';\n\n                shaderProto.vertexShader = prefixVertex + vertexShader;\n                shaderProto.fragmentShader = prefixFragment + fragmentShader;\n              }\n            } else {\n              console.warn('No WebGL 2.0 context available. Falling back to WebGL 1.0');\n              if (enableMultiview) {\n                console.warn('Multiview enabled but requires a WebGL2 context');\n                enableMultiview = false;\n              }\n            }\n          }\n\n          if (rendererAttr.forceWebVR) {\n            rendererConfig.forceWebVR = rendererAttr.forceWebVR === 'true';\n          }\n\n          this.maxCanvasSize = {\n            width: rendererAttr.maxCanvasWidth\n              ? parseInt(rendererAttr.maxCanvasWidth)\n              : this.maxCanvasSize.width,\n            height: rendererAttr.maxCanvasHeight\n              ? parseInt(rendererAttr.maxCanvasHeight)\n              : this.maxCanvasSize.height\n          };\n        }\n\n        renderer = this.renderer = new THREE.WebGLRenderer(rendererConfig);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.sortObjects = false;\n        if (enableMultiview) {\n          console.log('Using Multiview.');\n          renderer.vr.multiview = true;\n        }\n        if (this.camera) { renderer.vr.setPoseTarget(this.camera.el.object3D); }\n        this.addEventListener('camera-set-active', function () {\n          renderer.vr.setPoseTarget(self.camera.el.object3D);\n        });\n        loadingScreen.setup(this, getCanvasSize);\n      },\n      writable: window.debug\n    },\n\n    /**\n     * Handler attached to elements to help scene know when to kick off.\n     * Scene waits for all entities to load.\n     */\n    play: {\n      value: function () {\n        var self = this;\n        var sceneEl = this;\n\n        if (this.renderStarted) {\n          AEntity.prototype.play.call(this);\n          return;\n        }\n\n        this.addEventListener('loaded', function () {\n          var renderer = this.renderer;\n          var vrDisplay;\n          var vrManager = this.renderer.vr;\n          AEntity.prototype.play.call(this);  // .play() *before* render.\n\n          if (sceneEl.renderStarted) { return; }\n          sceneEl.resize();\n\n          // Kick off render loop.\n          if (sceneEl.renderer) {\n            if (window.performance) { window.performance.mark('render-started'); }\n            loadingScreen.remove();\n            vrDisplay = utils.device.getVRDisplay();\n            if (vrDisplay && vrDisplay.isPresenting) {\n              vrManager.setDevice(vrDisplay);\n              vrManager.enabled = true;\n              sceneEl.enterVR();\n            }\n            renderer.setAnimationLoop(this.render);\n            sceneEl.renderStarted = true;\n            sceneEl.emit('renderstart');\n          }\n        });\n\n        // setTimeout to wait for all nodes to attach and run their callbacks.\n        setTimeout(function () {\n          AEntity.prototype.load.call(self);\n        });\n      }\n    },\n\n    /**\n     * Wrap `updateComponent` to not initialize the component if the component has a system\n     * (aframevr/aframe#2365).\n     */\n    updateComponent: {\n      value: function (componentName) {\n        if (componentName in systems) { return; }\n        AEntity.prototype.updateComponent.apply(this, arguments);\n      }\n    },\n\n    /**\n     * Behavior-updater meant to be called from scene render.\n     * Abstracted to a different function to facilitate unit testing (`scene.tick()`) without\n     * needing to render.\n     */\n    tick: {\n      value: function (time, timeDelta) {\n        var i;\n        var systems = this.systems;\n\n        // Components.\n        for (i = 0; i < this.behaviors.tick.length; i++) {\n          if (!this.behaviors.tick[i].el.isPlaying) { continue; }\n          this.behaviors.tick[i].tick(time, timeDelta);\n        }\n\n        // Systems.\n        for (i = 0; i < this.systemNames.length; i++) {\n          if (!systems[this.systemNames[i]].tick) { continue; }\n          systems[this.systemNames[i]].tick(time, timeDelta);\n        }\n      }\n    },\n\n    /**\n     * Behavior-updater meant to be called after scene render for post processing purposes.\n     * Abstracted to a different function to facilitate unit testing (`scene.tock()`) without\n     * needing to render.\n     */\n    tock: {\n      value: function (time, timeDelta, camera) {\n        var i;\n        var systems = this.systems;\n\n        // Components.\n        for (i = 0; i < this.behaviors.tock.length; i++) {\n          if (!this.behaviors.tock[i].el.isPlaying) { continue; }\n          this.behaviors.tock[i].tock(time, timeDelta, camera);\n        }\n\n        // Systems.\n        for (i = 0; i < this.systemNames.length; i++) {\n          if (!systems[this.systemNames[i]].tock) { continue; }\n          systems[this.systemNames[i]].tock(time, timeDelta, camera);\n        }\n      }\n    },\n\n    /**\n     * The render loop.\n     *\n     * Updates animations.\n     * Updates behaviors.\n     * Renders with request animation frame.\n     */\n    render: {\n      value: function (time, frame) {\n        var renderer = this.renderer;\n\n        this.frame = frame;\n        this.delta = this.clock.getDelta() * 1000;\n        this.time = this.clock.elapsedTime * 1000;\n\n        if (this.isPlaying) { this.tick(this.time, this.delta); }\n\n        renderer.render(this.object3D, this.camera);\n      },\n      writable: true\n    }\n  })\n});\n\n/**\n * Return the canvas size where the scene will be rendered.\n * Will be always the window size except when the scene is embedded.\n * The parent size (less than max size) will be returned in that case.\n *\n * @param {object} canvasEl - the canvas element\n * @param {boolean} embedded - Is the scene embedded?\n * @param {object} max - Max size parameters\n * @param {boolean} isVR - If in VR\n */\nfunction getCanvasSize (canvasEl, embedded, maxSize, isVR) {\n  if (embedded) {\n    return {\n      height: canvasEl.parentElement.offsetHeight,\n      width: canvasEl.parentElement.offsetWidth\n    };\n  }\n  return getMaxSize(maxSize, isVR);\n}\n\n/**\n * Return the canvas size. Will be the window size unless that size is greater than the\n * maximum size (1920x1920 by default).  The constrained size will be returned in that case,\n * maintaining aspect ratio\n *\n * @param {object} maxSize - Max size parameters (width and height).\n * @param {boolean} isVR - If in VR.\n * @returns {object} Width and height.\n */\nfunction getMaxSize (maxSize, isVR) {\n  var aspectRatio;\n  var size;\n  var pixelRatio = window.devicePixelRatio;\n\n  size = {height: document.body.offsetHeight, width: document.body.offsetWidth};\n  if (!maxSize || isVR || (maxSize.width === -1 && maxSize.height === -1)) {\n    return size;\n  }\n\n  if (size.width * pixelRatio < maxSize.width &&\n    size.height * pixelRatio < maxSize.height) {\n    return size;\n  }\n\n  aspectRatio = size.width / size.height;\n\n  if ((size.width * pixelRatio) > maxSize.width && maxSize.width !== -1) {\n    size.width = Math.round(maxSize.width / pixelRatio);\n    size.height = Math.round(maxSize.width / aspectRatio / pixelRatio);\n  }\n\n  if ((size.height * pixelRatio) > maxSize.height && maxSize.height !== -1) {\n    size.height = Math.round(maxSize.height / pixelRatio);\n    size.width = Math.round(maxSize.height * aspectRatio / pixelRatio);\n  }\n\n  return size;\n}\n\nfunction requestFullscreen (canvas) {\n  var requestFullscreen =\n    canvas.requestFullscreen ||\n    canvas.webkitRequestFullscreen ||\n    canvas.mozRequestFullScreen ||  // The capitalized `S` is not a typo.\n    canvas.msRequestFullscreen;\n  requestFullscreen.apply(canvas);\n}\n\nfunction exitFullscreen () {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nfunction setupCanvas (sceneEl) {\n  var canvasEl;\n\n  canvasEl = document.createElement('canvas');\n  canvasEl.classList.add('a-canvas');\n  // Mark canvas as provided/injected by A-Frame.\n  canvasEl.dataset.aframeCanvas = true;\n  sceneEl.appendChild(canvasEl);\n\n  document.addEventListener('fullscreenchange', onFullScreenChange);\n  document.addEventListener('mozfullscreenchange', onFullScreenChange);\n  document.addEventListener('webkitfullscreenchange', onFullScreenChange);\n\n  // Prevent overscroll on mobile.\n  canvasEl.addEventListener('touchmove', function (event) { event.preventDefault(); });\n\n  // Set canvas on scene.\n  sceneEl.canvas = canvasEl;\n  sceneEl.emit('render-target-loaded', {target: canvasEl});\n  // For unknown reasons a synchronous resize does not work on desktop when\n  // entering/exiting fullscreen.\n  setTimeout(bind(sceneEl.resize, sceneEl), 0);\n\n  function onFullScreenChange () {\n    var fullscreenEl =\n      document.fullscreenElement ||\n      document.mozFullScreenElement ||\n      document.webkitFullscreenElement;\n    // No fullscren element === exit fullscreen\n    if (!fullscreenEl) { sceneEl.exitVR(); }\n    document.activeElement.blur();\n    document.body.focus();\n  }\n}\nmodule.exports.setupCanvas = setupCanvas;  // For testing.\n","var constants = require('../../constants/');\nvar extend = require('../../utils').extend;\n\nvar MOBILE_HEAD_TAGS = module.exports.MOBILE_HEAD_TAGS = [\n  Meta({name: 'viewport', content: 'width=device-width,initial-scale=1,maximum-scale=1,shrink-to-fit=no,user-scalable=no,minimal-ui'}),\n\n  // W3C-standardised meta tags.\n  Meta({name: 'mobile-web-app-capable', content: 'yes'}),\n  Meta({name: 'theme-color', content: 'black'})\n];\n\nvar MOBILE_IOS_HEAD_TAGS = [\n  // iOS-specific meta tags for fullscreen when pinning to homescreen.\n  Meta({name: 'apple-mobile-web-app-capable', content: 'yes'}),\n  Meta({name: 'apple-mobile-web-app-status-bar-style', content: 'black'}),\n  Link({rel: 'apple-touch-icon', href: 'https://aframe.io/images/aframe-logo-152.png'})\n];\n\nfunction Meta (attrs) {\n  return {\n    tagName: 'meta',\n    attributes: attrs,\n    exists: function () { return document.querySelector('meta[name=\"' + attrs.name + '\"]'); }\n  };\n}\n\nfunction Link (attrs) {\n  return {\n    tagName: 'link',\n    attributes: attrs,\n    exists: function () { return document.querySelector('link[rel=\"' + attrs.rel + '\"]'); }\n  };\n}\n\n/**\n * Injects the necessary metatags in the document for mobile support:\n * 1. Prevent the user to zoom in the document.\n * 2. Ensure that window.innerWidth and window.innerHeight have the correct\n *    values and the canvas is properly scaled.\n * 3. To allow fullscreen mode when pinning a web app on the home screen on\n *    iOS.\n * Adapted from https://www.reddit.com/r/web_design/comments/3la04p/\n *\n * @param {object} scene - Scene element\n * @returns {Array}\n */\nmodule.exports.inject = function injectHeadTags (scene) {\n  var headEl = document.head;\n  var headScriptEl = headEl.querySelector('script');\n  var tag;\n  var headTags = [];\n  MOBILE_HEAD_TAGS.forEach(createAndInjectTag);\n  if (scene.isIOS) {\n    MOBILE_IOS_HEAD_TAGS.forEach(createAndInjectTag);\n  }\n  return headTags;\n\n  function createAndInjectTag (tagObj) {\n    if (!tagObj || tagObj.exists()) { return; }\n\n    tag = createTag(tagObj);\n    if (!tag) { return; }\n\n    if (headScriptEl) {\n      headScriptEl.parentNode.insertBefore(tag, headScriptEl);\n    } else {\n      headEl.appendChild(tag);\n    }\n\n    headTags.push(tag);\n  }\n};\n\nfunction createTag (tagObj) {\n  if (!tagObj || !tagObj.tagName) { return; }\n  var meta = document.createElement(tagObj.tagName);\n  meta.setAttribute(constants.AFRAME_INJECTED, '');\n  return extend(meta, tagObj.attributes);\n}\n","var Wakelock = require('../../../vendor/wakelock/wakelock');\n\nmodule.exports = function initWakelock (scene) {\n  if (!scene.isMobile) { return; }\n\n  var wakelock = scene.wakelock = new Wakelock();\n  scene.addEventListener('enter-vr', function () { wakelock.request(); });\n  scene.addEventListener('exit-vr', function () { wakelock.release(); });\n};\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Util = require('./util.js');\n\n/**\n * Android and iOS compatible wakelock implementation.\n *\n * Refactored thanks to dkovalev@.\n */\nfunction AndroidWakeLock() {\n  var video = document.createElement('video');\n\n  video.addEventListener('ended', function() {\n    video.play();\n  });\n\n  this.request = function() {\n    if (video.paused) {\n      // Base64 version of videos_src/no-sleep-60s.webm.\n      video.src = Util.base64('video/webm', 'GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4ECQoWBAhhTgGcBAAAAAAAH4xFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsggfG7AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU2LjQwLjEwMVdBjUxhdmY1Ni40MC4xMDFzpJAGSJTMbsLpDt/ySkipgX1fRImIQO1MAAAAAAAWVK5rAQAAAAAAADuuAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDmDgQEj44OEO5rKAOABAAAAAAAABrCBsLqBkB9DtnUBAAAAAAAAo+eBAKOmgQAAgKJJg0IAAV4BHsAHBIODCoAACmH2MAAAZxgz4dPSTFi5JACjloED6ACmAECSnABMQAADYAAAWi0quoCjloEH0ACmAECSnABNwAADYAAAWi0quoCjloELuACmAECSnABNgAADYAAAWi0quoCjloEPoACmAECSnABNYAADYAAAWi0quoCjloETiACmAECSnABNIAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTnghdwo5aBAAAApgBAkpwATOAAA2AAAFotKrqAo5aBA+gApgBAkpwATMAAA2AAAFotKrqAo5aBB9AApgBAkpwATIAAA2AAAFotKrqAo5aBC7gApgBAkpwATEAAA2AAAFotKrqAo5aBD6AApgDAkpwAQ2AAA2AAAFotKrqAo5aBE4gApgBAkpwATCAAA2AAAFotKrqAH0O2dQEAAAAAAACU54Iu4KOWgQAAAKYAQJKcAEvAAANgAABaLSq6gKOWgQPoAKYAQJKcAEtgAANgAABaLSq6gKOWgQfQAKYAQJKcAEsAAANgAABaLSq6gKOWgQu4AKYAQJKcAEqAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEogAANgAABaLSq6gKOWgROIAKYAQJKcAEnAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCRlCjloEAAACmAECSnABJgAADYAAAWi0quoCjloED6ACmAECSnABJIAADYAAAWi0quoCjloEH0ACmAMCSnABDYAADYAAAWi0quoCjloELuACmAECSnABI4AADYAAAWi0quoCjloEPoACmAECSnABIoAADYAAAWi0quoCjloETiACmAECSnABIYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngl3Ao5aBAAAApgBAkpwASCAAA2AAAFotKrqAo5aBA+gApgBAkpwASAAAA2AAAFotKrqAo5aBB9AApgBAkpwAR8AAA2AAAFotKrqAo5aBC7gApgBAkpwAR4AAA2AAAFotKrqAo5aBD6AApgBAkpwAR2AAA2AAAFotKrqAo5aBE4gApgBAkpwARyAAA2AAAFotKrqAH0O2dQEAAAAAAACU54J1MKOWgQAAAKYAwJKcAENgAANgAABaLSq6gKOWgQPoAKYAQJKcAEbgAANgAABaLSq6gKOWgQfQAKYAQJKcAEagAANgAABaLSq6gKOWgQu4AKYAQJKcAEaAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEZAAANgAABaLSq6gKOWgROIAKYAQJKcAEYAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCjKCjloEAAACmAECSnABF4AADYAAAWi0quoCjloED6ACmAECSnABFwAADYAAAWi0quoCjloEH0ACmAECSnABFoAADYAAAWi0quoCjloELuACmAECSnABFgAADYAAAWi0quoCjloEPoACmAMCSnABDYAADYAAAWi0quoCjloETiACmAECSnABFYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngqQQo5aBAAAApgBAkpwARUAAA2AAAFotKrqAo5aBA+gApgBAkpwARSAAA2AAAFotKrqAo5aBB9AApgBAkpwARQAAA2AAAFotKrqAo5aBC7gApgBAkpwARQAAA2AAAFotKrqAo5aBD6AApgBAkpwAROAAA2AAAFotKrqAo5aBE4gApgBAkpwARMAAA2AAAFotKrqAH0O2dQEAAAAAAACU54K7gKOWgQAAAKYAQJKcAESgAANgAABaLSq6gKOWgQPoAKYAQJKcAESAAANgAABaLSq6gKOWgQfQAKYAwJKcAENgAANgAABaLSq6gKOWgQu4AKYAQJKcAERgAANgAABaLSq6gKOWgQ+gAKYAQJKcAERAAANgAABaLSq6gKOWgROIAKYAQJKcAEQgAANgAABaLSq6gB9DtnUBAAAAAAAAlOeC0vCjloEAAACmAECSnABEIAADYAAAWi0quoCjloED6ACmAECSnABEAAADYAAAWi0quoCjloEH0ACmAECSnABD4AADYAAAWi0quoCjloELuACmAECSnABDwAADYAAAWi0quoCjloEPoACmAECSnABDoAADYAAAWi0quoCjloETiACmAECSnABDgAADYAAAWi0quoAcU7trAQAAAAAAABG7j7OBALeK94EB8YIBd/CBAw==');\n      video.play();\n    }\n  };\n\n  this.release = function() {\n    video.pause();\n    video.src = '';\n  };\n}\n\nfunction iOSWakeLock() {\n  var timer = null;\n\n  this.request = function() {\n    if (!timer) {\n      timer = setInterval(function() {\n        window.location.href = '/';\n        setTimeout(window.stop, 0);\n      }, 15000);\n    }\n  }\n\n  this.release = function() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  }\n}\n\n\nfunction getWakeLock() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  if (userAgent.match(/iPhone/i) || userAgent.match(/iPod/i)) {\n    return iOSWakeLock;\n  } else {\n    return AndroidWakeLock;\n  }\n}\n\nmodule.exports = getWakeLock();\n","/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Util = {};\n\nUtil.base64 = function(mimeType, base64) {\n  return 'data:' + mimeType + ';base64,' + base64;\n};\n\nUtil.isMobile = function() {\n  var check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n  return check;\n};\n\nUtil.isIOS = function() {\n  return /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n};\n\nUtil.isIFrame = function() {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n};\n\nUtil.appendQueryParameter = function(url, key, value) {\n  // Determine delimiter based on if the URL already GET parameters in it.\n  var delimiter = (url.indexOf('?') < 0 ? '?' : '&');\n  url += delimiter + key + '=' + value;\n  return url;\n};\n\n// From http://goo.gl/4WX3tg\nUtil.getQueryParameter = function(name) {\n  name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n      results = regex.exec(location.search);\n  return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n};\n\nUtil.isLandscapeMode = function() {\n  return (window.orientation == 90 || window.orientation == -90);\n};\n\n\nmodule.exports = Util;\n","/* global THREE */\nvar utils = require('../../utils/');\nvar styleParser = utils.styleParser;\n\nvar sceneEl;\nvar titleEl;\nvar getSceneCanvasSize;\n\nvar ATTR_NAME = 'loading-screen';\nvar LOADER_TITLE_CLASS = 'a-loader-title';\n\nmodule.exports.setup = function setup (el, getCanvasSize) {\n  sceneEl = el;\n  getSceneCanvasSize = getCanvasSize;\n  var loaderAttribute = sceneEl.hasAttribute(ATTR_NAME) ? styleParser.parse(sceneEl.getAttribute(ATTR_NAME)) : undefined;\n  var dotsColor = loaderAttribute && loaderAttribute.dotsColor || 'white';\n  var backgroundColor = loaderAttribute && loaderAttribute.backgroundColor || '#24CAFF';\n  var loaderEnabled = loaderAttribute === undefined || loaderAttribute.enabled === true || loaderAttribute.enabled === undefined; // true default\n  var loaderScene;\n  var sphereGeometry;\n  var sphereMaterial;\n  var sphereMesh1;\n  var sphereMesh2;\n  var sphereMesh3;\n  var camera;\n  var clock;\n  var time;\n  var render;\n\n  if (!loaderEnabled) { return; }\n\n  // Setup Scene.\n  loaderScene = new THREE.Scene();\n  sphereGeometry = new THREE.SphereGeometry(0.20, 36, 18, 0, 2 * Math.PI, 0, Math.PI);\n  sphereMaterial = new THREE.MeshBasicMaterial({color: dotsColor});\n  sphereMesh1 = new THREE.Mesh(sphereGeometry, sphereMaterial);\n  sphereMesh2 = sphereMesh1.clone();\n  sphereMesh3 = sphereMesh1.clone();\n  camera = new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 0.0005, 10000);\n  clock = new THREE.Clock();\n  time = 0;\n  render = function () {\n    sceneEl.renderer.render(loaderScene, camera);\n    time = clock.getElapsedTime() % 4;\n    sphereMesh1.visible = time >= 1;\n    sphereMesh2.visible = time >= 2;\n    sphereMesh3.visible = time >= 3;\n  };\n\n  loaderScene.background = new THREE.Color(backgroundColor);\n  loaderScene.add(camera);\n  sphereMesh1.position.set(-1, 0, -15);\n  sphereMesh2.position.set(0, 0, -15);\n  sphereMesh3.position.set(1, 0, -15);\n  camera.add(sphereMesh1);\n  camera.add(sphereMesh2);\n  camera.add(sphereMesh3);\n  setupTitle();\n\n  // Delay 200ms to avoid loader flashes.\n  setTimeout(function () {\n    if (sceneEl.hasLoaded) { return; }\n    resize(camera);\n    titleEl.style.display = 'block';\n    window.addEventListener('resize', function () { resize(camera); });\n    sceneEl.renderer.setAnimationLoop(render);\n  }, 200);\n};\n\nmodule.exports.remove = function remove () {\n  window.removeEventListener('resize', resize);\n  if (!titleEl) { return; }\n  // Hide title.\n  titleEl.style.display = 'none';\n};\n\nfunction resize (camera) {\n  var size = getSceneCanvasSize(sceneEl.canvas, false, sceneEl.maxCanvasSize, sceneEl.is('vr-mode'));\n  camera.aspect = size.width / size.height;\n  camera.updateProjectionMatrix();\n   // Notify renderer of size change.\n  sceneEl.renderer.setSize(size.width, size.height, false);\n}\n\nfunction setupTitle () {\n  titleEl = document.createElement('div');\n  titleEl.className = LOADER_TITLE_CLASS;\n  titleEl.innerHTML = document.title;\n  titleEl.style.display = 'none';\n  sceneEl.appendChild(titleEl);\n}\n","var coordinates = require('../utils/coordinates');\nvar debug = require('debug');\n\nvar error = debug('core:propertyTypes:warn');\nvar warn = debug('core:propertyTypes:warn');\n\nvar propertyTypes = module.exports.propertyTypes = {};\nvar nonCharRegex = /[,> .[\\]:]/;\nvar urlRegex = /\\url\\((.+)\\)/;\n\n// Built-in property types.\nregisterPropertyType('audio', '', assetParse);\nregisterPropertyType('array', [], arrayParse, arrayStringify);\nregisterPropertyType('asset', '', assetParse);\nregisterPropertyType('boolean', false, boolParse);\nregisterPropertyType('color', '#FFF', defaultParse, defaultStringify);\nregisterPropertyType('int', 0, intParse);\nregisterPropertyType('number', 0, numberParse);\nregisterPropertyType('map', '', assetParse);\nregisterPropertyType('model', '', assetParse);\nregisterPropertyType('selector', null, selectorParse, selectorStringify);\nregisterPropertyType('selectorAll', null, selectorAllParse, selectorAllStringify);\nregisterPropertyType('src', '', srcParse);\nregisterPropertyType('string', '', defaultParse, defaultStringify);\nregisterPropertyType('time', 0, intParse);\nregisterPropertyType('vec2', {x: 0, y: 0}, vecParse, coordinates.stringify);\nregisterPropertyType('vec3', {x: 0, y: 0, z: 0}, vecParse, coordinates.stringify);\nregisterPropertyType('vec4', {x: 0, y: 0, z: 0, w: 1}, vecParse, coordinates.stringify);\n\n/**\n * Register a parser for re-use such that when someone uses `type` in the schema,\n * `schema.process` will set the property `parse` and `stringify`.\n *\n * @param {string} type - Type name.\n * @param [defaultValue=null] -\n *   Default value to use if component does not define default value.\n * @param {function} [parse=defaultParse] - Parse string function.\n * @param {function} [stringify=defaultStringify] - Stringify to DOM function.\n */\nfunction registerPropertyType (type, defaultValue, parse, stringify) {\n  if ('type' in propertyTypes) {\n    error('Property type ' + type + ' is already registered.');\n    return;\n  }\n\n  propertyTypes[type] = {\n    default: defaultValue,\n    parse: parse || defaultParse,\n    stringify: stringify || defaultStringify\n  };\n}\nmodule.exports.registerPropertyType = registerPropertyType;\n\nfunction arrayParse (value) {\n  if (Array.isArray(value)) { return value; }\n  if (!value || typeof value !== 'string') { return []; }\n  return value.split(',').map(trim);\n  function trim (str) { return str.trim(); }\n}\n\nfunction arrayStringify (value) {\n  return value.join(', ');\n}\n\n/**\n * For general assets.\n *\n * @param {string} value - Can either be `url(<value>)`, an ID selector to an asset, or\n *   just string.\n * @returns {string} Parsed value from `url(<value>)`, src from `<someasset src>`, or\n *   just string.\n */\nfunction assetParse (value) {\n  var el;\n  var parsedUrl;\n\n  // If an element was provided (e.g. canvas or video), just return it.\n  if (typeof value !== 'string') { return value; }\n\n  // Wrapped `url()` in case of data URI.\n  parsedUrl = value.match(urlRegex);\n  if (parsedUrl) { return parsedUrl[1]; }\n\n  // ID.\n  if (value.charAt(0) === '#') {\n    el = document.getElementById(value.substring(1));\n    if (el) {\n      // Pass through media elements. If we have the elements, we don't have to call\n      // three.js loaders which would re-request the assets.\n      if (el.tagName === 'CANVAS' || el.tagName === 'VIDEO' || el.tagName === 'IMG') {\n        return el;\n      }\n      return el.getAttribute('src');\n    }\n    warn('\"' + value + '\" asset not found.');\n    return;\n  }\n\n  // Non-wrapped url().\n  return value;\n}\n\nfunction defaultParse (value) {\n  return value;\n}\n\nfunction defaultStringify (value) {\n  if (value === null) { return 'null'; }\n  return value.toString();\n}\n\nfunction boolParse (value) {\n  return value !== 'false' && value !== false;\n}\n\nfunction intParse (value) {\n  return parseInt(value, 10);\n}\n\nfunction numberParse (value) {\n  return parseFloat(value, 10);\n}\n\nfunction selectorParse (value) {\n  if (!value) { return null; }\n  if (typeof value !== 'string') { return value; }\n  if (value[0] === '#' && !nonCharRegex.test(value)) {\n    // When selecting element by ID only, use getElementById for better performance.\n    // Don't match like #myId .child.\n    return document.getElementById(value.substring(1));\n  }\n  return document.querySelector(value);\n}\n\nfunction selectorAllParse (value) {\n  if (!value) { return null; }\n  if (typeof value !== 'string') { return value; }\n  return Array.prototype.slice.call(document.querySelectorAll(value), 0);\n}\n\nfunction selectorStringify (value) {\n  if (value.getAttribute) {\n    return '#' + value.getAttribute('id');\n  }\n  return defaultStringify(value);\n}\n\nfunction selectorAllStringify (value) {\n  if (value instanceof Array) {\n    return value.map(function (element) {\n      return '#' + element.getAttribute('id');\n    }).join(', ');\n  }\n  return defaultStringify(value);\n}\n\nfunction srcParse (value) {\n  warn('`src` property type is deprecated. Use `asset` instead.');\n  return assetParse(value);\n}\n\nfunction vecParse (value) {\n  return coordinates.parse(value, this.default);\n}\n\n/**\n * Validate the default values in a schema to match their type.\n *\n * @param {string} type - Property type name.\n * @param defaultVal - Property type default value.\n * @returns {boolean} Whether default value is accurate given the type.\n */\nfunction isValidDefaultValue (type, defaultVal) {\n  if (type === 'audio' && typeof defaultVal !== 'string') { return false; }\n  if (type === 'array' && !Array.isArray(defaultVal)) { return false; }\n  if (type === 'asset' && typeof defaultVal !== 'string') { return false; }\n  if (type === 'boolean' && typeof defaultVal !== 'boolean') { return false; }\n  if (type === 'color' && typeof defaultVal !== 'string') { return false; }\n  if (type === 'int' && typeof defaultVal !== 'number') { return false; }\n  if (type === 'number' && typeof defaultVal !== 'number') { return false; }\n  if (type === 'map' && typeof defaultVal !== 'string') { return false; }\n  if (type === 'model' && typeof defaultVal !== 'string') { return false; }\n  if (type === 'selector' && typeof defaultVal !== 'string' &&\n      defaultVal !== null) { return false; }\n  if (type === 'selectorAll' && typeof defaultVal !== 'string' &&\n      defaultVal !== null) { return false; }\n  if (type === 'src' && typeof defaultVal !== 'string') { return false; }\n  if (type === 'string' && typeof defaultVal !== 'string') { return false; }\n  if (type === 'time' && typeof defaultVal !== 'number') { return false; }\n  if (type === 'vec2') { return isValidDefaultCoordinate(defaultVal, 2); }\n  if (type === 'vec3') { return isValidDefaultCoordinate(defaultVal, 3); }\n  if (type === 'vec4') { return isValidDefaultCoordinate(defaultVal, 4); }\n  return true;\n}\nmodule.exports.isValidDefaultValue = isValidDefaultValue;\n\n/**\n * Checks if default coordinates are valid.\n *\n * @param possibleCoordinates\n * @param {number} dimensions - 2 for 2D Vector, 3 for 3D vector.\n * @returns {boolean} Whether coordinates are parsed correctly.\n */\nfunction isValidDefaultCoordinate (possibleCoordinates, dimensions) {\n  if (possibleCoordinates === null) { return true; }\n  if (typeof possibleCoordinates !== 'object') { return false; }\n\n  if (Object.keys(possibleCoordinates).length !== dimensions) {\n    return false;\n  } else {\n    var x = possibleCoordinates.x;\n    var y = possibleCoordinates.y;\n    var z = possibleCoordinates.z;\n    var w = possibleCoordinates.w;\n\n    if (typeof x !== 'number' || typeof y !== 'number') { return false; }\n    if (dimensions > 2 && typeof z !== 'number') { return false; }\n    if (dimensions > 3 && typeof w !== 'number') { return false; }\n  }\n\n  return true;\n}\nmodule.exports.isValidDefaultCoordinate = isValidDefaultCoordinate;\n","var bind = require('../../utils/bind');\nvar isIframed = require('../../utils/').isIframed;\n\n/**\n * Provides a post message API for scenes contained\n * in an iframe.\n */\nmodule.exports = function initPostMessageAPI (scene) {\n  // Handles fullscreen behavior when inside an iframe.\n  if (!isIframed()) { return; }\n  // postMessage API handler\n  window.addEventListener('message', bind(postMessageAPIHandler, scene));\n};\n\nfunction postMessageAPIHandler (event) {\n  var scene = this;\n  if (!event.data) { return; }\n\n  switch (event.data.type) {\n    case 'vr': {\n      switch (event.data.data) {\n        case 'enter':\n          scene.enterVR();\n          break;\n        case 'exit':\n          scene.exitVR();\n          break;\n      }\n    }\n  }\n}\n","require('./animation');\nrequire('./camera');\nrequire('./cursor');\nrequire('./geometry');\nrequire('./gltf-model');\nrequire('./hand-controls');\nrequire('./laser-controls');\nrequire('./light');\nrequire('./line');\nrequire('./link');\nrequire('./look-controls');\nrequire('./material');\nrequire('./obj-model');\nrequire('./position');\nrequire('./raycaster');\nrequire('./rotation');\nrequire('./scale');\nrequire('./shadow');\nrequire('./sound');\nrequire('./visible');\nrequire('./wasd-controls');\n\nrequire('./scene/background');\nrequire('./scene/debug');\nrequire('./scene/embedded');\nrequire('./scene/inspector');\nrequire('./scene/fog');\nrequire('./scene/keyboard-shortcuts');\nrequire('./scene/pool');\nrequire('./scene/screenshot');\nrequire('./scene/stats');\nrequire('./scene/vr-mode-ui');\n","var anime = require('super-animejs');\nvar components = require('../core/component').components;\nvar registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\nvar utils = require('../utils');\n\nvar colorHelperFrom = new THREE.Color();\nvar colorHelperTo = new THREE.Color();\n\nvar getComponentProperty = utils.entity.getComponentProperty;\nvar setComponentProperty = utils.entity.setComponentProperty;\nvar splitCache = {};\n\nvar TYPE_COLOR = 'color';\nvar PROP_POSITION = 'position';\nvar PROP_ROTATION = 'rotation';\nvar PROP_SCALE = 'scale';\nvar STRING_COMPONENTS = 'components';\nvar STRING_OBJECT3D = 'object3D';\n\n/**\n * Animation component for A-Frame using anime.js.\n *\n * The component manually controls the tick by setting `autoplay: false` on anime.js and\n * manually * calling `animation.tick()` in the tick handler. To pause or resume, we toggle a\n * boolean * flag * `isAnimationPlaying`.\n *\n * anime.js animation config for tweenining Javascript objects and values works as:\n *\n *  config = {\n *    targets: {foo: 0.0, bar: '#000'},\n *    foo: 1.0,\n *    bar: '#FFF'\n *  }\n *\n * The above will tween each property in `targets`. The `to` values are set in the root of\n * the config.\n *\n * @member {object} animation - anime.js instance.\n * @member {boolean} animationIsPlaying - Control if animation is playing.\n */\nmodule.exports.Component = registerComponent('animation', {\n  schema: {\n    autoplay: {default: true},\n    delay: {default: 0},\n    dir: {default: ''},\n    dur: {default: 1000},\n    easing: {default: 'easeInQuad'},\n    elasticity: {default: 400},\n    enabled: {default: true},\n    from: {default: ''},\n    loop: {\n      default: 0,\n      parse: function (value) {\n        // Boolean or integer.\n        if (value === true || value === 'true') { return true; }\n        if (value === false || value === 'false') { return false; }\n        return parseInt(value, 10);\n      }\n    },\n    property: {default: ''},\n    startEvents: {type: 'array'},\n    pauseEvents: {type: 'array'},\n    resumeEvents: {type: 'array'},\n    round: {default: false},\n    to: {default: ''},\n    type: {default: ''},\n    isRawProperty: {default: false}\n  },\n\n  multiple: true,\n\n  init: function () {\n    var self = this;\n\n    this.eventDetail = {name: this.attrName};\n    this.time = 0;\n\n    this.animation = null;\n    this.animationIsPlaying = false;\n    this.onStartEvent = this.onStartEvent.bind(this);\n    this.beginAnimation = this.beginAnimation.bind(this);\n    this.pauseAnimation = this.pauseAnimation.bind(this);\n    this.resumeAnimation = this.resumeAnimation.bind(this);\n\n    this.fromColor = {};\n    this.toColor = {};\n    this.targets = {};\n    this.targetsArray = [];\n\n    this.updateConfigForDefault = this.updateConfigForDefault.bind(this);\n    this.updateConfigForRawColor = this.updateConfigForRawColor.bind(this);\n\n    this.config = {\n      complete: function () {\n        self.animationIsPlaying = false;\n        self.el.emit('animationcomplete', self.eventDetail, false);\n        if (self.id) {\n          self.el.emit('animationcomplete__' + self.id, self.eventDetail, false);\n        }\n      }\n    };\n  },\n\n  update: function (oldData) {\n    var config = this.config;\n    var data = this.data;\n\n    this.animationIsPlaying = false;\n\n    if (!this.data.enabled) { return; }\n\n    if (!data.property) { return; }\n\n    // Base config.\n    config.autoplay = false;\n    config.direction = data.dir;\n    config.duration = data.dur;\n    config.easing = data.easing;\n    config.elasticity = data.elasticity;\n    config.loop = data.loop;\n    config.round = data.round;\n\n    // Start new animation.\n    this.createAndStartAnimation();\n  },\n\n  tick: function (t, dt) {\n    if (!this.animationIsPlaying) { return; }\n    this.time += dt;\n    this.animation.tick(this.time);\n  },\n\n  remove: function () {\n    this.pauseAnimation();\n    this.removeEventListeners();\n  },\n\n  pause: function () {\n    this.paused = true;\n    this.pausedWasPlaying = this.animationIsPlaying;\n    this.pauseAnimation();\n    this.removeEventListeners();\n  },\n\n  /**\n   * `play` handler only for resuming scene.\n   */\n  play: function () {\n    if (!this.paused) { return; }\n    this.paused = false;\n    this.addEventListeners();\n    if (this.pausedWasPlaying) {\n      this.resumeAnimation();\n      this.pausedWasPlaying = false;\n    }\n  },\n\n  /**\n   * Start animation from scratch.\n   */\n  createAndStartAnimation: function () {\n    var data = this.data;\n\n    this.updateConfig();\n    this.animationIsPlaying = false;\n    this.animation = anime(this.config);\n    this.animation.began = true;\n\n    this.removeEventListeners();\n    this.addEventListeners();\n\n    // Wait for start events for animation.\n    if (!data.autoplay || data.startEvents && data.startEvents.length) { return; }\n\n    // Delay animation.\n    if (data.delay) {\n      setTimeout(this.beginAnimation, data.delay);\n      return;\n    }\n\n    // Play animation.\n    this.beginAnimation();\n  },\n\n  /**\n   * This is before animation start (including from startEvents).\n   * Set to initial state (config.from, time = 0, seekTime = 0).\n   */\n  beginAnimation: function () {\n    this.updateConfig();\n    this.animation.began = true;\n    this.time = 0;\n    this.animationIsPlaying = true;\n    this.stopRelatedAnimations();\n    this.el.emit('animationbegin', this.eventDetail, false);\n  },\n\n  pauseAnimation: function () {\n    this.animationIsPlaying = false;\n  },\n\n  resumeAnimation: function () {\n    this.animationIsPlaying = true;\n  },\n\n  /**\n   * startEvents callback.\n   */\n  onStartEvent: function () {\n    if (!this.data.enabled) { return; }\n\n    this.updateConfig();\n    if (this.animation) {\n      this.animation.pause();\n    }\n    this.animation = anime(this.config);\n\n    // Include the delay before each start event.\n    if (this.data.delay) {\n      setTimeout(this.beginAnimation, this.data.delay);\n      return;\n    }\n    this.beginAnimation();\n  },\n\n  /**\n   * rawProperty: true and type: color;\n   */\n  updateConfigForRawColor: function () {\n    var config = this.config;\n    var data = this.data;\n    var el = this.el;\n    var from;\n    var key;\n    var to;\n\n    if (this.waitComponentInitRawProperty(this.updateConfigForRawColor)) {\n      return;\n    }\n\n    from = data.from === '' ? getRawProperty(el, data.property) : data.from;\n    to = data.to;\n\n    // Use r/g/b vector for color type.\n    this.setColorConfig(from, to);\n    from = this.fromColor;\n    to = this.toColor;\n\n    this.targetsArray.length = 0;\n    this.targetsArray.push(from);\n    config.targets = this.targetsArray;\n    for (key in to) { config[key] = to[key]; }\n\n    config.update = (function () {\n      var lastValue = {};\n      return function (anim) {\n        var value;\n        value = anim.animatables[0].target;\n        // For animation timeline.\n        if (value.r === lastValue.r &&\n            value.g === lastValue.g &&\n            value.b === lastValue.b) { return; }\n\n        setRawProperty(el, data.property, value, data.type);\n      };\n    })();\n  },\n\n  /**\n   * Stuff property into generic `property` key.\n   */\n  updateConfigForDefault: function () {\n    var config = this.config;\n    var data = this.data;\n    var el = this.el;\n    var from;\n    var isBoolean;\n    var isNumber;\n    var to;\n\n    if (this.waitComponentInitRawProperty(this.updateConfigForDefault)) {\n      return;\n    }\n\n    if (data.from === '') {\n      // Infer from.\n      from = isRawProperty(data)\n        ? getRawProperty(el, data.property)\n        : getComponentProperty(el, data.property);\n    } else {\n      // Explicit from.\n      from = data.from;\n    }\n\n    to = data.to;\n\n    isNumber = !isNaN(from || to);\n    if (isNumber) {\n      from = parseFloat(from);\n      to = parseFloat(to);\n    } else {\n      from = from ? from.toString() : from;\n      to = to ? to.toString() : to;\n    }\n\n    // Convert booleans to integer to allow boolean flipping.\n    isBoolean = data.to === 'true' || data.to === 'false' ||\n                data.to === true || data.to === false;\n    if (isBoolean) {\n      from = data.from === 'true' || data.from === true ? 1 : 0;\n      to = data.to === 'true' || data.to === true ? 1 : 0;\n    }\n\n    this.targets.aframeProperty = from;\n    config.targets = this.targets;\n    config.aframeProperty = to;\n    config.update = (function () {\n      var lastValue;\n\n      return function (anim) {\n        var value;\n        value = anim.animatables[0].target.aframeProperty;\n\n        // Need to do a last value check for animation timeline since all the tweening\n        // begins simultaenously even if the value has not changed. Also better for perf\n        // anyways.\n        if (value === lastValue) { return; }\n        lastValue = value;\n\n        if (isBoolean) { value = value >= 1; }\n\n        if (isRawProperty(data)) {\n          setRawProperty(el, data.property, value, data.type);\n        } else {\n          setComponentProperty(el, data.property, value);\n        }\n      };\n    })();\n  },\n\n  /**\n   * Extend x/y/z/w onto the config.\n   * Update vector by modifying object3D.\n   */\n  updateConfigForVector: function () {\n    var config = this.config;\n    var data = this.data;\n    var el = this.el;\n    var key;\n    var from;\n    var to;\n\n    // Parse coordinates.\n    from = data.from !== ''\n      ? utils.coordinates.parse(data.from)  // If data.from defined, use that.\n      : getComponentProperty(el, data.property);  // If data.from not defined, get on the fly.\n    to = utils.coordinates.parse(data.to);\n\n    if (data.property === PROP_ROTATION) {\n      toRadians(from);\n      toRadians(to);\n    }\n\n    // Set to and from.\n    this.targetsArray.length = 0;\n    this.targetsArray.push(from);\n    config.targets = this.targetsArray;\n    for (key in to) { config[key] = to[key]; }\n\n    // If animating object3D transformation, run more optimized updater.\n    if (data.property === PROP_POSITION || data.property === PROP_ROTATION ||\n        data.property === PROP_SCALE) {\n      config.update = (function () {\n        var lastValue = {};\n        return function (anim) {\n          var value = anim.animatables[0].target;\n\n          if (data.property === PROP_SCALE) {\n            value.x = Math.max(0.0001, value.x);\n            value.y = Math.max(0.0001, value.y);\n            value.z = Math.max(0.0001, value.z);\n          }\n\n          // For animation timeline.\n          if (value.x === lastValue.x &&\n              value.y === lastValue.y &&\n              value.z === lastValue.z) { return; }\n\n          lastValue.x = value.x;\n          lastValue.y = value.y;\n          lastValue.z = value.z;\n\n          el.object3D[data.property].set(value.x, value.y, value.z);\n        };\n      })();\n      return;\n    }\n\n    // Animating some vector.\n    config.update = (function () {\n      var lastValue = {};\n      return function (anim) {\n        var value = anim.animations[0].target;\n\n        // Animate rotation through radians.\n        // For animation timeline.\n        if (value.x === lastValue.x &&\n            value.y === lastValue.y &&\n            value.z === lastValue.z) { return; }\n        lastValue.x = value.x;\n        lastValue.y = value.y;\n        lastValue.z = value.z;\n        setComponentProperty(el, data.property, value);\n      };\n    })();\n  },\n\n  /**\n   * Update the config before each run.\n   */\n  updateConfig: function () {\n    var propType;\n\n    // Route config type.\n    propType = getPropertyType(this.el, this.data.property);\n    if (isRawProperty(this.data) && this.data.type === TYPE_COLOR) {\n      this.updateConfigForRawColor();\n    } else if (propType === 'vec2' || propType === 'vec3' || propType === 'vec4') {\n      this.updateConfigForVector();\n    } else {\n      this.updateConfigForDefault();\n    }\n  },\n\n  /**\n   * Wait for component to initialize.\n   */\n  waitComponentInitRawProperty: function (cb) {\n    var componentName;\n    var data = this.data;\n    var el = this.el;\n    var self = this;\n\n    if (data.from !== '') { return false; }\n\n    if (!data.property.startsWith(STRING_COMPONENTS)) { return false; }\n\n    componentName = splitDot(data.property)[1];\n    if (el.components[componentName]) { return false; }\n\n    el.addEventListener('componentinitialized', function wait (evt) {\n      if (evt.detail.name !== componentName) { return; }\n      cb();\n      // Since the config was created async, create the animation now since we missed it\n      // earlier.\n      self.animation = anime(self.config);\n      el.removeEventListener('componentinitialized', wait);\n    });\n    return true;\n  },\n\n  /**\n   * Make sure two animations on the same property don't fight each other.\n   * e.g., animation__mouseenter=\"property: material.opacity\"\n   *       animation__mouseleave=\"property: material.opacity\"\n   */\n  stopRelatedAnimations: function () {\n    var component;\n    var componentName;\n    for (componentName in this.el.components) {\n      component = this.el.components[componentName];\n      if (componentName === this.attrName) { continue; }\n      if (component.name !== 'animation') { continue; }\n      if (!component.animationIsPlaying) { continue; }\n      if (component.data.property !== this.data.property) { continue; }\n      component.animationIsPlaying = false;\n    }\n  },\n\n  addEventListeners: function () {\n    var data = this.data;\n    var el = this.el;\n    addEventListeners(el, data.startEvents, this.onStartEvent);\n    addEventListeners(el, data.pauseEvents, this.pauseAnimation);\n    addEventListeners(el, data.resumeEvents, this.resumeAnimation);\n  },\n\n  removeEventListeners: function () {\n    var data = this.data;\n    var el = this.el;\n    removeEventListeners(el, data.startEvents, this.onStartEvent);\n    removeEventListeners(el, data.pauseEvents, this.pauseAnimation);\n    removeEventListeners(el, data.resumeEvents, this.resumeAnimation);\n  },\n\n  setColorConfig: function (from, to) {\n    colorHelperFrom.set(from);\n    colorHelperTo.set(to);\n    from = this.fromColor;\n    to = this.toColor;\n    from.r = colorHelperFrom.r;\n    from.g = colorHelperFrom.g;\n    from.b = colorHelperFrom.b;\n    to.r = colorHelperTo.r;\n    to.g = colorHelperTo.g;\n    to.b = colorHelperTo.b;\n  }\n});\n\n/**\n * Given property name, check schema to see what type we are animating.\n * We just care whether the property is a vector.\n */\nfunction getPropertyType (el, property) {\n  var component;\n  var componentName;\n  var split;\n  var propertyName;\n\n  split = property.split('.');\n  componentName = split[0];\n  propertyName = split[1];\n  component = el.components[componentName] || components[componentName];\n\n  // Primitives.\n  if (!component) { return null; }\n\n  // Dynamic schema. We only care about vectors anyways.\n  if (propertyName && !component.schema[propertyName]) { return null; }\n\n  // Multi-prop.\n  if (propertyName) { return component.schema[propertyName].type; }\n\n  // Single-prop.\n  return component.schema.type;\n}\n\n/**\n * Convert object to radians.\n */\nfunction toRadians (obj) {\n  obj.x = THREE.Math.degToRad(obj.x);\n  obj.y = THREE.Math.degToRad(obj.y);\n  obj.z = THREE.Math.degToRad(obj.z);\n}\n\nfunction addEventListeners (el, eventNames, handler) {\n  var i;\n  for (i = 0; i < eventNames.length; i++) {\n    el.addEventListener(eventNames[i], handler);\n  }\n}\n\nfunction removeEventListeners (el, eventNames, handler) {\n  var i;\n  for (i = 0; i < eventNames.length; i++) {\n    el.removeEventListener(eventNames[i], handler);\n  }\n}\n\nfunction getRawProperty (el, path) {\n  var i;\n  var split;\n  var value;\n  split = splitDot(path);\n  value = el;\n  for (i = 0; i < split.length; i++) {\n    value = value[split[i]];\n  }\n  return value;\n}\n\nfunction setRawProperty (el, path, value, type) {\n  var i;\n  var split;\n  var propertyName;\n  var targetValue;\n\n  if (path.startsWith('object3D.rotation')) {\n    value = THREE.Math.degToRad(value);\n  }\n\n  // Walk.\n  split = splitDot(path);\n  targetValue = el;\n  for (i = 0; i < split.length - 1; i++) { targetValue = targetValue[split[i]]; }\n  propertyName = split[split.length - 1];\n\n  // Raw color.\n  if (type === TYPE_COLOR) {\n    if ('r' in targetValue[propertyName]) {\n      targetValue[propertyName].r = value.r;\n      targetValue[propertyName].g = value.g;\n      targetValue[propertyName].b = value.b;\n    } else {\n      targetValue[propertyName].x = value.r;\n      targetValue[propertyName].y = value.g;\n      targetValue[propertyName].z = value.b;\n    }\n    return;\n  }\n\n  targetValue[propertyName] = value;\n}\n\nfunction splitDot (path) {\n  if (path in splitCache) { return splitCache[path]; }\n  splitCache[path] = path.split('.');\n  return splitCache[path];\n}\n\nfunction isRawProperty (data) {\n  return data.isRawProperty || data.property.startsWith(STRING_COMPONENTS) ||\n         data.property.startsWith(STRING_OBJECT3D);\n}\n","var registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\n\n/**\n * Camera component.\n * Pairs along with camera system to handle tracking the active camera.\n */\nmodule.exports.Component = registerComponent('camera', {\n  schema: {\n    active: {default: true},\n    far: {default: 10000},\n    fov: {default: 80, min: 0},\n    near: {default: 0.005, min: 0},\n    spectator: {default: false},\n    zoom: {default: 1, min: 0}\n  },\n\n  /**\n   * Initialize three.js camera and add it to the entity.\n   * Add reference from scene to this entity as the camera.\n   */\n  init: function () {\n    var camera;\n    var el = this.el;\n\n    // Create camera.\n    camera = this.camera = new THREE.PerspectiveCamera();\n    el.setObject3D('camera', camera);\n  },\n\n  /**\n   * Update three.js camera.\n   */\n  update: function (oldData) {\n    var data = this.data;\n    var camera = this.camera;\n\n    // Update properties.\n    camera.aspect = data.aspect || (window.innerWidth / window.innerHeight);\n    camera.far = data.far;\n    camera.fov = data.fov;\n    camera.near = data.near;\n    camera.zoom = data.zoom;\n    camera.updateProjectionMatrix();\n\n    this.updateActiveCamera(oldData);\n    this.updateSpectatorCamera(oldData);\n  },\n\n  updateActiveCamera: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n    var system = this.system;\n    // Active property did not change.\n    if (oldData && oldData.active === data.active || data.spectator) { return; }\n\n    // If `active` property changes, or first update, handle active camera with system.\n    if (data.active && system.activeCameraEl !== el) {\n      // Camera enabled. Set camera to this camera.\n      system.setActiveCamera(el);\n    } else if (!data.active && system.activeCameraEl === el) {\n      // Camera disabled. Set camera to another camera.\n      system.disableActiveCamera();\n    }\n  },\n\n  updateSpectatorCamera: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n    var system = this.system;\n    // spectator property did not change.\n    if (oldData && oldData.spectator === data.spectator) { return; }\n\n    // If `spectator` property changes, or first update, handle spectator camera with system.\n    if (data.spectator && system.spectatorCameraEl !== el) {\n      // Camera enabled. Set camera to this camera.\n      system.setSpectatorCamera(el);\n    } else if (!data.spectator && system.spectatorCameraEl === el) {\n      // Camera disabled. Set camera to another camera.\n      system.disableSpectatorCamera();\n    }\n  },\n\n  /**\n   * Remove camera on remove (callback).\n   */\n  remove: function () {\n    this.el.removeObject3D('camera');\n  }\n});\n","/* global THREE */\nvar registerComponent = require('../core/component').registerComponent;\nvar utils = require('../utils/');\n\nvar bind = utils.bind;\n\nvar EVENTS = {\n  CLICK: 'click',\n  FUSING: 'fusing',\n  MOUSEENTER: 'mouseenter',\n  MOUSEDOWN: 'mousedown',\n  MOUSELEAVE: 'mouseleave',\n  MOUSEUP: 'mouseup'\n};\n\nvar STATES = {\n  FUSING: 'cursor-fusing',\n  HOVERING: 'cursor-hovering',\n  HOVERED: 'cursor-hovered'\n};\n\nvar CANVAS_EVENTS = {\n  DOWN: ['mousedown', 'touchstart'],\n  UP: ['mouseup', 'touchend']\n};\n\nvar CANVAS_HOVER_CLASS = 'a-mouse-cursor-hover';\n\n/**\n * Cursor component. Applies the raycaster component specifically for starting the raycaster\n * from the camera and pointing from camera's facing direction, and then only returning the\n * closest intersection. Cursor can be fine-tuned by setting raycaster properties.\n *\n * @member {object} fuseTimeout - Timeout to trigger fuse-click.\n * @member {Element} cursorDownEl - Entity that was last mousedowned during current click.\n * @member {object} intersection - Attributes of the current intersection event, including\n *         3D- and 2D-space coordinates. See: http://threejs.org/docs/api/core/Raycaster.html\n * @member {Element} intersectedEl - Currently-intersected entity. Used to keep track to\n *         emit events when unintersecting.\n */\nmodule.exports.Component = registerComponent('cursor', {\n  dependencies: ['raycaster'],\n\n  schema: {\n    downEvents: {default: []},\n    fuse: {default: utils.device.isMobile()},\n    fuseTimeout: {default: 1500, min: 0},\n    mouseCursorStylesEnabled: {default: true},\n    upEvents: {default: []},\n    rayOrigin: {default: 'entity', oneOf: ['mouse', 'entity']}\n  },\n\n  init: function () {\n    var self = this;\n\n    this.fuseTimeout = undefined;\n    this.cursorDownEl = null;\n    this.intersectedEl = null;\n    this.canvasBounds = document.body.getBoundingClientRect();\n\n    // Debounce.\n    this.updateCanvasBounds = utils.debounce(function updateCanvasBounds () {\n      self.canvasBounds = self.el.sceneEl.canvas.getBoundingClientRect();\n    }, 500);\n\n    this.eventDetail = {};\n    this.intersectedEventDetail = {cursorEl: this.el};\n\n    // Bind methods.\n    this.onCursorDown = bind(this.onCursorDown, this);\n    this.onCursorUp = bind(this.onCursorUp, this);\n    this.onIntersection = bind(this.onIntersection, this);\n    this.onIntersectionCleared = bind(this.onIntersectionCleared, this);\n    this.onMouseMove = bind(this.onMouseMove, this);\n  },\n\n  update: function (oldData) {\n    if (this.data.rayOrigin === oldData.rayOrigin) { return; }\n    this.updateMouseEventListeners();\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n  },\n\n  remove: function () {\n    var el = this.el;\n    el.removeState(STATES.HOVERING);\n    el.removeState(STATES.FUSING);\n    clearTimeout(this.fuseTimeout);\n    if (this.intersectedEl) { this.intersectedEl.removeState(STATES.HOVERED); }\n    this.removeEventListeners();\n  },\n\n  addEventListeners: function () {\n    var canvas;\n    var data = this.data;\n    var el = this.el;\n    var self = this;\n\n    function addCanvasListeners () {\n      canvas = el.sceneEl.canvas;\n      if (data.downEvents.length || data.upEvents.length) { return; }\n      CANVAS_EVENTS.DOWN.forEach(function (downEvent) {\n        canvas.addEventListener(downEvent, self.onCursorDown);\n      });\n      CANVAS_EVENTS.UP.forEach(function (upEvent) {\n        canvas.addEventListener(upEvent, self.onCursorUp);\n      });\n    }\n\n    canvas = el.sceneEl.canvas;\n    if (canvas) {\n      addCanvasListeners();\n    } else {\n      el.sceneEl.addEventListener('render-target-loaded', addCanvasListeners);\n    }\n\n    data.downEvents.forEach(function (downEvent) {\n      el.addEventListener(downEvent, self.onCursorDown);\n    });\n    data.upEvents.forEach(function (upEvent) {\n      el.addEventListener(upEvent, self.onCursorUp);\n    });\n    el.addEventListener('raycaster-intersection', this.onIntersection);\n    el.addEventListener('raycaster-intersection-cleared', this.onIntersectionCleared);\n\n    el.sceneEl.addEventListener('rendererresize', this.updateCanvasBounds);\n    window.addEventListener('resize', this.updateCanvasBounds);\n    window.addEventListener('scroll', this.updateCanvasBounds);\n\n    this.updateMouseEventListeners();\n  },\n\n  removeEventListeners: function () {\n    var canvas;\n    var data = this.data;\n    var el = this.el;\n    var self = this;\n\n    canvas = el.sceneEl.canvas;\n    if (canvas && !data.downEvents.length && !data.upEvents.length) {\n      CANVAS_EVENTS.DOWN.forEach(function (downEvent) {\n        canvas.removeEventListener(downEvent, self.onCursorDown);\n      });\n      CANVAS_EVENTS.UP.forEach(function (upEvent) {\n        canvas.removeEventListener(upEvent, self.onCursorUp);\n      });\n    }\n\n    data.downEvents.forEach(function (downEvent) {\n      el.removeEventListener(downEvent, self.onCursorDown);\n    });\n    data.upEvents.forEach(function (upEvent) {\n      el.removeEventListener(upEvent, self.onCursorUp);\n    });\n    el.removeEventListener('raycaster-intersection', this.onIntersection);\n    el.removeEventListener('raycaster-intersection-cleared', this.onIntersectionCleared);\n    canvas.removeEventListener('mousemove', this.onMouseMove);\n    canvas.removeEventListener('touchstart', this.onMouseMove);\n    canvas.removeEventListener('touchmove', this.onMouseMove);\n\n    el.sceneEl.removeEventListener('rendererresize', this.updateCanvasBounds);\n    window.removeEventListener('resize', this.updateCanvasBounds);\n    window.removeEventListener('scroll', this.updateCanvasBounds);\n  },\n\n  updateMouseEventListeners: function () {\n    var canvas;\n    var el = this.el;\n\n    canvas = el.sceneEl.canvas;\n    canvas.removeEventListener('mousemove', this.onMouseMove);\n    canvas.removeEventListener('touchmove', this.onMouseMove);\n    el.setAttribute('raycaster', 'useWorldCoordinates', false);\n    if (this.data.rayOrigin !== 'mouse') { return; }\n    canvas.addEventListener('mousemove', this.onMouseMove, false);\n    canvas.addEventListener('touchmove', this.onMouseMove, false);\n    el.setAttribute('raycaster', 'useWorldCoordinates', true);\n    this.updateCanvasBounds();\n  },\n\n  onMouseMove: (function () {\n    var direction = new THREE.Vector3();\n    var mouse = new THREE.Vector2();\n    var origin = new THREE.Vector3();\n    var rayCasterConfig = {origin: origin, direction: direction};\n\n    return function (evt) {\n      var bounds = this.canvasBounds;\n      var camera = this.el.sceneEl.camera;\n      var left;\n      var point;\n      var top;\n\n      camera.parent.updateMatrixWorld();\n\n      // Calculate mouse position based on the canvas element\n      if (evt.type === 'touchmove' || evt.type === 'touchstart') {\n        // Track the first touch for simplicity.\n        point = evt.touches.item(0);\n      } else {\n        point = evt;\n      }\n\n      left = point.clientX - bounds.left;\n      top = point.clientY - bounds.top;\n      mouse.x = (left / bounds.width) * 2 - 1;\n      mouse.y = -(top / bounds.height) * 2 + 1;\n\n      origin.setFromMatrixPosition(camera.matrixWorld);\n      direction.set(mouse.x, mouse.y, 0.5).unproject(camera).sub(origin).normalize();\n      this.el.setAttribute('raycaster', rayCasterConfig);\n      if (evt.type === 'touchmove') { evt.preventDefault(); }\n    };\n  })(),\n\n  /**\n   * Trigger mousedown and keep track of the mousedowned entity.\n   */\n  onCursorDown: function (evt) {\n    // Raycast again for touch.\n    if (this.data.rayOrigin === 'mouse' && evt.type === 'touchstart') {\n      this.onMouseMove(evt);\n      this.el.components.raycaster.checkIntersections();\n      evt.preventDefault();\n    }\n\n    this.twoWayEmit(EVENTS.MOUSEDOWN);\n    this.cursorDownEl = this.intersectedEl;\n  },\n\n  /**\n   * Trigger mouseup if:\n   * - Not fusing (mobile has no mouse).\n   * - Currently intersecting an entity.\n   * - Currently-intersected entity is the same as the one when mousedown was triggered,\n   *   in case user mousedowned one entity, dragged to another, and mouseupped.\n   */\n  onCursorUp: function (evt) {\n    var data = this.data;\n    this.twoWayEmit(EVENTS.MOUSEUP);\n\n    // If intersected entity has changed since the cursorDown, still emit mouseUp on the\n    // previously cursorUp entity.\n    if (this.cursorDownEl && this.cursorDownEl !== this.intersectedEl) {\n      this.intersectedEventDetail.intersection = null;\n      this.cursorDownEl.emit(EVENTS.MOUSEUP, this.intersectedEventDetail);\n    }\n\n    if ((!data.fuse || data.rayOrigin === 'mouse') &&\n        this.intersectedEl && this.cursorDownEl === this.intersectedEl) {\n      this.twoWayEmit(EVENTS.CLICK);\n    }\n\n    this.cursorDownEl = null;\n    if (evt.type === 'touchend') { evt.preventDefault(); }\n  },\n\n  /**\n   * Handle intersection.\n   */\n  onIntersection: function (evt) {\n    var currentIntersection;\n    var cursorEl = this.el;\n    var index;\n    var intersectedEl;\n    var intersection;\n\n    // Select closest object, excluding the cursor.\n    index = evt.detail.els[0] === cursorEl ? 1 : 0;\n    intersection = evt.detail.intersections[index];\n    intersectedEl = evt.detail.els[index];\n\n    // If cursor is the only intersected object, ignore the event.\n    if (!intersectedEl) { return; }\n\n    // Already intersecting this entity.\n    if (this.intersectedEl === intersectedEl) { return; }\n\n    // Ignore events further away than active intersection.\n    if (this.intersectedEl) {\n      currentIntersection = this.el.components.raycaster.getIntersection(this.intersectedEl);\n      if (currentIntersection && currentIntersection.distance <= intersection.distance) { return; }\n    }\n\n    // Unset current intersection.\n    this.clearCurrentIntersection(true);\n\n    this.setIntersection(intersectedEl, intersection);\n  },\n\n  /**\n   * Handle intersection cleared.\n   */\n  onIntersectionCleared: function (evt) {\n    var clearedEls = evt.detail.clearedEls;\n    // Check if the current intersection has ended\n    if (clearedEls.indexOf(this.intersectedEl) === -1) { return; }\n    this.clearCurrentIntersection();\n  },\n\n  setIntersection: function (intersectedEl, intersection) {\n    var cursorEl = this.el;\n    var data = this.data;\n    var self = this;\n\n    // Already intersecting.\n    if (this.intersectedEl === intersectedEl) { return; }\n\n    // Set new intersection.\n    this.intersectedEl = intersectedEl;\n\n    // Hovering.\n    cursorEl.addState(STATES.HOVERING);\n    intersectedEl.addState(STATES.HOVERED);\n    this.twoWayEmit(EVENTS.MOUSEENTER);\n\n    if (this.data.mouseCursorStylesEnabled && this.data.rayOrigin === 'mouse') {\n      this.el.sceneEl.canvas.classList.add(CANVAS_HOVER_CLASS);\n    }\n\n    // Begin fuse if necessary.\n    if (data.fuseTimeout === 0 || !data.fuse) { return; }\n    cursorEl.addState(STATES.FUSING);\n    this.twoWayEmit(EVENTS.FUSING);\n    this.fuseTimeout = setTimeout(function fuse () {\n      cursorEl.removeState(STATES.FUSING);\n      self.twoWayEmit(EVENTS.CLICK);\n    }, data.fuseTimeout);\n  },\n\n  clearCurrentIntersection: function (ignoreRemaining) {\n    var index;\n    var intersection;\n    var intersections;\n    var cursorEl = this.el;\n\n    // Nothing to be cleared.\n    if (!this.intersectedEl) { return; }\n\n    // No longer hovering (or fusing).\n    this.intersectedEl.removeState(STATES.HOVERED);\n    cursorEl.removeState(STATES.HOVERING);\n    cursorEl.removeState(STATES.FUSING);\n    this.twoWayEmit(EVENTS.MOUSELEAVE);\n\n    if (this.data.mouseCursorStylesEnabled && this.data.rayOrigin === 'mouse') {\n      this.el.sceneEl.canvas.classList.remove(CANVAS_HOVER_CLASS);\n    }\n\n    // Unset intersected entity (after emitting the event).\n    this.intersectedEl = null;\n\n    // Clear fuseTimeout.\n    clearTimeout(this.fuseTimeout);\n\n    // Set intersection to another raycasted element if any.\n    if (ignoreRemaining === true) { return; }\n    intersections = this.el.components.raycaster.intersections;\n    if (intersections.length === 0) { return; }\n    // Exclude the cursor.\n    index = intersections[0].object.el === cursorEl ? 1 : 0;\n    intersection = intersections[index];\n    if (!intersection) { return; }\n    this.setIntersection(intersection.object.el, intersection);\n  },\n\n  /**\n   * Helper to emit on both the cursor and the intersected entity (if exists).\n   */\n  twoWayEmit: function (evtName) {\n    var el = this.el;\n    var intersectedEl = this.intersectedEl;\n    var intersection;\n\n    intersection = this.el.components.raycaster.getIntersection(intersectedEl);\n    this.eventDetail.intersectedEl = intersectedEl;\n    this.eventDetail.intersection = intersection;\n    el.emit(evtName, this.eventDetail);\n\n    if (!intersectedEl) { return; }\n\n    this.intersectedEventDetail.intersection = intersection;\n    intersectedEl.emit(evtName, this.intersectedEventDetail);\n  }\n});\n","var geometries = require('../core/geometry').geometries;\nvar geometryNames = require('../core/geometry').geometryNames;\nvar registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\n\nvar dummyGeometry = new THREE.Geometry();\n\n/**\n * Geometry component. Combined with material component to make a mesh in 3D object.\n * Extended with registered geometries.\n */\nmodule.exports.Component = registerComponent('geometry', {\n  schema: {\n    buffer: {default: true},\n    primitive: {default: 'box', oneOf: geometryNames, schemaChange: true},\n    skipCache: {default: false}\n  },\n\n  init: function () {\n    this.geometry = null;\n  },\n\n  /**\n   * Talk to geometry system to get or create geometry.\n   */\n  update: function (previousData) {\n    var data = this.data;\n    var el = this.el;\n    var mesh;\n    var system = this.system;\n\n    // Dispose old geometry if we created one.\n    if (this.geometry) {\n      system.unuseGeometry(previousData);\n      this.geometry = null;\n    }\n\n    // Create new geometry.\n    this.geometry = system.getOrCreateGeometry(data);\n\n    // Set on mesh. If mesh does not exist, create it.\n    mesh = el.getObject3D('mesh');\n    if (mesh) {\n      mesh.geometry = this.geometry;\n    } else {\n      mesh = new THREE.Mesh();\n      mesh.geometry = this.geometry;\n      el.setObject3D('mesh', mesh);\n    }\n  },\n\n  /**\n   * Tell geometry system that entity is no longer using the geometry.\n   * Unset the geometry on the mesh\n   */\n  remove: function () {\n    this.system.unuseGeometry(this.data);\n    this.el.getObject3D('mesh').geometry = dummyGeometry;\n    this.geometry = null;\n  },\n\n  /**\n   * Update geometry component schema based on geometry type.\n   */\n  updateSchema: function (data) {\n    var currentGeometryType = this.oldData && this.oldData.primitive;\n    var newGeometryType = data.primitive;\n    var schema = geometries[newGeometryType] && geometries[newGeometryType].schema;\n\n    // Geometry has no schema.\n    if (!schema) { throw new Error('Unknown geometry schema `' + newGeometryType + '`'); }\n    // Nothing has changed.\n    if (currentGeometryType && currentGeometryType === newGeometryType) { return; }\n\n    this.extendSchema(schema);\n  }\n});\n","var registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\nvar utils = require('../utils/');\nvar warn = utils.debug('components:gltf-model:warn');\n\n/**\n * glTF model loader.\n */\nmodule.exports.Component = registerComponent('gltf-model', {\n  schema: {type: 'model'},\n\n  init: function () {\n    var dracoLoader = this.system.getDRACOLoader();\n    this.model = null;\n    this.loader = new THREE.GLTFLoader();\n    if (dracoLoader) {\n      this.loader.setDRACOLoader(dracoLoader);\n    }\n  },\n\n  update: function () {\n    var self = this;\n    var el = this.el;\n    var src = this.data;\n\n    if (!src) { return; }\n\n    this.remove();\n\n    this.loader.load(src, function gltfLoaded (gltfModel) {\n      self.model = gltfModel.scene || gltfModel.scenes[0];\n      self.model.animations = gltfModel.animations;\n      el.setObject3D('mesh', self.model);\n      el.emit('model-loaded', {format: 'gltf', model: self.model});\n    }, undefined /* onProgress */, function gltfFailed (error) {\n      var message = (error && error.message) ? error.message : 'Failed to load glTF model';\n      warn(message);\n      el.emit('model-error', {format: 'gltf', src: src});\n    });\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.el.removeObject3D('mesh');\n  }\n});\n"],"sourceRoot":""}